[{"name":"ABSTRACT","description":"ktast.ast.Node.KeywordModifier.Token.ABSTRACT","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-a-b-s-t-r-a-c-t/index.html","searchKeys":["ABSTRACT","ABSTRACT","ktast.ast.Node.KeywordModifier.Token.ABSTRACT"]},{"name":"ACTUAL","description":"ktast.ast.Node.KeywordModifier.Token.ACTUAL","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-a-c-t-u-a-l/index.html","searchKeys":["ACTUAL","ACTUAL","ktast.ast.Node.KeywordModifier.Token.ACTUAL"]},{"name":"ADD","description":"ktast.ast.Node.BinaryExpression.Operator.Token.ADD","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-a-d-d/index.html","searchKeys":["ADD","ADD","ktast.ast.Node.BinaryExpression.Operator.Token.ADD"]},{"name":"ADD_ASSN","description":"ktast.ast.Node.BinaryExpression.Operator.Token.ADD_ASSN","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-a-d-d_-a-s-s-n/index.html","searchKeys":["ADD_ASSN","ADD_ASSN","ktast.ast.Node.BinaryExpression.Operator.Token.ADD_ASSN"]},{"name":"AFTER","description":"ktast.ast.Dumper.ExtraType.AFTER","location":"ast/ktast.ast/-dumper/-extra-type/-a-f-t-e-r/index.html","searchKeys":["AFTER","AFTER","ktast.ast.Dumper.ExtraType.AFTER"]},{"name":"AND","description":"ktast.ast.Node.BinaryExpression.Operator.Token.AND","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-a-n-d/index.html","searchKeys":["AND","AND","ktast.ast.Node.BinaryExpression.Operator.Token.AND"]},{"name":"ANNOTATION","description":"ktast.ast.Node.KeywordModifier.Token.ANNOTATION","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-a-n-n-o-t-a-t-i-o-n/index.html","searchKeys":["ANNOTATION","ANNOTATION","ktast.ast.Node.KeywordModifier.Token.ANNOTATION"]},{"name":"AS","description":"ktast.ast.Node.BinaryTypeExpression.Operator.Token.AS","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/-token/-a-s/index.html","searchKeys":["AS","AS","ktast.ast.Node.BinaryTypeExpression.Operator.Token.AS"]},{"name":"ASSN","description":"ktast.ast.Node.BinaryExpression.Operator.Token.ASSN","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-a-s-s-n/index.html","searchKeys":["ASSN","ASSN","ktast.ast.Node.BinaryExpression.Operator.Token.ASSN"]},{"name":"AS_SAFE","description":"ktast.ast.Node.BinaryTypeExpression.Operator.Token.AS_SAFE","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/-token/-a-s_-s-a-f-e/index.html","searchKeys":["AS_SAFE","AS_SAFE","ktast.ast.Node.BinaryTypeExpression.Operator.Token.AS_SAFE"]},{"name":"BEFORE","description":"ktast.ast.Dumper.ExtraType.BEFORE","location":"ast/ktast.ast/-dumper/-extra-type/-b-e-f-o-r-e/index.html","searchKeys":["BEFORE","BEFORE","ktast.ast.Dumper.ExtraType.BEFORE"]},{"name":"BOOLEAN","description":"ktast.ast.Node.ConstantLiteralExpression.Form.BOOLEAN","location":"ast/ktast.ast/-node/-constant-literal-expression/-form/-b-o-o-l-e-a-n/index.html","searchKeys":["BOOLEAN","BOOLEAN","ktast.ast.Node.ConstantLiteralExpression.Form.BOOLEAN"]},{"name":"CHAR","description":"ktast.ast.Node.ConstantLiteralExpression.Form.CHAR","location":"ast/ktast.ast/-node/-constant-literal-expression/-form/-c-h-a-r/index.html","searchKeys":["CHAR","CHAR","ktast.ast.Node.ConstantLiteralExpression.Form.CHAR"]},{"name":"CLASS","description":"ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Token.CLASS","location":"ast/ktast.ast/-node/-class-declaration/-declaration-keyword/-token/-c-l-a-s-s/index.html","searchKeys":["CLASS","CLASS","ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Token.CLASS"]},{"name":"COL","description":"ktast.ast.Node.BinaryTypeExpression.Operator.Token.COL","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/-token/-c-o-l/index.html","searchKeys":["COL","COL","ktast.ast.Node.BinaryTypeExpression.Operator.Token.COL"]},{"name":"COMPANION","description":"ktast.ast.Node.KeywordModifier.Token.COMPANION","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-c-o-m-p-a-n-i-o-n/index.html","searchKeys":["COMPANION","COMPANION","ktast.ast.Node.KeywordModifier.Token.COMPANION"]},{"name":"CONST","description":"ktast.ast.Node.KeywordModifier.Token.CONST","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-c-o-n-s-t/index.html","searchKeys":["CONST","CONST","ktast.ast.Node.KeywordModifier.Token.CONST"]},{"name":"CROSSINLINE","description":"ktast.ast.Node.KeywordModifier.Token.CROSSINLINE","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-c-r-o-s-s-i-n-l-i-n-e/index.html","searchKeys":["CROSSINLINE","CROSSINLINE","ktast.ast.Node.KeywordModifier.Token.CROSSINLINE"]},{"name":"DATA","description":"ktast.ast.Node.KeywordModifier.Token.DATA","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-d-a-t-a/index.html","searchKeys":["DATA","DATA","ktast.ast.Node.KeywordModifier.Token.DATA"]},{"name":"DEC","description":"ktast.ast.Node.UnaryExpression.Operator.Token.DEC","location":"ast/ktast.ast/-node/-unary-expression/-operator/-token/-d-e-c/index.html","searchKeys":["DEC","DEC","ktast.ast.Node.UnaryExpression.Operator.Token.DEC"]},{"name":"DELEGATE","description":"ktast.ast.Node.AnnotationSet.Target.Token.DELEGATE","location":"ast/ktast.ast/-node/-annotation-set/-target/-token/-d-e-l-e-g-a-t-e/index.html","searchKeys":["DELEGATE","DELEGATE","ktast.ast.Node.AnnotationSet.Target.Token.DELEGATE"]},{"name":"DIV","description":"ktast.ast.Node.BinaryExpression.Operator.Token.DIV","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-d-i-v/index.html","searchKeys":["DIV","DIV","ktast.ast.Node.BinaryExpression.Operator.Token.DIV"]},{"name":"DIV_ASSN","description":"ktast.ast.Node.BinaryExpression.Operator.Token.DIV_ASSN","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-d-i-v_-a-s-s-n/index.html","searchKeys":["DIV_ASSN","DIV_ASSN","ktast.ast.Node.BinaryExpression.Operator.Token.DIV_ASSN"]},{"name":"DOT","description":"ktast.ast.Node.BinaryExpression.Operator.Token.DOT","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-d-o-t/index.html","searchKeys":["DOT","DOT","ktast.ast.Node.BinaryExpression.Operator.Token.DOT"]},{"name":"DOT_SAFE","description":"ktast.ast.Node.BinaryExpression.Operator.Token.DOT_SAFE","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-d-o-t_-s-a-f-e/index.html","searchKeys":["DOT_SAFE","DOT_SAFE","ktast.ast.Node.BinaryExpression.Operator.Token.DOT_SAFE"]},{"name":"ELVIS","description":"ktast.ast.Node.BinaryExpression.Operator.Token.ELVIS","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-e-l-v-i-s/index.html","searchKeys":["ELVIS","ELVIS","ktast.ast.Node.BinaryExpression.Operator.Token.ELVIS"]},{"name":"ENUM","description":"ktast.ast.Node.KeywordModifier.Token.ENUM","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-e-n-u-m/index.html","searchKeys":["ENUM","ENUM","ktast.ast.Node.KeywordModifier.Token.ENUM"]},{"name":"EQ","description":"ktast.ast.Node.BinaryExpression.Operator.Token.EQ","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-e-q/index.html","searchKeys":["EQ","EQ","ktast.ast.Node.BinaryExpression.Operator.Token.EQ"]},{"name":"EXPECT","description":"ktast.ast.Node.KeywordModifier.Token.EXPECT","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-e-x-p-e-c-t/index.html","searchKeys":["EXPECT","EXPECT","ktast.ast.Node.KeywordModifier.Token.EXPECT"]},{"name":"EXTERNAL","description":"ktast.ast.Node.KeywordModifier.Token.EXTERNAL","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-e-x-t-e-r-n-a-l/index.html","searchKeys":["EXTERNAL","EXTERNAL","ktast.ast.Node.KeywordModifier.Token.EXTERNAL"]},{"name":"FIELD","description":"ktast.ast.Node.AnnotationSet.Target.Token.FIELD","location":"ast/ktast.ast/-node/-annotation-set/-target/-token/-f-i-e-l-d/index.html","searchKeys":["FIELD","FIELD","ktast.ast.Node.AnnotationSet.Target.Token.FIELD"]},{"name":"FILE","description":"ktast.ast.Node.AnnotationSet.Target.Token.FILE","location":"ast/ktast.ast/-node/-annotation-set/-target/-token/-f-i-l-e/index.html","searchKeys":["FILE","FILE","ktast.ast.Node.AnnotationSet.Target.Token.FILE"]},{"name":"FINAL","description":"ktast.ast.Node.KeywordModifier.Token.FINAL","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-f-i-n-a-l/index.html","searchKeys":["FINAL","FINAL","ktast.ast.Node.KeywordModifier.Token.FINAL"]},{"name":"FLOAT","description":"ktast.ast.Node.ConstantLiteralExpression.Form.FLOAT","location":"ast/ktast.ast/-node/-constant-literal-expression/-form/-f-l-o-a-t/index.html","searchKeys":["FLOAT","FLOAT","ktast.ast.Node.ConstantLiteralExpression.Form.FLOAT"]},{"name":"FUN","description":"ktast.ast.Node.KeywordModifier.Token.FUN","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-f-u-n/index.html","searchKeys":["FUN","FUN","ktast.ast.Node.KeywordModifier.Token.FUN"]},{"name":"GET","description":"ktast.ast.Node.AnnotationSet.Target.Token.GET","location":"ast/ktast.ast/-node/-annotation-set/-target/-token/-g-e-t/index.html","searchKeys":["GET","GET","ktast.ast.Node.AnnotationSet.Target.Token.GET"]},{"name":"GT","description":"ktast.ast.Node.BinaryExpression.Operator.Token.GT","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-g-t/index.html","searchKeys":["GT","GT","ktast.ast.Node.BinaryExpression.Operator.Token.GT"]},{"name":"GTE","description":"ktast.ast.Node.BinaryExpression.Operator.Token.GTE","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-g-t-e/index.html","searchKeys":["GTE","GTE","ktast.ast.Node.BinaryExpression.Operator.Token.GTE"]},{"name":"IN","description":"ktast.ast.Node.BinaryExpression.Operator.Token.IN","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-i-n/index.html","searchKeys":["IN","IN","ktast.ast.Node.BinaryExpression.Operator.Token.IN"]},{"name":"IN","description":"ktast.ast.Node.KeywordModifier.Token.IN","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-i-n/index.html","searchKeys":["IN","IN","ktast.ast.Node.KeywordModifier.Token.IN"]},{"name":"INC","description":"ktast.ast.Node.UnaryExpression.Operator.Token.INC","location":"ast/ktast.ast/-node/-unary-expression/-operator/-token/-i-n-c/index.html","searchKeys":["INC","INC","ktast.ast.Node.UnaryExpression.Operator.Token.INC"]},{"name":"INFIX","description":"ktast.ast.Node.KeywordModifier.Token.INFIX","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-i-n-f-i-x/index.html","searchKeys":["INFIX","INFIX","ktast.ast.Node.KeywordModifier.Token.INFIX"]},{"name":"INLINE","description":"ktast.ast.Node.KeywordModifier.Token.INLINE","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-i-n-l-i-n-e/index.html","searchKeys":["INLINE","INLINE","ktast.ast.Node.KeywordModifier.Token.INLINE"]},{"name":"INNER","description":"ktast.ast.Node.KeywordModifier.Token.INNER","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-i-n-n-e-r/index.html","searchKeys":["INNER","INNER","ktast.ast.Node.KeywordModifier.Token.INNER"]},{"name":"INT","description":"ktast.ast.Node.ConstantLiteralExpression.Form.INT","location":"ast/ktast.ast/-node/-constant-literal-expression/-form/-i-n-t/index.html","searchKeys":["INT","INT","ktast.ast.Node.ConstantLiteralExpression.Form.INT"]},{"name":"INTERFACE","description":"ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Token.INTERFACE","location":"ast/ktast.ast/-node/-class-declaration/-declaration-keyword/-token/-i-n-t-e-r-f-a-c-e/index.html","searchKeys":["INTERFACE","INTERFACE","ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Token.INTERFACE"]},{"name":"INTERNAL","description":"ktast.ast.Node.KeywordModifier.Token.INTERNAL","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-i-n-t-e-r-n-a-l/index.html","searchKeys":["INTERNAL","INTERNAL","ktast.ast.Node.KeywordModifier.Token.INTERNAL"]},{"name":"IS","description":"ktast.ast.Node.BinaryTypeExpression.Operator.Token.IS","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/-token/-i-s/index.html","searchKeys":["IS","IS","ktast.ast.Node.BinaryTypeExpression.Operator.Token.IS"]},{"name":"LATEINIT","description":"ktast.ast.Node.KeywordModifier.Token.LATEINIT","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-l-a-t-e-i-n-i-t/index.html","searchKeys":["LATEINIT","LATEINIT","ktast.ast.Node.KeywordModifier.Token.LATEINIT"]},{"name":"LT","description":"ktast.ast.Node.BinaryExpression.Operator.Token.LT","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-l-t/index.html","searchKeys":["LT","LT","ktast.ast.Node.BinaryExpression.Operator.Token.LT"]},{"name":"LTE","description":"ktast.ast.Node.BinaryExpression.Operator.Token.LTE","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-l-t-e/index.html","searchKeys":["LTE","LTE","ktast.ast.Node.BinaryExpression.Operator.Token.LTE"]},{"name":"MOD","description":"ktast.ast.Node.BinaryExpression.Operator.Token.MOD","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-m-o-d/index.html","searchKeys":["MOD","MOD","ktast.ast.Node.BinaryExpression.Operator.Token.MOD"]},{"name":"MOD_ASSN","description":"ktast.ast.Node.BinaryExpression.Operator.Token.MOD_ASSN","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-m-o-d_-a-s-s-n/index.html","searchKeys":["MOD_ASSN","MOD_ASSN","ktast.ast.Node.BinaryExpression.Operator.Token.MOD_ASSN"]},{"name":"MUL","description":"ktast.ast.Node.BinaryExpression.Operator.Token.MUL","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-m-u-l/index.html","searchKeys":["MUL","MUL","ktast.ast.Node.BinaryExpression.Operator.Token.MUL"]},{"name":"MUL_ASSN","description":"ktast.ast.Node.BinaryExpression.Operator.Token.MUL_ASSN","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-m-u-l_-a-s-s-n/index.html","searchKeys":["MUL_ASSN","MUL_ASSN","ktast.ast.Node.BinaryExpression.Operator.Token.MUL_ASSN"]},{"name":"NEG","description":"ktast.ast.Node.UnaryExpression.Operator.Token.NEG","location":"ast/ktast.ast/-node/-unary-expression/-operator/-token/-n-e-g/index.html","searchKeys":["NEG","NEG","ktast.ast.Node.UnaryExpression.Operator.Token.NEG"]},{"name":"NEQ","description":"ktast.ast.Node.BinaryExpression.Operator.Token.NEQ","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-n-e-q/index.html","searchKeys":["NEQ","NEQ","ktast.ast.Node.BinaryExpression.Operator.Token.NEQ"]},{"name":"NOINLINE","description":"ktast.ast.Node.KeywordModifier.Token.NOINLINE","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-n-o-i-n-l-i-n-e/index.html","searchKeys":["NOINLINE","NOINLINE","ktast.ast.Node.KeywordModifier.Token.NOINLINE"]},{"name":"NOT","description":"ktast.ast.Node.UnaryExpression.Operator.Token.NOT","location":"ast/ktast.ast/-node/-unary-expression/-operator/-token/-n-o-t/index.html","searchKeys":["NOT","NOT","ktast.ast.Node.UnaryExpression.Operator.Token.NOT"]},{"name":"NOT_IN","description":"ktast.ast.Node.BinaryExpression.Operator.Token.NOT_IN","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-n-o-t_-i-n/index.html","searchKeys":["NOT_IN","NOT_IN","ktast.ast.Node.BinaryExpression.Operator.Token.NOT_IN"]},{"name":"NOT_IS","description":"ktast.ast.Node.BinaryTypeExpression.Operator.Token.NOT_IS","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/-token/-n-o-t_-i-s/index.html","searchKeys":["NOT_IS","NOT_IS","ktast.ast.Node.BinaryTypeExpression.Operator.Token.NOT_IS"]},{"name":"NULL","description":"ktast.ast.Node.ConstantLiteralExpression.Form.NULL","location":"ast/ktast.ast/-node/-constant-literal-expression/-form/-n-u-l-l/index.html","searchKeys":["NULL","NULL","ktast.ast.Node.ConstantLiteralExpression.Form.NULL"]},{"name":"NULL_DEREF","description":"ktast.ast.Node.UnaryExpression.Operator.Token.NULL_DEREF","location":"ast/ktast.ast/-node/-unary-expression/-operator/-token/-n-u-l-l_-d-e-r-e-f/index.html","searchKeys":["NULL_DEREF","NULL_DEREF","ktast.ast.Node.UnaryExpression.Operator.Token.NULL_DEREF"]},{"name":"OBJECT","description":"ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Token.OBJECT","location":"ast/ktast.ast/-node/-class-declaration/-declaration-keyword/-token/-o-b-j-e-c-t/index.html","searchKeys":["OBJECT","OBJECT","ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Token.OBJECT"]},{"name":"OPEN","description":"ktast.ast.Node.KeywordModifier.Token.OPEN","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-o-p-e-n/index.html","searchKeys":["OPEN","OPEN","ktast.ast.Node.KeywordModifier.Token.OPEN"]},{"name":"OPERATOR","description":"ktast.ast.Node.KeywordModifier.Token.OPERATOR","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-o-p-e-r-a-t-o-r/index.html","searchKeys":["OPERATOR","OPERATOR","ktast.ast.Node.KeywordModifier.Token.OPERATOR"]},{"name":"OR","description":"ktast.ast.Node.BinaryExpression.Operator.Token.OR","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-o-r/index.html","searchKeys":["OR","OR","ktast.ast.Node.BinaryExpression.Operator.Token.OR"]},{"name":"OUT","description":"ktast.ast.Node.KeywordModifier.Token.OUT","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-o-u-t/index.html","searchKeys":["OUT","OUT","ktast.ast.Node.KeywordModifier.Token.OUT"]},{"name":"OVERRIDE","description":"ktast.ast.Node.KeywordModifier.Token.OVERRIDE","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-o-v-e-r-r-i-d-e/index.html","searchKeys":["OVERRIDE","OVERRIDE","ktast.ast.Node.KeywordModifier.Token.OVERRIDE"]},{"name":"PARAM","description":"ktast.ast.Node.AnnotationSet.Target.Token.PARAM","location":"ast/ktast.ast/-node/-annotation-set/-target/-token/-p-a-r-a-m/index.html","searchKeys":["PARAM","PARAM","ktast.ast.Node.AnnotationSet.Target.Token.PARAM"]},{"name":"POS","description":"ktast.ast.Node.UnaryExpression.Operator.Token.POS","location":"ast/ktast.ast/-node/-unary-expression/-operator/-token/-p-o-s/index.html","searchKeys":["POS","POS","ktast.ast.Node.UnaryExpression.Operator.Token.POS"]},{"name":"PRIVATE","description":"ktast.ast.Node.KeywordModifier.Token.PRIVATE","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-p-r-i-v-a-t-e/index.html","searchKeys":["PRIVATE","PRIVATE","ktast.ast.Node.KeywordModifier.Token.PRIVATE"]},{"name":"PROPERTY","description":"ktast.ast.Node.AnnotationSet.Target.Token.PROPERTY","location":"ast/ktast.ast/-node/-annotation-set/-target/-token/-p-r-o-p-e-r-t-y/index.html","searchKeys":["PROPERTY","PROPERTY","ktast.ast.Node.AnnotationSet.Target.Token.PROPERTY"]},{"name":"PROTECTED","description":"ktast.ast.Node.KeywordModifier.Token.PROTECTED","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-p-r-o-t-e-c-t-e-d/index.html","searchKeys":["PROTECTED","PROTECTED","ktast.ast.Node.KeywordModifier.Token.PROTECTED"]},{"name":"PUBLIC","description":"ktast.ast.Node.KeywordModifier.Token.PUBLIC","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-p-u-b-l-i-c/index.html","searchKeys":["PUBLIC","PUBLIC","ktast.ast.Node.KeywordModifier.Token.PUBLIC"]},{"name":"RANGE","description":"ktast.ast.Node.BinaryExpression.Operator.Token.RANGE","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-r-a-n-g-e/index.html","searchKeys":["RANGE","RANGE","ktast.ast.Node.BinaryExpression.Operator.Token.RANGE"]},{"name":"RECEIVER","description":"ktast.ast.Node.AnnotationSet.Target.Token.RECEIVER","location":"ast/ktast.ast/-node/-annotation-set/-target/-token/-r-e-c-e-i-v-e-r/index.html","searchKeys":["RECEIVER","RECEIVER","ktast.ast.Node.AnnotationSet.Target.Token.RECEIVER"]},{"name":"REIFIED","description":"ktast.ast.Node.KeywordModifier.Token.REIFIED","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-r-e-i-f-i-e-d/index.html","searchKeys":["REIFIED","REIFIED","ktast.ast.Node.KeywordModifier.Token.REIFIED"]},{"name":"SAFE","description":"ktast.ast.Node.BinaryExpression.Operator.Token.SAFE","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-s-a-f-e/index.html","searchKeys":["SAFE","SAFE","ktast.ast.Node.BinaryExpression.Operator.Token.SAFE"]},{"name":"SEALED","description":"ktast.ast.Node.KeywordModifier.Token.SEALED","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-s-e-a-l-e-d/index.html","searchKeys":["SEALED","SEALED","ktast.ast.Node.KeywordModifier.Token.SEALED"]},{"name":"SET","description":"ktast.ast.Node.AnnotationSet.Target.Token.SET","location":"ast/ktast.ast/-node/-annotation-set/-target/-token/-s-e-t/index.html","searchKeys":["SET","SET","ktast.ast.Node.AnnotationSet.Target.Token.SET"]},{"name":"SETPARAM","description":"ktast.ast.Node.AnnotationSet.Target.Token.SETPARAM","location":"ast/ktast.ast/-node/-annotation-set/-target/-token/-s-e-t-p-a-r-a-m/index.html","searchKeys":["SETPARAM","SETPARAM","ktast.ast.Node.AnnotationSet.Target.Token.SETPARAM"]},{"name":"SUB","description":"ktast.ast.Node.BinaryExpression.Operator.Token.SUB","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-s-u-b/index.html","searchKeys":["SUB","SUB","ktast.ast.Node.BinaryExpression.Operator.Token.SUB"]},{"name":"SUB_ASSN","description":"ktast.ast.Node.BinaryExpression.Operator.Token.SUB_ASSN","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-s-u-b_-a-s-s-n/index.html","searchKeys":["SUB_ASSN","SUB_ASSN","ktast.ast.Node.BinaryExpression.Operator.Token.SUB_ASSN"]},{"name":"SUPER","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Token.SUPER","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-target/-token/-s-u-p-e-r/index.html","searchKeys":["SUPER","SUPER","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Token.SUPER"]},{"name":"SUSPEND","description":"ktast.ast.Node.KeywordModifier.Token.SUSPEND","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-s-u-s-p-e-n-d/index.html","searchKeys":["SUSPEND","SUSPEND","ktast.ast.Node.KeywordModifier.Token.SUSPEND"]},{"name":"TAILREC","description":"ktast.ast.Node.KeywordModifier.Token.TAILREC","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-t-a-i-l-r-e-c/index.html","searchKeys":["TAILREC","TAILREC","ktast.ast.Node.KeywordModifier.Token.TAILREC"]},{"name":"THIS","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Token.THIS","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-target/-token/-t-h-i-s/index.html","searchKeys":["THIS","THIS","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Token.THIS"]},{"name":"UNTIL","description":"ktast.ast.Node.BinaryExpression.Operator.Token.UNTIL","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/-u-n-t-i-l/index.html","searchKeys":["UNTIL","UNTIL","ktast.ast.Node.BinaryExpression.Operator.Token.UNTIL"]},{"name":"VAL","description":"ktast.ast.Node.PropertyDeclaration.ValOrVar.Token.VAL","location":"ast/ktast.ast/-node/-property-declaration/-val-or-var/-token/-v-a-l/index.html","searchKeys":["VAL","VAL","ktast.ast.Node.PropertyDeclaration.ValOrVar.Token.VAL"]},{"name":"VALUE","description":"ktast.ast.Node.KeywordModifier.Token.VALUE","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-v-a-l-u-e/index.html","searchKeys":["VALUE","VALUE","ktast.ast.Node.KeywordModifier.Token.VALUE"]},{"name":"VAR","description":"ktast.ast.Node.PropertyDeclaration.ValOrVar.Token.VAR","location":"ast/ktast.ast/-node/-property-declaration/-val-or-var/-token/-v-a-r/index.html","searchKeys":["VAR","VAR","ktast.ast.Node.PropertyDeclaration.ValOrVar.Token.VAR"]},{"name":"VARARG","description":"ktast.ast.Node.KeywordModifier.Token.VARARG","location":"ast/ktast.ast/-node/-keyword-modifier/-token/-v-a-r-a-r-g/index.html","searchKeys":["VARARG","VARARG","ktast.ast.Node.KeywordModifier.Token.VARARG"]},{"name":"WITHIN","description":"ktast.ast.Dumper.ExtraType.WITHIN","location":"ast/ktast.ast/-dumper/-extra-type/-w-i-t-h-i-n/index.html","searchKeys":["WITHIN","WITHIN","ktast.ast.Dumper.ExtraType.WITHIN"]},{"name":"abstract class CommaSeparatedNodeList<out E : Node>(prefix: String, suffix: String) : Node.NodeList<E> ","description":"ktast.ast.Node.CommaSeparatedNodeList","location":"ast/ktast.ast/-node/-comma-separated-node-list/index.html","searchKeys":["CommaSeparatedNodeList","abstract class CommaSeparatedNodeList<out E : Node>(prefix: String, suffix: String) : Node.NodeList<E> ","ktast.ast.Node.CommaSeparatedNodeList"]},{"name":"abstract class NodeList<out E : Node>(val prefix: String = \"\", val suffix: String = \"\") : Node","description":"ktast.ast.Node.NodeList","location":"ast/ktast.ast/-node/-node-list/index.html","searchKeys":["NodeList","abstract class NodeList<out E : Node>(val prefix: String = \"\", val suffix: String = \"\") : Node","ktast.ast.Node.NodeList"]},{"name":"abstract fun extrasAfter(v: Node): List<Node.Extra>","description":"ktast.ast.ExtrasMap.extrasAfter","location":"ast/ktast.ast/-extras-map/extras-after.html","searchKeys":["extrasAfter","abstract fun extrasAfter(v: Node): List<Node.Extra>","ktast.ast.ExtrasMap.extrasAfter"]},{"name":"abstract fun extrasBefore(v: Node): List<Node.Extra>","description":"ktast.ast.ExtrasMap.extrasBefore","location":"ast/ktast.ast/-extras-map/extras-before.html","searchKeys":["extrasBefore","abstract fun extrasBefore(v: Node): List<Node.Extra>","ktast.ast.ExtrasMap.extrasBefore"]},{"name":"abstract fun extrasWithin(v: Node): List<Node.Extra>","description":"ktast.ast.ExtrasMap.extrasWithin","location":"ast/ktast.ast/-extras-map/extras-within.html","searchKeys":["extrasWithin","abstract fun extrasWithin(v: Node): List<Node.Extra>","ktast.ast.ExtrasMap.extrasWithin"]},{"name":"abstract fun moveExtras(fromNode: Node, toNode: Node)","description":"ktast.ast.MutableExtrasMap.moveExtras","location":"ast/ktast.ast/-mutable-extras-map/move-extras.html","searchKeys":["moveExtras","abstract fun moveExtras(fromNode: Node, toNode: Node)","ktast.ast.MutableExtrasMap.moveExtras"]},{"name":"abstract val annotationSets: List<Node.AnnotationSet>","description":"ktast.ast.Node.WithAnnotationSets.annotationSets","location":"ast/ktast.ast/-node/-with-annotation-sets/annotation-sets.html","searchKeys":["annotationSets","abstract val annotationSets: List<Node.AnnotationSet>","ktast.ast.Node.WithAnnotationSets.annotationSets"]},{"name":"abstract val body: Node.Expression?","description":"ktast.ast.Node.WithFunctionBody.body","location":"ast/ktast.ast/-node/-with-function-body/body.html","searchKeys":["body","abstract val body: Node.Expression?","ktast.ast.Node.WithFunctionBody.body"]},{"name":"abstract val declarations: List<Node.Declaration>","description":"ktast.ast.Node.DeclarationsContainer.declarations","location":"ast/ktast.ast/-node/-declarations-container/declarations.html","searchKeys":["declarations","abstract val declarations: List<Node.Declaration>","ktast.ast.Node.DeclarationsContainer.declarations"]},{"name":"abstract val elements: List<E>","description":"ktast.ast.Node.NodeList.elements","location":"ast/ktast.ast/-node/-node-list/elements.html","searchKeys":["elements","abstract val elements: List<E>","ktast.ast.Node.NodeList.elements"]},{"name":"abstract val equals: Node.Keyword.Equal?","description":"ktast.ast.Node.WithFunctionBody.equals","location":"ast/ktast.ast/-node/-with-function-body/equals.html","searchKeys":["equals","abstract val equals: Node.Keyword.Equal?","ktast.ast.Node.WithFunctionBody.equals"]},{"name":"abstract val importDirectives: Node.ImportDirectives?","description":"ktast.ast.Node.KotlinEntry.importDirectives","location":"ast/ktast.ast/-node/-kotlin-entry/import-directives.html","searchKeys":["importDirectives","abstract val importDirectives: Node.ImportDirectives?","ktast.ast.Node.KotlinEntry.importDirectives"]},{"name":"abstract val lhs: Node.DoubleColonExpression.Receiver?","description":"ktast.ast.Node.DoubleColonExpression.lhs","location":"ast/ktast.ast/-node/-double-colon-expression/lhs.html","searchKeys":["lhs","abstract val lhs: Node.DoubleColonExpression.Receiver?","ktast.ast.Node.DoubleColonExpression.lhs"]},{"name":"abstract val lhs: Node.Expression","description":"ktast.ast.Node.BaseBinaryExpression.lhs","location":"ast/ktast.ast/-node/-base-binary-expression/lhs.html","searchKeys":["lhs","abstract val lhs: Node.Expression","ktast.ast.Node.BaseBinaryExpression.lhs"]},{"name":"abstract val modifiers: Node.Modifiers?","description":"ktast.ast.Node.WithModifiers.modifiers","location":"ast/ktast.ast/-node/-with-modifiers/modifiers.html","searchKeys":["modifiers","abstract val modifiers: Node.Modifiers?","ktast.ast.Node.WithModifiers.modifiers"]},{"name":"abstract val name: Node.NameExpression","description":"ktast.ast.Node.Type.NameWithTypeArgs.name","location":"ast/ktast.ast/-node/-type/-name-with-type-args/name.html","searchKeys":["name","abstract val name: Node.NameExpression","ktast.ast.Node.Type.NameWithTypeArgs.name"]},{"name":"abstract val packageDirective: Node.PackageDirective?","description":"ktast.ast.Node.KotlinEntry.packageDirective","location":"ast/ktast.ast/-node/-kotlin-entry/package-directive.html","searchKeys":["packageDirective","abstract val packageDirective: Node.PackageDirective?","ktast.ast.Node.KotlinEntry.packageDirective"]},{"name":"abstract val postModifiers: List<Node.PostModifier>","description":"ktast.ast.Node.WithPostModifiers.postModifiers","location":"ast/ktast.ast/-node/-with-post-modifiers/post-modifiers.html","searchKeys":["postModifiers","abstract val postModifiers: List<Node.PostModifier>","ktast.ast.Node.WithPostModifiers.postModifiers"]},{"name":"abstract val rhs: Node.Expression","description":"ktast.ast.Node.BaseBinaryExpression.rhs","location":"ast/ktast.ast/-node/-base-binary-expression/rhs.html","searchKeys":["rhs","abstract val rhs: Node.Expression","ktast.ast.Node.BaseBinaryExpression.rhs"]},{"name":"abstract val statements: List<Node.Statement>","description":"ktast.ast.Node.StatementsContainer.statements","location":"ast/ktast.ast/-node/-statements-container/statements.html","searchKeys":["statements","abstract val statements: List<Node.Statement>","ktast.ast.Node.StatementsContainer.statements"]},{"name":"abstract val string: String","description":"ktast.ast.Node.HasSimpleStringRepresentation.string","location":"ast/ktast.ast/-node/-has-simple-string-representation/string.html","searchKeys":["string","abstract val string: String","ktast.ast.Node.HasSimpleStringRepresentation.string"]},{"name":"abstract val text: String","description":"ktast.ast.Node.Extra.text","location":"ast/ktast.ast/-node/-extra/text.html","searchKeys":["text","abstract val text: String","ktast.ast.Node.Extra.text"]},{"name":"abstract val token: T","description":"ktast.ast.Node.TokenContainer.token","location":"ast/ktast.ast/-node/-token-container/token.html","searchKeys":["token","abstract val token: T","ktast.ast.Node.TokenContainer.token"]},{"name":"abstract val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.CommaSeparatedNodeList.trailingComma","location":"ast/ktast.ast/-node/-comma-separated-node-list/trailing-comma.html","searchKeys":["trailingComma","abstract val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.CommaSeparatedNodeList.trailingComma"]},{"name":"abstract val typeArgs: Node.TypeArgs?","description":"ktast.ast.Node.Type.NameWithTypeArgs.typeArgs","location":"ast/ktast.ast/-node/-type/-name-with-type-args/type-args.html","searchKeys":["typeArgs","abstract val typeArgs: Node.TypeArgs?","ktast.ast.Node.Type.NameWithTypeArgs.typeArgs"]},{"name":"abstract var tag: Any?","description":"ktast.ast.Node.tag","location":"ast/ktast.ast/-node/tag.html","searchKeys":["tag","abstract var tag: Any?","ktast.ast.Node.tag"]},{"name":"class Dumper(app: Appendable = StringBuilder(), extrasMap: ExtrasMap? = null, verbose: Boolean = true) : Visitor","description":"ktast.ast.Dumper","location":"ast/ktast.ast/-dumper/index.html","searchKeys":["Dumper","class Dumper(app: Appendable = StringBuilder(), extrasMap: ExtrasMap? = null, verbose: Boolean = true) : Visitor","ktast.ast.Dumper"]},{"name":"constructor()","description":"ktast.ast.Visitor.Visitor","location":"ast/ktast.ast/-visitor/-visitor.html","searchKeys":["Visitor","constructor()","ktast.ast.Visitor.Visitor"]},{"name":"constructor(annotationSets: List<Node.AnnotationSet>, expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.AnnotatedExpression.AnnotatedExpression","location":"ast/ktast.ast/-node/-annotated-expression/-annotated-expression.html","searchKeys":["AnnotatedExpression","constructor(annotationSets: List<Node.AnnotationSet>, expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.AnnotatedExpression.AnnotatedExpression"]},{"name":"constructor(annotationSets: List<Node.AnnotationSet>, label: String?, expression: Node.LambdaExpression, tag: Any? = null)","description":"ktast.ast.Node.CallExpression.LambdaArg.LambdaArg","location":"ast/ktast.ast/-node/-call-expression/-lambda-arg/-lambda-arg.html","searchKeys":["LambdaArg","constructor(annotationSets: List<Node.AnnotationSet>, label: String?, expression: Node.LambdaExpression, tag: Any? = null)","ktast.ast.Node.CallExpression.LambdaArg.LambdaArg"]},{"name":"constructor(annotationSets: List<Node.AnnotationSet>, name: Node.NameExpression, typeRef: Node.TypeRef, tag: Any? = null)","description":"ktast.ast.Node.TypeConstraintSet.TypeConstraint.TypeConstraint","location":"ast/ktast.ast/-node/-type-constraint-set/-type-constraint/-type-constraint.html","searchKeys":["TypeConstraint","constructor(annotationSets: List<Node.AnnotationSet>, name: Node.NameExpression, typeRef: Node.TypeRef, tag: Any? = null)","ktast.ast.Node.TypeConstraintSet.TypeConstraint.TypeConstraint"]},{"name":"constructor(annotationSets: List<Node.AnnotationSet>, packageDirective: Node.PackageDirective?, importDirectives: Node.ImportDirectives?, declarations: List<Node.Declaration>, tag: Any? = null)","description":"ktast.ast.Node.KotlinFile.KotlinFile","location":"ast/ktast.ast/-node/-kotlin-file/-kotlin-file.html","searchKeys":["KotlinFile","constructor(annotationSets: List<Node.AnnotationSet>, packageDirective: Node.PackageDirective?, importDirectives: Node.ImportDirectives?, declarations: List<Node.Declaration>, tag: Any? = null)","ktast.ast.Node.KotlinFile.KotlinFile"]},{"name":"constructor(annotationSets: List<Node.AnnotationSet>, packageDirective: Node.PackageDirective?, importDirectives: Node.ImportDirectives?, expressions: List<Node.Expression>, tag: Any? = null)","description":"ktast.ast.Node.KotlinScript.KotlinScript","location":"ast/ktast.ast/-node/-kotlin-script/-kotlin-script.html","searchKeys":["KotlinScript","constructor(annotationSets: List<Node.AnnotationSet>, packageDirective: Node.PackageDirective?, importDirectives: Node.ImportDirectives?, expressions: List<Node.Expression>, tag: Any? = null)","ktast.ast.Node.KotlinScript.KotlinScript"]},{"name":"constructor(app: Appendable = StringBuilder(), extrasMap: ExtrasMap? = null)","description":"ktast.ast.Writer.Writer","location":"ast/ktast.ast/-writer/-writer.html","searchKeys":["Writer","constructor(app: Appendable = StringBuilder(), extrasMap: ExtrasMap? = null)","ktast.ast.Writer.Writer"]},{"name":"constructor(app: Appendable = StringBuilder(), extrasMap: ExtrasMap? = null, verbose: Boolean = true)","description":"ktast.ast.Dumper.Dumper","location":"ast/ktast.ast/-dumper/-dumper.html","searchKeys":["Dumper","constructor(app: Appendable = StringBuilder(), extrasMap: ExtrasMap? = null, verbose: Boolean = true)","ktast.ast.Dumper.Dumper"]},{"name":"constructor(atSymbol: Node.Keyword.At?, target: Node.AnnotationSet.Target?, colon: Node.Keyword.Colon?, lBracket: Node.Keyword.LBracket?, annotations: List<Node.AnnotationSet.Annotation>, rBracket: Node.Keyword.RBracket?, tag: Any? = null)","description":"ktast.ast.Node.AnnotationSet.AnnotationSet","location":"ast/ktast.ast/-node/-annotation-set/-annotation-set.html","searchKeys":["AnnotationSet","constructor(atSymbol: Node.Keyword.At?, target: Node.AnnotationSet.Target?, colon: Node.Keyword.Colon?, lBracket: Node.Keyword.LBracket?, annotations: List<Node.AnnotationSet.Annotation>, rBracket: Node.Keyword.RBracket?, tag: Any? = null)","ktast.ast.Node.AnnotationSet.AnnotationSet"]},{"name":"constructor(block: Node.BlockExpression, catchClauses: List<Node.TryExpression.CatchClause>, finallyBlock: Node.BlockExpression?, tag: Any? = null)","description":"ktast.ast.Node.TryExpression.TryExpression","location":"ast/ktast.ast/-node/-try-expression/-try-expression.html","searchKeys":["TryExpression","constructor(block: Node.BlockExpression, catchClauses: List<Node.TryExpression.CatchClause>, finallyBlock: Node.BlockExpression?, tag: Any? = null)","ktast.ast.Node.TryExpression.TryExpression"]},{"name":"constructor(byKeyword: Node.Keyword.By, expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.PropertyDeclaration.PropertyDelegate.PropertyDelegate","location":"ast/ktast.ast/-node/-property-declaration/-property-delegate/-property-delegate.html","searchKeys":["PropertyDelegate","constructor(byKeyword: Node.Keyword.By, expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.PropertyDeclaration.PropertyDelegate.PropertyDelegate"]},{"name":"constructor(catchKeyword: Node.Keyword.Catch, params: Node.FunctionParams, block: Node.BlockExpression, tag: Any? = null)","description":"ktast.ast.Node.TryExpression.CatchClause.CatchClause","location":"ast/ktast.ast/-node/-try-expression/-catch-clause/-catch-clause.html","searchKeys":["CatchClause","constructor(catchKeyword: Node.Keyword.Catch, params: Node.FunctionParams, block: Node.BlockExpression, tag: Any? = null)","ktast.ast.Node.TryExpression.CatchClause.CatchClause"]},{"name":"constructor(changed: Boolean)","description":"ktast.ast.MutableVisitor.ChangedRef.ChangedRef","location":"ast/ktast.ast/-mutable-visitor/-changed-ref/-changed-ref.html","searchKeys":["ChangedRef","constructor(changed: Boolean)","ktast.ast.MutableVisitor.ChangedRef.ChangedRef"]},{"name":"constructor(char: Char, tag: Any? = null)","description":"ktast.ast.Node.StringLiteralExpression.RegularEscapeEntry.RegularEscapeEntry","location":"ast/ktast.ast/-node/-string-literal-expression/-regular-escape-entry/-regular-escape-entry.html","searchKeys":["RegularEscapeEntry","constructor(char: Char, tag: Any? = null)","ktast.ast.Node.StringLiteralExpression.RegularEscapeEntry.RegularEscapeEntry"]},{"name":"constructor(contractKeyword: Node.Keyword.Contract, contractEffects: Node.Contract.ContractEffects, tag: Any? = null)","description":"ktast.ast.Node.Contract.Contract","location":"ast/ktast.ast/-node/-contract/-contract.html","searchKeys":["Contract","constructor(contractKeyword: Node.Keyword.Contract, contractEffects: Node.Contract.ContractEffects, tag: Any? = null)","ktast.ast.Node.Contract.Contract"]},{"name":"constructor(declaration: Node.ClassDeclaration, tag: Any? = null)","description":"ktast.ast.Node.ObjectLiteralExpression.ObjectLiteralExpression","location":"ast/ktast.ast/-node/-object-literal-expression/-object-literal-expression.html","searchKeys":["ObjectLiteralExpression","constructor(declaration: Node.ClassDeclaration, tag: Any? = null)","ktast.ast.Node.ObjectLiteralExpression.ObjectLiteralExpression"]},{"name":"constructor(declaration: Node.PropertyDeclaration, tag: Any? = null)","description":"ktast.ast.Node.PropertyExpression.PropertyExpression","location":"ast/ktast.ast/-node/-property-expression/-property-expression.html","searchKeys":["PropertyExpression","constructor(declaration: Node.PropertyDeclaration, tag: Any? = null)","ktast.ast.Node.PropertyExpression.PropertyExpression"]},{"name":"constructor(digits: String, tag: Any? = null)","description":"ktast.ast.Node.StringLiteralExpression.UnicodeEscapeEntry.UnicodeEscapeEntry","location":"ast/ktast.ast/-node/-string-literal-expression/-unicode-escape-entry/-unicode-escape-entry.html","searchKeys":["UnicodeEscapeEntry","constructor(digits: String, tag: Any? = null)","ktast.ast.Node.StringLiteralExpression.UnicodeEscapeEntry.UnicodeEscapeEntry"]},{"name":"constructor(elements: List<Node.ClassDeclaration.ClassParent>, tag: Any? = null)","description":"ktast.ast.Node.ClassDeclaration.ClassParents.ClassParents","location":"ast/ktast.ast/-node/-class-declaration/-class-parents/-class-parents.html","searchKeys":["ClassParents","constructor(elements: List<Node.ClassDeclaration.ClassParent>, tag: Any? = null)","ktast.ast.Node.ClassDeclaration.ClassParents.ClassParents"]},{"name":"constructor(elements: List<Node.Contract.ContractEffect>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.Contract.ContractEffects.ContractEffects","location":"ast/ktast.ast/-node/-contract/-contract-effects/-contract-effects.html","searchKeys":["ContractEffects","constructor(elements: List<Node.Contract.ContractEffect>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.Contract.ContractEffects.ContractEffects"]},{"name":"constructor(elements: List<Node.FunctionParam>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.FunctionParams.FunctionParams","location":"ast/ktast.ast/-node/-function-params/-function-params.html","searchKeys":["FunctionParams","constructor(elements: List<Node.FunctionParam>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.FunctionParams.FunctionParams"]},{"name":"constructor(elements: List<Node.FunctionType.ContextReceiver>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.FunctionType.ContextReceivers.ContextReceivers","location":"ast/ktast.ast/-node/-function-type/-context-receivers/-context-receivers.html","searchKeys":["ContextReceivers","constructor(elements: List<Node.FunctionType.ContextReceiver>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.FunctionType.ContextReceivers.ContextReceivers"]},{"name":"constructor(elements: List<Node.FunctionType.Param>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.FunctionType.Params.Params","location":"ast/ktast.ast/-node/-function-type/-params/-params.html","searchKeys":["Params","constructor(elements: List<Node.FunctionType.Param>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.FunctionType.Params.Params"]},{"name":"constructor(elements: List<Node.ImportDirective>, tag: Any? = null)","description":"ktast.ast.Node.ImportDirectives.ImportDirectives","location":"ast/ktast.ast/-node/-import-directives/-import-directives.html","searchKeys":["ImportDirectives","constructor(elements: List<Node.ImportDirective>, tag: Any? = null)","ktast.ast.Node.ImportDirectives.ImportDirectives"]},{"name":"constructor(elements: List<Node.LambdaParam>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.LambdaParams.LambdaParams","location":"ast/ktast.ast/-node/-lambda-params/-lambda-params.html","searchKeys":["LambdaParams","constructor(elements: List<Node.LambdaParam>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.LambdaParams.LambdaParams"]},{"name":"constructor(elements: List<Node.Modifier>, tag: Any? = null)","description":"ktast.ast.Node.Modifiers.Modifiers","location":"ast/ktast.ast/-node/-modifiers/-modifiers.html","searchKeys":["Modifiers","constructor(elements: List<Node.Modifier>, tag: Any? = null)","ktast.ast.Node.Modifiers.Modifiers"]},{"name":"constructor(elements: List<Node.TypeArg>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.TypeArgs.TypeArgs","location":"ast/ktast.ast/-node/-type-args/-type-args.html","searchKeys":["TypeArgs","constructor(elements: List<Node.TypeArg>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.TypeArgs.TypeArgs"]},{"name":"constructor(elements: List<Node.TypeConstraintSet.TypeConstraint>, tag: Any? = null)","description":"ktast.ast.Node.TypeConstraintSet.TypeConstraints.TypeConstraints","location":"ast/ktast.ast/-node/-type-constraint-set/-type-constraints/-type-constraints.html","searchKeys":["TypeConstraints","constructor(elements: List<Node.TypeConstraintSet.TypeConstraint>, tag: Any? = null)","ktast.ast.Node.TypeConstraintSet.TypeConstraints.TypeConstraints"]},{"name":"constructor(elements: List<Node.TypeParam>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.TypeParams.TypeParams","location":"ast/ktast.ast/-node/-type-params/-type-params.html","searchKeys":["TypeParams","constructor(elements: List<Node.TypeParam>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.TypeParams.TypeParams"]},{"name":"constructor(elements: List<Node.ValueArg>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.ValueArgs.ValueArgs","location":"ast/ktast.ast/-node/-value-args/-value-args.html","searchKeys":["ValueArgs","constructor(elements: List<Node.ValueArg>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.ValueArgs.ValueArgs"]},{"name":"constructor(elseKeyword: Node.Keyword.Else, body: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.WhenExpression.WhenBranch.Else.Else","location":"ast/ktast.ast/-node/-when-expression/-when-branch/-else/-else.html","searchKeys":["Else","constructor(elseKeyword: Node.Keyword.Else, body: Node.Expression, tag: Any? = null)","ktast.ast.Node.WhenExpression.WhenBranch.Else.Else"]},{"name":"constructor(entries: List<Node.StringLiteralExpression.Entry>, raw: Boolean, tag: Any? = null)","description":"ktast.ast.Node.StringLiteralExpression.StringLiteralExpression","location":"ast/ktast.ast/-node/-string-literal-expression/-string-literal-expression.html","searchKeys":["StringLiteralExpression","constructor(entries: List<Node.StringLiteralExpression.Entry>, raw: Boolean, tag: Any? = null)","ktast.ast.Node.StringLiteralExpression.StringLiteralExpression"]},{"name":"constructor(enumEntries: List<Node.ClassDeclaration.ClassBody.EnumEntry>, hasTrailingCommaInEnumEntries: Boolean, declarations: List<Node.Declaration>, tag: Any? = null)","description":"ktast.ast.Node.ClassDeclaration.ClassBody.ClassBody","location":"ast/ktast.ast/-node/-class-declaration/-class-body/-class-body.html","searchKeys":["ClassBody","constructor(enumEntries: List<Node.ClassDeclaration.ClassBody.EnumEntry>, hasTrailingCommaInEnumEntries: Boolean, declarations: List<Node.Declaration>, tag: Any? = null)","ktast.ast.Node.ClassDeclaration.ClassBody.ClassBody"]},{"name":"constructor(expression: Node.Expression, indices: List<Node.Expression>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.ArrayAccessExpression.ArrayAccessExpression","location":"ast/ktast.ast/-node/-array-access-expression/-array-access-expression.html","searchKeys":["ArrayAccessExpression","constructor(expression: Node.Expression, indices: List<Node.Expression>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.ArrayAccessExpression.ArrayAccessExpression"]},{"name":"constructor(expression: Node.Expression, not: Boolean, tag: Any? = null)","description":"ktast.ast.Node.WhenExpression.WhenCondition.In.In","location":"ast/ktast.ast/-node/-when-expression/-when-condition/-in/-in.html","searchKeys":["In","constructor(expression: Node.Expression, not: Boolean, tag: Any? = null)","ktast.ast.Node.WhenExpression.WhenCondition.In.In"]},{"name":"constructor(expression: Node.Expression, operator: Node.UnaryExpression.Operator, prefix: Boolean, tag: Any? = null)","description":"ktast.ast.Node.UnaryExpression.UnaryExpression","location":"ast/ktast.ast/-node/-unary-expression/-unary-expression.html","searchKeys":["UnaryExpression","constructor(expression: Node.Expression, operator: Node.UnaryExpression.Operator, prefix: Boolean, tag: Any? = null)","ktast.ast.Node.UnaryExpression.UnaryExpression"]},{"name":"constructor(expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.Contract.ContractEffect.ContractEffect","location":"ast/ktast.ast/-node/-contract/-contract-effect/-contract-effect.html","searchKeys":["ContractEffect","constructor(expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.Contract.ContractEffect.ContractEffect"]},{"name":"constructor(expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.DoubleColonExpression.Receiver.Expression.Expression","location":"ast/ktast.ast/-node/-double-colon-expression/-receiver/-expression/-expression.html","searchKeys":["Expression","constructor(expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.DoubleColonExpression.Receiver.Expression.Expression"]},{"name":"constructor(expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.ExpressionContainer.ExpressionContainer","location":"ast/ktast.ast/-node/-expression-container/-expression-container.html","searchKeys":["ExpressionContainer","constructor(expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.ExpressionContainer.ExpressionContainer"]},{"name":"constructor(expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.ParenthesizedExpression.ParenthesizedExpression","location":"ast/ktast.ast/-node/-parenthesized-expression/-parenthesized-expression.html","searchKeys":["ParenthesizedExpression","constructor(expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.ParenthesizedExpression.ParenthesizedExpression"]},{"name":"constructor(expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.StringLiteralExpression.LongTemplateEntry.LongTemplateEntry","location":"ast/ktast.ast/-node/-string-literal-expression/-long-template-entry/-long-template-entry.html","searchKeys":["LongTemplateEntry","constructor(expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.StringLiteralExpression.LongTemplateEntry.LongTemplateEntry"]},{"name":"constructor(expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.ThrowExpression.ThrowExpression","location":"ast/ktast.ast/-node/-throw-expression/-throw-expression.html","searchKeys":["ThrowExpression","constructor(expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.ThrowExpression.ThrowExpression"]},{"name":"constructor(expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.WhenExpression.WhenCondition.Expression.Expression","location":"ast/ktast.ast/-node/-when-expression/-when-condition/-expression/-expression.html","searchKeys":["Expression","constructor(expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.WhenExpression.WhenCondition.Expression.Expression"]},{"name":"constructor(expression: Node.Expression, typeArgs: Node.TypeArgs?, args: Node.ValueArgs?, lambdaArg: Node.CallExpression.LambdaArg?, tag: Any? = null)","description":"ktast.ast.Node.CallExpression.CallExpression","location":"ast/ktast.ast/-node/-call-expression/-call-expression.html","searchKeys":["CallExpression","constructor(expression: Node.Expression, typeArgs: Node.TypeArgs?, args: Node.ValueArgs?, lambdaArg: Node.CallExpression.LambdaArg?, tag: Any? = null)","ktast.ast.Node.CallExpression.CallExpression"]},{"name":"constructor(expressions: List<Node.Expression>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.CollectionLiteralExpression.CollectionLiteralExpression","location":"ast/ktast.ast/-node/-collection-literal-expression/-collection-literal-expression.html","searchKeys":["CollectionLiteralExpression","constructor(expressions: List<Node.Expression>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.CollectionLiteralExpression.CollectionLiteralExpression"]},{"name":"constructor(extrasMap: MutableExtrasMap? = null)","description":"ktast.ast.MutableVisitor.MutableVisitor","location":"ast/ktast.ast/-mutable-visitor/-mutable-visitor.html","searchKeys":["MutableVisitor","constructor(extrasMap: MutableExtrasMap? = null)","ktast.ast.MutableVisitor.MutableVisitor"]},{"name":"constructor(forKeyword: Node.Keyword.For, loopParam: Node.LambdaParam, loopRange: Node.ExpressionContainer, body: Node.ExpressionContainer, tag: Any? = null)","description":"ktast.ast.Node.ForExpression.ForExpression","location":"ast/ktast.ast/-node/-for-expression/-for-expression.html","searchKeys":["ForExpression","constructor(forKeyword: Node.Keyword.For, loopParam: Node.LambdaParam, loopRange: Node.ExpressionContainer, body: Node.ExpressionContainer, tag: Any? = null)","ktast.ast.Node.ForExpression.ForExpression"]},{"name":"constructor(function: Node.FunctionDeclaration, tag: Any? = null)","description":"ktast.ast.Node.AnonymousFunctionExpression.AnonymousFunctionExpression","location":"ast/ktast.ast/-node/-anonymous-function-expression/-anonymous-function-expression.html","searchKeys":["AnonymousFunctionExpression","constructor(function: Node.FunctionDeclaration, tag: Any? = null)","ktast.ast.Node.AnonymousFunctionExpression.AnonymousFunctionExpression"]},{"name":"constructor(ifKeyword: Node.Keyword.If, condition: Node.Expression, body: Node.ExpressionContainer, elseBody: Node.ExpressionContainer?, tag: Any? = null)","description":"ktast.ast.Node.IfExpression.IfExpression","location":"ast/ktast.ast/-node/-if-expression/-if-expression.html","searchKeys":["IfExpression","constructor(ifKeyword: Node.Keyword.If, condition: Node.Expression, body: Node.ExpressionContainer, elseBody: Node.ExpressionContainer?, tag: Any? = null)","ktast.ast.Node.IfExpression.IfExpression"]},{"name":"constructor(importKeyword: Node.Keyword.Import, names: List<Node.NameExpression>, importAlias: Node.ImportDirective.ImportAlias?, tag: Any? = null)","description":"ktast.ast.Node.ImportDirective.ImportDirective","location":"ast/ktast.ast/-node/-import-directive/-import-directive.html","searchKeys":["ImportDirective","constructor(importKeyword: Node.Keyword.Import, names: List<Node.NameExpression>, importAlias: Node.ImportDirective.ImportAlias?, tag: Any? = null)","ktast.ast.Node.ImportDirective.ImportDirective"]},{"name":"constructor(lPar: Node.Keyword.LPar?, modifiers: Node.Modifiers?, contextReceivers: Node.FunctionType.ContextReceivers?, functionTypeReceiver: Node.FunctionType.FunctionTypeReceiver?, params: Node.FunctionType.Params?, returnTypeRef: Node.TypeRef, rPar: Node.Keyword.RPar?, tag: Any? = null)","description":"ktast.ast.Node.FunctionType.FunctionType","location":"ast/ktast.ast/-node/-function-type/-function-type.html","searchKeys":["FunctionType","constructor(lPar: Node.Keyword.LPar?, modifiers: Node.Modifiers?, contextReceivers: Node.FunctionType.ContextReceivers?, functionTypeReceiver: Node.FunctionType.FunctionTypeReceiver?, params: Node.FunctionType.Params?, returnTypeRef: Node.TypeRef, rPar: Node.Keyword.RPar?, tag: Any? = null)","ktast.ast.Node.FunctionType.FunctionType"]},{"name":"constructor(lPar: Node.Keyword.LPar?, modifiers: Node.Modifiers?, type: Node.Type, rPar: Node.Keyword.RPar?, tag: Any? = null)","description":"ktast.ast.Node.NullableType.NullableType","location":"ast/ktast.ast/-node/-nullable-type/-nullable-type.html","searchKeys":["NullableType","constructor(lPar: Node.Keyword.LPar?, modifiers: Node.Modifiers?, type: Node.Type, rPar: Node.Keyword.RPar?, tag: Any? = null)","ktast.ast.Node.NullableType.NullableType"]},{"name":"constructor(lPar: Node.Keyword.LPar?, modifiers: Node.Modifiers?, type: Node.Type, rPar: Node.Keyword.RPar?, tag: Any? = null)","description":"ktast.ast.Node.TypeRef.TypeRef","location":"ast/ktast.ast/-node/-type-ref/-type-ref.html","searchKeys":["TypeRef","constructor(lPar: Node.Keyword.LPar?, modifiers: Node.Modifiers?, type: Node.Type, rPar: Node.Keyword.RPar?, tag: Any? = null)","ktast.ast.Node.TypeRef.TypeRef"]},{"name":"constructor(lPar: Node.Keyword.LPar?, variables: List<Node.LambdaParam.Variable>, trailingComma: Node.Keyword.Comma?, rPar: Node.Keyword.RPar?, colon: Node.Keyword.Colon?, destructTypeRef: Node.TypeRef?, tag: Any? = null)","description":"ktast.ast.Node.LambdaParam.LambdaParam","location":"ast/ktast.ast/-node/-lambda-param/-lambda-param.html","searchKeys":["LambdaParam","constructor(lPar: Node.Keyword.LPar?, variables: List<Node.LambdaParam.Variable>, trailingComma: Node.Keyword.Comma?, rPar: Node.Keyword.RPar?, colon: Node.Keyword.Colon?, destructTypeRef: Node.TypeRef?, tag: Any? = null)","ktast.ast.Node.LambdaParam.LambdaParam"]},{"name":"constructor(label: String, expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.LabeledExpression.LabeledExpression","location":"ast/ktast.ast/-node/-labeled-expression/-labeled-expression.html","searchKeys":["LabeledExpression","constructor(label: String, expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.LabeledExpression.LabeledExpression"]},{"name":"constructor(label: String?, expression: Node.Expression?, tag: Any? = null)","description":"ktast.ast.Node.ReturnExpression.ReturnExpression","location":"ast/ktast.ast/-node/-return-expression/-return-expression.html","searchKeys":["ReturnExpression","constructor(label: String?, expression: Node.Expression?, tag: Any? = null)","ktast.ast.Node.ReturnExpression.ReturnExpression"]},{"name":"constructor(label: String?, tag: Any? = null)","description":"ktast.ast.Node.BreakExpression.BreakExpression","location":"ast/ktast.ast/-node/-break-expression/-break-expression.html","searchKeys":["BreakExpression","constructor(label: String?, tag: Any? = null)","ktast.ast.Node.BreakExpression.BreakExpression"]},{"name":"constructor(label: String?, tag: Any? = null)","description":"ktast.ast.Node.ContinueExpression.ContinueExpression","location":"ast/ktast.ast/-node/-continue-expression/-continue-expression.html","searchKeys":["ContinueExpression","constructor(label: String?, tag: Any? = null)","ktast.ast.Node.ContinueExpression.ContinueExpression"]},{"name":"constructor(label: String?, tag: Any? = null)","description":"ktast.ast.Node.ThisExpression.ThisExpression","location":"ast/ktast.ast/-node/-this-expression/-this-expression.html","searchKeys":["ThisExpression","constructor(label: String?, tag: Any? = null)","ktast.ast.Node.ThisExpression.ThisExpression"]},{"name":"constructor(lhs: Node.DoubleColonExpression.Receiver?, rhs: Node.NameExpression, tag: Any? = null)","description":"ktast.ast.Node.CallableReferenceExpression.CallableReferenceExpression","location":"ast/ktast.ast/-node/-callable-reference-expression/-callable-reference-expression.html","searchKeys":["CallableReferenceExpression","constructor(lhs: Node.DoubleColonExpression.Receiver?, rhs: Node.NameExpression, tag: Any? = null)","ktast.ast.Node.CallableReferenceExpression.CallableReferenceExpression"]},{"name":"constructor(lhs: Node.DoubleColonExpression.Receiver?, tag: Any? = null)","description":"ktast.ast.Node.ClassLiteralExpression.ClassLiteralExpression","location":"ast/ktast.ast/-node/-class-literal-expression/-class-literal-expression.html","searchKeys":["ClassLiteralExpression","constructor(lhs: Node.DoubleColonExpression.Receiver?, tag: Any? = null)","ktast.ast.Node.ClassLiteralExpression.ClassLiteralExpression"]},{"name":"constructor(lhs: Node.Expression, operator: Node.BinaryExpression.Operator, rhs: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.BinaryExpression.BinaryExpression","location":"ast/ktast.ast/-node/-binary-expression/-binary-expression.html","searchKeys":["BinaryExpression","constructor(lhs: Node.Expression, operator: Node.BinaryExpression.Operator, rhs: Node.Expression, tag: Any? = null)","ktast.ast.Node.BinaryExpression.BinaryExpression"]},{"name":"constructor(lhs: Node.Expression, operator: Node.BinaryTypeExpression.Operator, rhs: Node.TypeRef, tag: Any? = null)","description":"ktast.ast.Node.BinaryTypeExpression.BinaryTypeExpression","location":"ast/ktast.ast/-node/-binary-type-expression/-binary-type-expression.html","searchKeys":["BinaryTypeExpression","constructor(lhs: Node.Expression, operator: Node.BinaryTypeExpression.Operator, rhs: Node.TypeRef, tag: Any? = null)","ktast.ast.Node.BinaryTypeExpression.BinaryTypeExpression"]},{"name":"constructor(lhs: Node.Expression, operator: Node.NameExpression, rhs: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.BinaryInfixExpression.BinaryInfixExpression","location":"ast/ktast.ast/-node/-binary-infix-expression/-binary-infix-expression.html","searchKeys":["BinaryInfixExpression","constructor(lhs: Node.Expression, operator: Node.NameExpression, rhs: Node.Expression, tag: Any? = null)","ktast.ast.Node.BinaryInfixExpression.BinaryInfixExpression"]},{"name":"constructor(modifiers: Node.Modifiers?, block: Node.BlockExpression, tag: Any? = null)","description":"ktast.ast.Node.InitDeclaration.InitDeclaration","location":"ast/ktast.ast/-node/-init-declaration/-init-declaration.html","searchKeys":["InitDeclaration","constructor(modifiers: Node.Modifiers?, block: Node.BlockExpression, tag: Any? = null)","ktast.ast.Node.InitDeclaration.InitDeclaration"]},{"name":"constructor(modifiers: Node.Modifiers?, constructorKeyword: Node.Keyword.Constructor, params: Node.FunctionParams?, delegationCall: Node.SecondaryConstructorDeclaration.DelegationCall?, block: Node.BlockExpression?, tag: Any? = null)","description":"ktast.ast.Node.SecondaryConstructorDeclaration.SecondaryConstructorDeclaration","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-secondary-constructor-declaration.html","searchKeys":["SecondaryConstructorDeclaration","constructor(modifiers: Node.Modifiers?, constructorKeyword: Node.Keyword.Constructor, params: Node.FunctionParams?, delegationCall: Node.SecondaryConstructorDeclaration.DelegationCall?, block: Node.BlockExpression?, tag: Any? = null)","ktast.ast.Node.SecondaryConstructorDeclaration.SecondaryConstructorDeclaration"]},{"name":"constructor(modifiers: Node.Modifiers?, constructorKeyword: Node.Keyword.Constructor?, params: Node.FunctionParams?, tag: Any? = null)","description":"ktast.ast.Node.ClassDeclaration.PrimaryConstructor.PrimaryConstructor","location":"ast/ktast.ast/-node/-class-declaration/-primary-constructor/-primary-constructor.html","searchKeys":["PrimaryConstructor","constructor(modifiers: Node.Modifiers?, constructorKeyword: Node.Keyword.Constructor?, params: Node.FunctionParams?, tag: Any? = null)","ktast.ast.Node.ClassDeclaration.PrimaryConstructor.PrimaryConstructor"]},{"name":"constructor(modifiers: Node.Modifiers?, declarationKeyword: Node.ClassDeclaration.DeclarationKeyword, name: Node.NameExpression?, typeParams: Node.TypeParams?, primaryConstructor: Node.ClassDeclaration.PrimaryConstructor?, classParents: Node.ClassDeclaration.ClassParents?, typeConstraintSet: Node.TypeConstraintSet?, classBody: Node.ClassDeclaration.ClassBody?, tag: Any? = null)","description":"ktast.ast.Node.ClassDeclaration.ClassDeclaration","location":"ast/ktast.ast/-node/-class-declaration/-class-declaration.html","searchKeys":["ClassDeclaration","constructor(modifiers: Node.Modifiers?, declarationKeyword: Node.ClassDeclaration.DeclarationKeyword, name: Node.NameExpression?, typeParams: Node.TypeParams?, primaryConstructor: Node.ClassDeclaration.PrimaryConstructor?, classParents: Node.ClassDeclaration.ClassParents?, typeConstraintSet: Node.TypeConstraintSet?, classBody: Node.ClassDeclaration.ClassBody?, tag: Any? = null)","ktast.ast.Node.ClassDeclaration.ClassDeclaration"]},{"name":"constructor(modifiers: Node.Modifiers?, funKeyword: Node.Keyword.Fun, typeParams: Node.TypeParams?, receiverTypeRef: Node.TypeRef?, name: Node.NameExpression?, params: Node.FunctionParams?, typeRef: Node.TypeRef?, postModifiers: List<Node.PostModifier>, equals: Node.Keyword.Equal?, body: Node.Expression?, tag: Any? = null)","description":"ktast.ast.Node.FunctionDeclaration.FunctionDeclaration","location":"ast/ktast.ast/-node/-function-declaration/-function-declaration.html","searchKeys":["FunctionDeclaration","constructor(modifiers: Node.Modifiers?, funKeyword: Node.Keyword.Fun, typeParams: Node.TypeParams?, receiverTypeRef: Node.TypeRef?, name: Node.NameExpression?, params: Node.FunctionParams?, typeRef: Node.TypeRef?, postModifiers: List<Node.PostModifier>, equals: Node.Keyword.Equal?, body: Node.Expression?, tag: Any? = null)","ktast.ast.Node.FunctionDeclaration.FunctionDeclaration"]},{"name":"constructor(modifiers: Node.Modifiers?, getKeyword: Node.Keyword.Get, typeRef: Node.TypeRef?, postModifiers: List<Node.PostModifier>, equals: Node.Keyword.Equal?, body: Node.Expression?, tag: Any? = null)","description":"ktast.ast.Node.PropertyDeclaration.Getter.Getter","location":"ast/ktast.ast/-node/-property-declaration/-getter/-getter.html","searchKeys":["Getter","constructor(modifiers: Node.Modifiers?, getKeyword: Node.Keyword.Get, typeRef: Node.TypeRef?, postModifiers: List<Node.PostModifier>, equals: Node.Keyword.Equal?, body: Node.Expression?, tag: Any? = null)","ktast.ast.Node.PropertyDeclaration.Getter.Getter"]},{"name":"constructor(modifiers: Node.Modifiers?, name: Node.NameExpression, args: Node.ValueArgs?, classBody: Node.ClassDeclaration.ClassBody?, tag: Any? = null)","description":"ktast.ast.Node.ClassDeclaration.ClassBody.EnumEntry.EnumEntry","location":"ast/ktast.ast/-node/-class-declaration/-class-body/-enum-entry/-enum-entry.html","searchKeys":["EnumEntry","constructor(modifiers: Node.Modifiers?, name: Node.NameExpression, args: Node.ValueArgs?, classBody: Node.ClassDeclaration.ClassBody?, tag: Any? = null)","ktast.ast.Node.ClassDeclaration.ClassBody.EnumEntry.EnumEntry"]},{"name":"constructor(modifiers: Node.Modifiers?, name: Node.NameExpression, typeParams: Node.TypeParams?, typeRef: Node.TypeRef, tag: Any? = null)","description":"ktast.ast.Node.TypeAliasDeclaration.TypeAliasDeclaration","location":"ast/ktast.ast/-node/-type-alias-declaration/-type-alias-declaration.html","searchKeys":["TypeAliasDeclaration","constructor(modifiers: Node.Modifiers?, name: Node.NameExpression, typeParams: Node.TypeParams?, typeRef: Node.TypeRef, tag: Any? = null)","ktast.ast.Node.TypeAliasDeclaration.TypeAliasDeclaration"]},{"name":"constructor(modifiers: Node.Modifiers?, name: Node.NameExpression, typeRef: Node.TypeRef?, tag: Any? = null)","description":"ktast.ast.Node.LambdaParam.Variable.Variable","location":"ast/ktast.ast/-node/-lambda-param/-variable/-variable.html","searchKeys":["Variable","constructor(modifiers: Node.Modifiers?, name: Node.NameExpression, typeRef: Node.TypeRef?, tag: Any? = null)","ktast.ast.Node.LambdaParam.Variable.Variable"]},{"name":"constructor(modifiers: Node.Modifiers?, name: Node.NameExpression, typeRef: Node.TypeRef?, tag: Any? = null)","description":"ktast.ast.Node.TypeParam.TypeParam","location":"ast/ktast.ast/-node/-type-param/-type-param.html","searchKeys":["TypeParam","constructor(modifiers: Node.Modifiers?, name: Node.NameExpression, typeRef: Node.TypeRef?, tag: Any? = null)","ktast.ast.Node.TypeParam.TypeParam"]},{"name":"constructor(modifiers: Node.Modifiers?, packageKeyword: Node.Keyword.Package, names: List<Node.NameExpression>, tag: Any? = null)","description":"ktast.ast.Node.PackageDirective.PackageDirective","location":"ast/ktast.ast/-node/-package-directive/-package-directive.html","searchKeys":["PackageDirective","constructor(modifiers: Node.Modifiers?, packageKeyword: Node.Keyword.Package, names: List<Node.NameExpression>, tag: Any? = null)","ktast.ast.Node.PackageDirective.PackageDirective"]},{"name":"constructor(modifiers: Node.Modifiers?, setKeyword: Node.Keyword.Set, params: Node.LambdaParams?, postModifiers: List<Node.PostModifier>, equals: Node.Keyword.Equal?, body: Node.Expression?, tag: Any? = null)","description":"ktast.ast.Node.PropertyDeclaration.Setter.Setter","location":"ast/ktast.ast/-node/-property-declaration/-setter/-setter.html","searchKeys":["Setter","constructor(modifiers: Node.Modifiers?, setKeyword: Node.Keyword.Set, params: Node.LambdaParams?, postModifiers: List<Node.PostModifier>, equals: Node.Keyword.Equal?, body: Node.Expression?, tag: Any? = null)","ktast.ast.Node.PropertyDeclaration.Setter.Setter"]},{"name":"constructor(modifiers: Node.Modifiers?, typeRef: Node.TypeRef?, asterisk: Boolean, tag: Any? = null)","description":"ktast.ast.Node.TypeArg.TypeArg","location":"ast/ktast.ast/-node/-type-arg/-type-arg.html","searchKeys":["TypeArg","constructor(modifiers: Node.Modifiers?, typeRef: Node.TypeRef?, asterisk: Boolean, tag: Any? = null)","ktast.ast.Node.TypeArg.TypeArg"]},{"name":"constructor(modifiers: Node.Modifiers?, valOrVar: Node.PropertyDeclaration.ValOrVar, typeParams: Node.TypeParams?, receiverTypeRef: Node.TypeRef?, lPar: Node.Keyword.LPar?, variables: List<Node.Variable>, trailingComma: Node.Keyword.Comma?, rPar: Node.Keyword.RPar?, typeConstraintSet: Node.TypeConstraintSet?, equals: Node.Keyword.Equal?, initializer: Node.Expression?, propertyDelegate: Node.PropertyDeclaration.PropertyDelegate?, accessors: List<Node.PropertyDeclaration.Accessor>, tag: Any? = null)","description":"ktast.ast.Node.PropertyDeclaration.PropertyDeclaration","location":"ast/ktast.ast/-node/-property-declaration/-property-declaration.html","searchKeys":["PropertyDeclaration","constructor(modifiers: Node.Modifiers?, valOrVar: Node.PropertyDeclaration.ValOrVar, typeParams: Node.TypeParams?, receiverTypeRef: Node.TypeRef?, lPar: Node.Keyword.LPar?, variables: List<Node.Variable>, trailingComma: Node.Keyword.Comma?, rPar: Node.Keyword.RPar?, typeConstraintSet: Node.TypeConstraintSet?, equals: Node.Keyword.Equal?, initializer: Node.Expression?, propertyDelegate: Node.PropertyDeclaration.PropertyDelegate?, accessors: List<Node.PropertyDeclaration.Accessor>, tag: Any? = null)","ktast.ast.Node.PropertyDeclaration.PropertyDeclaration"]},{"name":"constructor(modifiers: Node.Modifiers?, valOrVar: Node.PropertyDeclaration.ValOrVar?, name: Node.NameExpression, typeRef: Node.TypeRef?, equals: Node.Keyword.Equal?, defaultValue: Node.Expression?, tag: Any? = null)","description":"ktast.ast.Node.FunctionParam.FunctionParam","location":"ast/ktast.ast/-node/-function-param/-function-param.html","searchKeys":["FunctionParam","constructor(modifiers: Node.Modifiers?, valOrVar: Node.PropertyDeclaration.ValOrVar?, name: Node.NameExpression, typeRef: Node.TypeRef?, equals: Node.Keyword.Equal?, defaultValue: Node.Expression?, tag: Any? = null)","ktast.ast.Node.FunctionParam.FunctionParam"]},{"name":"constructor(name: Node.NameExpression, tag: Any? = null)","description":"ktast.ast.Node.ImportDirective.ImportAlias.ImportAlias","location":"ast/ktast.ast/-node/-import-directive/-import-alias/-import-alias.html","searchKeys":["ImportAlias","constructor(name: Node.NameExpression, tag: Any? = null)","ktast.ast.Node.ImportDirective.ImportAlias.ImportAlias"]},{"name":"constructor(name: Node.NameExpression, typeArgs: Node.TypeArgs?, tag: Any? = null)","description":"ktast.ast.Node.SimpleType.Qualifier.Qualifier","location":"ast/ktast.ast/-node/-simple-type/-qualifier/-qualifier.html","searchKeys":["Qualifier","constructor(name: Node.NameExpression, typeArgs: Node.TypeArgs?, tag: Any? = null)","ktast.ast.Node.SimpleType.Qualifier.Qualifier"]},{"name":"constructor(name: Node.NameExpression, typeRef: Node.TypeRef?, tag: Any? = null)","description":"ktast.ast.Node.Variable.Variable","location":"ast/ktast.ast/-node/-variable/-variable.html","searchKeys":["Variable","constructor(name: Node.NameExpression, typeRef: Node.TypeRef?, tag: Any? = null)","ktast.ast.Node.Variable.Variable"]},{"name":"constructor(name: Node.NameExpression?, asterisk: Boolean, expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.ValueArg.ValueArg","location":"ast/ktast.ast/-node/-value-arg/-value-arg.html","searchKeys":["ValueArg","constructor(name: Node.NameExpression?, asterisk: Boolean, expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.ValueArg.ValueArg"]},{"name":"constructor(name: Node.NameExpression?, typeRef: Node.TypeRef, tag: Any? = null)","description":"ktast.ast.Node.FunctionType.Param.Param","location":"ast/ktast.ast/-node/-function-type/-param/-param.html","searchKeys":["Param","constructor(name: Node.NameExpression?, typeRef: Node.TypeRef, tag: Any? = null)","ktast.ast.Node.FunctionType.Param.Param"]},{"name":"constructor(name: String, tag: Any? = null)","description":"ktast.ast.Node.NameExpression.NameExpression","location":"ast/ktast.ast/-node/-name-expression/-name-expression.html","searchKeys":["NameExpression","constructor(name: String, tag: Any? = null)","ktast.ast.Node.NameExpression.NameExpression"]},{"name":"constructor(params: Node.LambdaParams?, lambdaBody: Node.LambdaExpression.LambdaBody?, tag: Any? = null)","description":"ktast.ast.Node.LambdaExpression.LambdaExpression","location":"ast/ktast.ast/-node/-lambda-expression/-lambda-expression.html","searchKeys":["LambdaExpression","constructor(params: Node.LambdaParams?, lambdaBody: Node.LambdaExpression.LambdaBody?, tag: Any? = null)","ktast.ast.Node.LambdaExpression.LambdaExpression"]},{"name":"constructor(prefix: String = \"\", suffix: String = \"\")","description":"ktast.ast.Node.NodeList.NodeList","location":"ast/ktast.ast/-node/-node-list/-node-list.html","searchKeys":["NodeList","constructor(prefix: String = \"\", suffix: String = \"\")","ktast.ast.Node.NodeList.NodeList"]},{"name":"constructor(prefix: String, suffix: String)","description":"ktast.ast.Node.CommaSeparatedNodeList.CommaSeparatedNodeList","location":"ast/ktast.ast/-node/-comma-separated-node-list/-comma-separated-node-list.html","searchKeys":["CommaSeparatedNodeList","constructor(prefix: String, suffix: String)","ktast.ast.Node.CommaSeparatedNodeList.CommaSeparatedNodeList"]},{"name":"constructor(qualifiers: List<Node.SimpleType.Qualifier>, name: Node.NameExpression, typeArgs: Node.TypeArgs?, tag: Any? = null)","description":"ktast.ast.Node.SimpleType.SimpleType","location":"ast/ktast.ast/-node/-simple-type/-simple-type.html","searchKeys":["SimpleType","constructor(qualifiers: List<Node.SimpleType.Qualifier>, name: Node.NameExpression, typeArgs: Node.TypeArgs?, tag: Any? = null)","ktast.ast.Node.SimpleType.SimpleType"]},{"name":"constructor(statements: List<Node.Statement>, tag: Any? = null)","description":"ktast.ast.Node.BlockExpression.BlockExpression","location":"ast/ktast.ast/-node/-block-expression/-block-expression.html","searchKeys":["BlockExpression","constructor(statements: List<Node.Statement>, tag: Any? = null)","ktast.ast.Node.BlockExpression.BlockExpression"]},{"name":"constructor(statements: List<Node.Statement>, tag: Any? = null)","description":"ktast.ast.Node.LambdaExpression.LambdaBody.LambdaBody","location":"ast/ktast.ast/-node/-lambda-expression/-lambda-body/-lambda-body.html","searchKeys":["LambdaBody","constructor(statements: List<Node.Statement>, tag: Any? = null)","ktast.ast.Node.LambdaExpression.LambdaBody.LambdaBody"]},{"name":"constructor(str: String, tag: Any? = null)","description":"ktast.ast.Node.StringLiteralExpression.LiteralStringEntry.LiteralStringEntry","location":"ast/ktast.ast/-node/-string-literal-expression/-literal-string-entry/-literal-string-entry.html","searchKeys":["LiteralStringEntry","constructor(str: String, tag: Any? = null)","ktast.ast.Node.StringLiteralExpression.LiteralStringEntry.LiteralStringEntry"]},{"name":"constructor(str: String, tag: Any? = null)","description":"ktast.ast.Node.StringLiteralExpression.ShortTemplateEntry.ShortTemplateEntry","location":"ast/ktast.ast/-node/-string-literal-expression/-short-template-entry/-short-template-entry.html","searchKeys":["ShortTemplateEntry","constructor(str: String, tag: Any? = null)","ktast.ast.Node.StringLiteralExpression.ShortTemplateEntry.ShortTemplateEntry"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.DynamicType.DynamicType","location":"ast/ktast.ast/-node/-dynamic-type/-dynamic-type.html","searchKeys":["DynamicType","constructor(tag: Any? = null)","ktast.ast.Node.DynamicType.DynamicType"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.At.At","location":"ast/ktast.ast/-node/-keyword/-at/-at.html","searchKeys":["At","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.At.At"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.By.By","location":"ast/ktast.ast/-node/-keyword/-by/-by.html","searchKeys":["By","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.By.By"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Catch.Catch","location":"ast/ktast.ast/-node/-keyword/-catch/-catch.html","searchKeys":["Catch","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Catch.Catch"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Colon.Colon","location":"ast/ktast.ast/-node/-keyword/-colon/-colon.html","searchKeys":["Colon","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Colon.Colon"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Comma.Comma","location":"ast/ktast.ast/-node/-keyword/-comma/-comma.html","searchKeys":["Comma","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Comma.Comma"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Constructor.Constructor","location":"ast/ktast.ast/-node/-keyword/-constructor/-constructor.html","searchKeys":["Constructor","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Constructor.Constructor"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Contract.Contract","location":"ast/ktast.ast/-node/-keyword/-contract/-contract.html","searchKeys":["Contract","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Contract.Contract"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Else.Else","location":"ast/ktast.ast/-node/-keyword/-else/-else.html","searchKeys":["Else","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Else.Else"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Equal.Equal","location":"ast/ktast.ast/-node/-keyword/-equal/-equal.html","searchKeys":["Equal","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Equal.Equal"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.For.For","location":"ast/ktast.ast/-node/-keyword/-for/-for.html","searchKeys":["For","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.For.For"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Fun.Fun","location":"ast/ktast.ast/-node/-keyword/-fun/-fun.html","searchKeys":["Fun","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Fun.Fun"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Get.Get","location":"ast/ktast.ast/-node/-keyword/-get/-get.html","searchKeys":["Get","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Get.Get"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.If.If","location":"ast/ktast.ast/-node/-keyword/-if/-if.html","searchKeys":["If","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.If.If"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Import.Import","location":"ast/ktast.ast/-node/-keyword/-import/-import.html","searchKeys":["Import","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Import.Import"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.LBracket.LBracket","location":"ast/ktast.ast/-node/-keyword/-l-bracket/-l-bracket.html","searchKeys":["LBracket","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.LBracket.LBracket"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.LPar.LPar","location":"ast/ktast.ast/-node/-keyword/-l-par/-l-par.html","searchKeys":["LPar","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.LPar.LPar"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Package.Package","location":"ast/ktast.ast/-node/-keyword/-package/-package.html","searchKeys":["Package","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Package.Package"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Question.Question","location":"ast/ktast.ast/-node/-keyword/-question/-question.html","searchKeys":["Question","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Question.Question"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.RBracket.RBracket","location":"ast/ktast.ast/-node/-keyword/-r-bracket/-r-bracket.html","searchKeys":["RBracket","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.RBracket.RBracket"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.RPar.RPar","location":"ast/ktast.ast/-node/-keyword/-r-par/-r-par.html","searchKeys":["RPar","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.RPar.RPar"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Set.Set","location":"ast/ktast.ast/-node/-keyword/-set/-set.html","searchKeys":["Set","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Set.Set"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.When.When","location":"ast/ktast.ast/-node/-keyword/-when/-when.html","searchKeys":["When","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.When.When"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Where.Where","location":"ast/ktast.ast/-node/-keyword/-where/-where.html","searchKeys":["Where","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Where.Where"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.While.While","location":"ast/ktast.ast/-node/-keyword/-while/-while.html","searchKeys":["While","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.While.While"]},{"name":"constructor(target: Node.SecondaryConstructorDeclaration.DelegationTarget, args: Node.ValueArgs?, tag: Any? = null)","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationCall.DelegationCall","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-call/-delegation-call.html","searchKeys":["DelegationCall","constructor(target: Node.SecondaryConstructorDeclaration.DelegationTarget, args: Node.ValueArgs?, tag: Any? = null)","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationCall.DelegationCall"]},{"name":"constructor(text: String, tag: Any? = null)","description":"ktast.ast.Node.Comment.Comment","location":"ast/ktast.ast/-node/-comment/-comment.html","searchKeys":["Comment","constructor(text: String, tag: Any? = null)","ktast.ast.Node.Comment.Comment"]},{"name":"constructor(text: String, tag: Any? = null)","description":"ktast.ast.Node.Semicolon.Semicolon","location":"ast/ktast.ast/-node/-semicolon/-semicolon.html","searchKeys":["Semicolon","constructor(text: String, tag: Any? = null)","ktast.ast.Node.Semicolon.Semicolon"]},{"name":"constructor(text: String, tag: Any? = null)","description":"ktast.ast.Node.Whitespace.Whitespace","location":"ast/ktast.ast/-node/-whitespace/-whitespace.html","searchKeys":["Whitespace","constructor(text: String, tag: Any? = null)","ktast.ast.Node.Whitespace.Whitespace"]},{"name":"constructor(token: Node.AnnotationSet.Target.Token, tag: Any? = null)","description":"ktast.ast.Node.AnnotationSet.Target.Target","location":"ast/ktast.ast/-node/-annotation-set/-target/-target.html","searchKeys":["Target","constructor(token: Node.AnnotationSet.Target.Token, tag: Any? = null)","ktast.ast.Node.AnnotationSet.Target.Target"]},{"name":"constructor(token: Node.BinaryExpression.Operator.Token, tag: Any? = null)","description":"ktast.ast.Node.BinaryExpression.Operator.Operator","location":"ast/ktast.ast/-node/-binary-expression/-operator/-operator.html","searchKeys":["Operator","constructor(token: Node.BinaryExpression.Operator.Token, tag: Any? = null)","ktast.ast.Node.BinaryExpression.Operator.Operator"]},{"name":"constructor(token: Node.BinaryTypeExpression.Operator.Token, tag: Any? = null)","description":"ktast.ast.Node.BinaryTypeExpression.Operator.Operator","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/-operator.html","searchKeys":["Operator","constructor(token: Node.BinaryTypeExpression.Operator.Token, tag: Any? = null)","ktast.ast.Node.BinaryTypeExpression.Operator.Operator"]},{"name":"constructor(token: Node.ClassDeclaration.DeclarationKeyword.Token, tag: Any? = null)","description":"ktast.ast.Node.ClassDeclaration.DeclarationKeyword.DeclarationKeyword","location":"ast/ktast.ast/-node/-class-declaration/-declaration-keyword/-declaration-keyword.html","searchKeys":["DeclarationKeyword","constructor(token: Node.ClassDeclaration.DeclarationKeyword.Token, tag: Any? = null)","ktast.ast.Node.ClassDeclaration.DeclarationKeyword.DeclarationKeyword"]},{"name":"constructor(token: Node.KeywordModifier.Token, tag: Any? = null)","description":"ktast.ast.Node.KeywordModifier.KeywordModifier","location":"ast/ktast.ast/-node/-keyword-modifier/-keyword-modifier.html","searchKeys":["KeywordModifier","constructor(token: Node.KeywordModifier.Token, tag: Any? = null)","ktast.ast.Node.KeywordModifier.KeywordModifier"]},{"name":"constructor(token: Node.PropertyDeclaration.ValOrVar.Token, tag: Any? = null)","description":"ktast.ast.Node.PropertyDeclaration.ValOrVar.ValOrVar","location":"ast/ktast.ast/-node/-property-declaration/-val-or-var/-val-or-var.html","searchKeys":["ValOrVar","constructor(token: Node.PropertyDeclaration.ValOrVar.Token, tag: Any? = null)","ktast.ast.Node.PropertyDeclaration.ValOrVar.ValOrVar"]},{"name":"constructor(token: Node.SecondaryConstructorDeclaration.DelegationTarget.Token, tag: Any? = null)","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.DelegationTarget","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-target/-delegation-target.html","searchKeys":["DelegationTarget","constructor(token: Node.SecondaryConstructorDeclaration.DelegationTarget.Token, tag: Any? = null)","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.DelegationTarget"]},{"name":"constructor(token: Node.UnaryExpression.Operator.Token, tag: Any? = null)","description":"ktast.ast.Node.UnaryExpression.Operator.Operator","location":"ast/ktast.ast/-node/-unary-expression/-operator/-operator.html","searchKeys":["Operator","constructor(token: Node.UnaryExpression.Operator.Token, tag: Any? = null)","ktast.ast.Node.UnaryExpression.Operator.Operator"]},{"name":"constructor(type: Node.SimpleType, args: Node.ValueArgs?, tag: Any? = null)","description":"ktast.ast.Node.AnnotationSet.Annotation.Annotation","location":"ast/ktast.ast/-node/-annotation-set/-annotation/-annotation.html","searchKeys":["Annotation","constructor(type: Node.SimpleType, args: Node.ValueArgs?, tag: Any? = null)","ktast.ast.Node.AnnotationSet.Annotation.Annotation"]},{"name":"constructor(type: Node.SimpleType, byKeyword: Node.Keyword.By, expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.ClassDeclaration.ClassParent.DelegatedType.DelegatedType","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-delegated-type/-delegated-type.html","searchKeys":["DelegatedType","constructor(type: Node.SimpleType, byKeyword: Node.Keyword.By, expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.ClassDeclaration.ClassParent.DelegatedType.DelegatedType"]},{"name":"constructor(type: Node.SimpleType, questionMarks: List<Node.Keyword.Question>, tag: Any? = null)","description":"ktast.ast.Node.DoubleColonExpression.Receiver.Type.Type","location":"ast/ktast.ast/-node/-double-colon-expression/-receiver/-type/-type.html","searchKeys":["Type","constructor(type: Node.SimpleType, questionMarks: List<Node.Keyword.Question>, tag: Any? = null)","ktast.ast.Node.DoubleColonExpression.Receiver.Type.Type"]},{"name":"constructor(type: Node.SimpleType, tag: Any? = null)","description":"ktast.ast.Node.ClassDeclaration.ClassParent.Type.Type","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-type/-type.html","searchKeys":["Type","constructor(type: Node.SimpleType, tag: Any? = null)","ktast.ast.Node.ClassDeclaration.ClassParent.Type.Type"]},{"name":"constructor(type: Node.SimpleType, typeArgs: Node.TypeArgs?, args: Node.ValueArgs?, lambda: Node.CallExpression.LambdaArg?, tag: Any? = null)","description":"ktast.ast.Node.ClassDeclaration.ClassParent.CallConstructor.CallConstructor","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-call-constructor/-call-constructor.html","searchKeys":["CallConstructor","constructor(type: Node.SimpleType, typeArgs: Node.TypeArgs?, args: Node.ValueArgs?, lambda: Node.CallExpression.LambdaArg?, tag: Any? = null)","ktast.ast.Node.ClassDeclaration.ClassParent.CallConstructor.CallConstructor"]},{"name":"constructor(typeArg: Node.TypeRef?, label: String?, tag: Any? = null)","description":"ktast.ast.Node.SuperExpression.SuperExpression","location":"ast/ktast.ast/-node/-super-expression/-super-expression.html","searchKeys":["SuperExpression","constructor(typeArg: Node.TypeRef?, label: String?, tag: Any? = null)","ktast.ast.Node.SuperExpression.SuperExpression"]},{"name":"constructor(typeRef: Node.TypeRef, not: Boolean, tag: Any? = null)","description":"ktast.ast.Node.WhenExpression.WhenCondition.Is.Is","location":"ast/ktast.ast/-node/-when-expression/-when-condition/-is/-is.html","searchKeys":["Is","constructor(typeRef: Node.TypeRef, not: Boolean, tag: Any? = null)","ktast.ast.Node.WhenExpression.WhenCondition.Is.Is"]},{"name":"constructor(typeRef: Node.TypeRef, tag: Any? = null)","description":"ktast.ast.Node.FunctionType.ContextReceiver.ContextReceiver","location":"ast/ktast.ast/-node/-function-type/-context-receiver/-context-receiver.html","searchKeys":["ContextReceiver","constructor(typeRef: Node.TypeRef, tag: Any? = null)","ktast.ast.Node.FunctionType.ContextReceiver.ContextReceiver"]},{"name":"constructor(typeRef: Node.TypeRef, tag: Any? = null)","description":"ktast.ast.Node.FunctionType.FunctionTypeReceiver.FunctionTypeReceiver","location":"ast/ktast.ast/-node/-function-type/-function-type-receiver/-function-type-receiver.html","searchKeys":["FunctionTypeReceiver","constructor(typeRef: Node.TypeRef, tag: Any? = null)","ktast.ast.Node.FunctionType.FunctionTypeReceiver.FunctionTypeReceiver"]},{"name":"constructor(value: String, form: Node.ConstantLiteralExpression.Form, tag: Any? = null)","description":"ktast.ast.Node.ConstantLiteralExpression.ConstantLiteralExpression","location":"ast/ktast.ast/-node/-constant-literal-expression/-constant-literal-expression.html","searchKeys":["ConstantLiteralExpression","constructor(value: String, form: Node.ConstantLiteralExpression.Form, tag: Any? = null)","ktast.ast.Node.ConstantLiteralExpression.ConstantLiteralExpression"]},{"name":"constructor(whenConditions: List<Node.WhenExpression.WhenCondition>, trailingComma: Node.Keyword.Comma?, body: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.WhenExpression.WhenBranch.Conditional.Conditional","location":"ast/ktast.ast/-node/-when-expression/-when-branch/-conditional/-conditional.html","searchKeys":["Conditional","constructor(whenConditions: List<Node.WhenExpression.WhenCondition>, trailingComma: Node.Keyword.Comma?, body: Node.Expression, tag: Any? = null)","ktast.ast.Node.WhenExpression.WhenBranch.Conditional.Conditional"]},{"name":"constructor(whenKeyword: Node.Keyword.When, lPar: Node.Keyword.LPar?, expression: Node.Expression?, rPar: Node.Keyword.RPar?, whenBranches: List<Node.WhenExpression.WhenBranch>, tag: Any? = null)","description":"ktast.ast.Node.WhenExpression.WhenExpression","location":"ast/ktast.ast/-node/-when-expression/-when-expression.html","searchKeys":["WhenExpression","constructor(whenKeyword: Node.Keyword.When, lPar: Node.Keyword.LPar?, expression: Node.Expression?, rPar: Node.Keyword.RPar?, whenBranches: List<Node.WhenExpression.WhenBranch>, tag: Any? = null)","ktast.ast.Node.WhenExpression.WhenExpression"]},{"name":"constructor(whereKeyword: Node.Keyword.Where, constraints: Node.TypeConstraintSet.TypeConstraints, tag: Any? = null)","description":"ktast.ast.Node.TypeConstraintSet.TypeConstraintSet","location":"ast/ktast.ast/-node/-type-constraint-set/-type-constraint-set.html","searchKeys":["TypeConstraintSet","constructor(whereKeyword: Node.Keyword.Where, constraints: Node.TypeConstraintSet.TypeConstraints, tag: Any? = null)","ktast.ast.Node.TypeConstraintSet.TypeConstraintSet"]},{"name":"constructor(whileKeyword: Node.Keyword.While, condition: Node.ExpressionContainer, body: Node.ExpressionContainer, doWhile: Boolean, tag: Any? = null)","description":"ktast.ast.Node.WhileExpression.WhileExpression","location":"ast/ktast.ast/-node/-while-expression/-while-expression.html","searchKeys":["WhileExpression","constructor(whileKeyword: Node.Keyword.While, condition: Node.ExpressionContainer, body: Node.ExpressionContainer, doWhile: Boolean, tag: Any? = null)","ktast.ast.Node.WhileExpression.WhileExpression"]},{"name":"data class AnnotatedExpression(val annotationSets: List<Node.AnnotationSet>, val expression: Node.Expression, var tag: Any? = null) : Node.Expression, Node.WithAnnotationSets","description":"ktast.ast.Node.AnnotatedExpression","location":"ast/ktast.ast/-node/-annotated-expression/index.html","searchKeys":["AnnotatedExpression","data class AnnotatedExpression(val annotationSets: List<Node.AnnotationSet>, val expression: Node.Expression, var tag: Any? = null) : Node.Expression, Node.WithAnnotationSets","ktast.ast.Node.AnnotatedExpression"]},{"name":"data class Annotation(val type: Node.SimpleType, val args: Node.ValueArgs?, var tag: Any? = null) : Node","description":"ktast.ast.Node.AnnotationSet.Annotation","location":"ast/ktast.ast/-node/-annotation-set/-annotation/index.html","searchKeys":["Annotation","data class Annotation(val type: Node.SimpleType, val args: Node.ValueArgs?, var tag: Any? = null) : Node","ktast.ast.Node.AnnotationSet.Annotation"]},{"name":"data class AnnotationSet(val atSymbol: Node.Keyword.At?, val target: Node.AnnotationSet.Target?, val colon: Node.Keyword.Colon?, val lBracket: Node.Keyword.LBracket?, val annotations: List<Node.AnnotationSet.Annotation>, val rBracket: Node.Keyword.RBracket?, var tag: Any? = null) : Node.Modifier","description":"ktast.ast.Node.AnnotationSet","location":"ast/ktast.ast/-node/-annotation-set/index.html","searchKeys":["AnnotationSet","data class AnnotationSet(val atSymbol: Node.Keyword.At?, val target: Node.AnnotationSet.Target?, val colon: Node.Keyword.Colon?, val lBracket: Node.Keyword.LBracket?, val annotations: List<Node.AnnotationSet.Annotation>, val rBracket: Node.Keyword.RBracket?, var tag: Any? = null) : Node.Modifier","ktast.ast.Node.AnnotationSet"]},{"name":"data class AnonymousFunctionExpression(val function: Node.FunctionDeclaration, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.AnonymousFunctionExpression","location":"ast/ktast.ast/-node/-anonymous-function-expression/index.html","searchKeys":["AnonymousFunctionExpression","data class AnonymousFunctionExpression(val function: Node.FunctionDeclaration, var tag: Any? = null) : Node.Expression","ktast.ast.Node.AnonymousFunctionExpression"]},{"name":"data class ArrayAccessExpression(val expression: Node.Expression, val indices: List<Node.Expression>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.ArrayAccessExpression","location":"ast/ktast.ast/-node/-array-access-expression/index.html","searchKeys":["ArrayAccessExpression","data class ArrayAccessExpression(val expression: Node.Expression, val indices: List<Node.Expression>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.ArrayAccessExpression"]},{"name":"data class At(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.At","location":"ast/ktast.ast/-node/-keyword/-at/index.html","searchKeys":["At","data class At(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.At"]},{"name":"data class BinaryExpression(val lhs: Node.Expression, val operator: Node.BinaryExpression.Operator, val rhs: Node.Expression, var tag: Any? = null) : Node.BaseBinaryExpression","description":"ktast.ast.Node.BinaryExpression","location":"ast/ktast.ast/-node/-binary-expression/index.html","searchKeys":["BinaryExpression","data class BinaryExpression(val lhs: Node.Expression, val operator: Node.BinaryExpression.Operator, val rhs: Node.Expression, var tag: Any? = null) : Node.BaseBinaryExpression","ktast.ast.Node.BinaryExpression"]},{"name":"data class BinaryInfixExpression(val lhs: Node.Expression, val operator: Node.NameExpression, val rhs: Node.Expression, var tag: Any? = null) : Node.BaseBinaryExpression","description":"ktast.ast.Node.BinaryInfixExpression","location":"ast/ktast.ast/-node/-binary-infix-expression/index.html","searchKeys":["BinaryInfixExpression","data class BinaryInfixExpression(val lhs: Node.Expression, val operator: Node.NameExpression, val rhs: Node.Expression, var tag: Any? = null) : Node.BaseBinaryExpression","ktast.ast.Node.BinaryInfixExpression"]},{"name":"data class BinaryTypeExpression(val lhs: Node.Expression, val operator: Node.BinaryTypeExpression.Operator, val rhs: Node.TypeRef, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.BinaryTypeExpression","location":"ast/ktast.ast/-node/-binary-type-expression/index.html","searchKeys":["BinaryTypeExpression","data class BinaryTypeExpression(val lhs: Node.Expression, val operator: Node.BinaryTypeExpression.Operator, val rhs: Node.TypeRef, var tag: Any? = null) : Node.Expression","ktast.ast.Node.BinaryTypeExpression"]},{"name":"data class BlockExpression(val statements: List<Node.Statement>, var tag: Any? = null) : Node.Expression, Node.StatementsContainer","description":"ktast.ast.Node.BlockExpression","location":"ast/ktast.ast/-node/-block-expression/index.html","searchKeys":["BlockExpression","data class BlockExpression(val statements: List<Node.Statement>, var tag: Any? = null) : Node.Expression, Node.StatementsContainer","ktast.ast.Node.BlockExpression"]},{"name":"data class BreakExpression(val label: String?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.BreakExpression","location":"ast/ktast.ast/-node/-break-expression/index.html","searchKeys":["BreakExpression","data class BreakExpression(val label: String?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.BreakExpression"]},{"name":"data class By(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.By","location":"ast/ktast.ast/-node/-keyword/-by/index.html","searchKeys":["By","data class By(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.By"]},{"name":"data class CallConstructor(val type: Node.SimpleType, val typeArgs: Node.TypeArgs?, val args: Node.ValueArgs?, val lambda: Node.CallExpression.LambdaArg?, var tag: Any? = null) : Node.ClassDeclaration.ClassParent","description":"ktast.ast.Node.ClassDeclaration.ClassParent.CallConstructor","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-call-constructor/index.html","searchKeys":["CallConstructor","data class CallConstructor(val type: Node.SimpleType, val typeArgs: Node.TypeArgs?, val args: Node.ValueArgs?, val lambda: Node.CallExpression.LambdaArg?, var tag: Any? = null) : Node.ClassDeclaration.ClassParent","ktast.ast.Node.ClassDeclaration.ClassParent.CallConstructor"]},{"name":"data class CallExpression(val expression: Node.Expression, val typeArgs: Node.TypeArgs?, val args: Node.ValueArgs?, val lambdaArg: Node.CallExpression.LambdaArg?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.CallExpression","location":"ast/ktast.ast/-node/-call-expression/index.html","searchKeys":["CallExpression","data class CallExpression(val expression: Node.Expression, val typeArgs: Node.TypeArgs?, val args: Node.ValueArgs?, val lambdaArg: Node.CallExpression.LambdaArg?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.CallExpression"]},{"name":"data class CallableReferenceExpression(val lhs: Node.DoubleColonExpression.Receiver?, val rhs: Node.NameExpression, var tag: Any? = null) : Node.DoubleColonExpression","description":"ktast.ast.Node.CallableReferenceExpression","location":"ast/ktast.ast/-node/-callable-reference-expression/index.html","searchKeys":["CallableReferenceExpression","data class CallableReferenceExpression(val lhs: Node.DoubleColonExpression.Receiver?, val rhs: Node.NameExpression, var tag: Any? = null) : Node.DoubleColonExpression","ktast.ast.Node.CallableReferenceExpression"]},{"name":"data class Catch(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Catch","location":"ast/ktast.ast/-node/-keyword/-catch/index.html","searchKeys":["Catch","data class Catch(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Catch"]},{"name":"data class CatchClause(val catchKeyword: Node.Keyword.Catch, val params: Node.FunctionParams, val block: Node.BlockExpression, var tag: Any? = null) : Node","description":"ktast.ast.Node.TryExpression.CatchClause","location":"ast/ktast.ast/-node/-try-expression/-catch-clause/index.html","searchKeys":["CatchClause","data class CatchClause(val catchKeyword: Node.Keyword.Catch, val params: Node.FunctionParams, val block: Node.BlockExpression, var tag: Any? = null) : Node","ktast.ast.Node.TryExpression.CatchClause"]},{"name":"data class ClassBody(val enumEntries: List<Node.ClassDeclaration.ClassBody.EnumEntry>, val hasTrailingCommaInEnumEntries: Boolean, val declarations: List<Node.Declaration>, var tag: Any? = null) : Node, Node.DeclarationsContainer","description":"ktast.ast.Node.ClassDeclaration.ClassBody","location":"ast/ktast.ast/-node/-class-declaration/-class-body/index.html","searchKeys":["ClassBody","data class ClassBody(val enumEntries: List<Node.ClassDeclaration.ClassBody.EnumEntry>, val hasTrailingCommaInEnumEntries: Boolean, val declarations: List<Node.Declaration>, var tag: Any? = null) : Node, Node.DeclarationsContainer","ktast.ast.Node.ClassDeclaration.ClassBody"]},{"name":"data class ClassDeclaration(val modifiers: Node.Modifiers?, val declarationKeyword: Node.ClassDeclaration.DeclarationKeyword, val name: Node.NameExpression?, val typeParams: Node.TypeParams?, val primaryConstructor: Node.ClassDeclaration.PrimaryConstructor?, val classParents: Node.ClassDeclaration.ClassParents?, val typeConstraintSet: Node.TypeConstraintSet?, val classBody: Node.ClassDeclaration.ClassBody?, var tag: Any? = null) : Node.Declaration, Node.WithModifiers","description":"ktast.ast.Node.ClassDeclaration","location":"ast/ktast.ast/-node/-class-declaration/index.html","searchKeys":["ClassDeclaration","data class ClassDeclaration(val modifiers: Node.Modifiers?, val declarationKeyword: Node.ClassDeclaration.DeclarationKeyword, val name: Node.NameExpression?, val typeParams: Node.TypeParams?, val primaryConstructor: Node.ClassDeclaration.PrimaryConstructor?, val classParents: Node.ClassDeclaration.ClassParents?, val typeConstraintSet: Node.TypeConstraintSet?, val classBody: Node.ClassDeclaration.ClassBody?, var tag: Any? = null) : Node.Declaration, Node.WithModifiers","ktast.ast.Node.ClassDeclaration"]},{"name":"data class ClassLiteralExpression(val lhs: Node.DoubleColonExpression.Receiver?, var tag: Any? = null) : Node.DoubleColonExpression","description":"ktast.ast.Node.ClassLiteralExpression","location":"ast/ktast.ast/-node/-class-literal-expression/index.html","searchKeys":["ClassLiteralExpression","data class ClassLiteralExpression(val lhs: Node.DoubleColonExpression.Receiver?, var tag: Any? = null) : Node.DoubleColonExpression","ktast.ast.Node.ClassLiteralExpression"]},{"name":"data class ClassParents(val elements: List<Node.ClassDeclaration.ClassParent>, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.ClassDeclaration.ClassParent> ","description":"ktast.ast.Node.ClassDeclaration.ClassParents","location":"ast/ktast.ast/-node/-class-declaration/-class-parents/index.html","searchKeys":["ClassParents","data class ClassParents(val elements: List<Node.ClassDeclaration.ClassParent>, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.ClassDeclaration.ClassParent> ","ktast.ast.Node.ClassDeclaration.ClassParents"]},{"name":"data class CollectionLiteralExpression(val expressions: List<Node.Expression>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.CollectionLiteralExpression","location":"ast/ktast.ast/-node/-collection-literal-expression/index.html","searchKeys":["CollectionLiteralExpression","data class CollectionLiteralExpression(val expressions: List<Node.Expression>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.CollectionLiteralExpression"]},{"name":"data class Colon(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Colon","location":"ast/ktast.ast/-node/-keyword/-colon/index.html","searchKeys":["Colon","data class Colon(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Colon"]},{"name":"data class Comma(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Comma","location":"ast/ktast.ast/-node/-keyword/-comma/index.html","searchKeys":["Comma","data class Comma(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Comma"]},{"name":"data class Comment(val text: String, var tag: Any? = null) : Node.Extra","description":"ktast.ast.Node.Comment","location":"ast/ktast.ast/-node/-comment/index.html","searchKeys":["Comment","data class Comment(val text: String, var tag: Any? = null) : Node.Extra","ktast.ast.Node.Comment"]},{"name":"data class Conditional(val whenConditions: List<Node.WhenExpression.WhenCondition>, val trailingComma: Node.Keyword.Comma?, val body: Node.Expression, var tag: Any? = null) : Node.WhenExpression.WhenBranch","description":"ktast.ast.Node.WhenExpression.WhenBranch.Conditional","location":"ast/ktast.ast/-node/-when-expression/-when-branch/-conditional/index.html","searchKeys":["Conditional","data class Conditional(val whenConditions: List<Node.WhenExpression.WhenCondition>, val trailingComma: Node.Keyword.Comma?, val body: Node.Expression, var tag: Any? = null) : Node.WhenExpression.WhenBranch","ktast.ast.Node.WhenExpression.WhenBranch.Conditional"]},{"name":"data class ConstantLiteralExpression(val value: String, val form: Node.ConstantLiteralExpression.Form, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.ConstantLiteralExpression","location":"ast/ktast.ast/-node/-constant-literal-expression/index.html","searchKeys":["ConstantLiteralExpression","data class ConstantLiteralExpression(val value: String, val form: Node.ConstantLiteralExpression.Form, var tag: Any? = null) : Node.Expression","ktast.ast.Node.ConstantLiteralExpression"]},{"name":"data class Constructor(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Constructor","location":"ast/ktast.ast/-node/-keyword/-constructor/index.html","searchKeys":["Constructor","data class Constructor(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Constructor"]},{"name":"data class ContextReceiver(val typeRef: Node.TypeRef, var tag: Any? = null) : Node","description":"ktast.ast.Node.FunctionType.ContextReceiver","location":"ast/ktast.ast/-node/-function-type/-context-receiver/index.html","searchKeys":["ContextReceiver","data class ContextReceiver(val typeRef: Node.TypeRef, var tag: Any? = null) : Node","ktast.ast.Node.FunctionType.ContextReceiver"]},{"name":"data class ContextReceivers(val elements: List<Node.FunctionType.ContextReceiver>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.FunctionType.ContextReceiver> ","description":"ktast.ast.Node.FunctionType.ContextReceivers","location":"ast/ktast.ast/-node/-function-type/-context-receivers/index.html","searchKeys":["ContextReceivers","data class ContextReceivers(val elements: List<Node.FunctionType.ContextReceiver>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.FunctionType.ContextReceiver> ","ktast.ast.Node.FunctionType.ContextReceivers"]},{"name":"data class ContinueExpression(val label: String?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.ContinueExpression","location":"ast/ktast.ast/-node/-continue-expression/index.html","searchKeys":["ContinueExpression","data class ContinueExpression(val label: String?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.ContinueExpression"]},{"name":"data class Contract(val contractKeyword: Node.Keyword.Contract, val contractEffects: Node.Contract.ContractEffects, var tag: Any? = null) : Node.PostModifier","description":"ktast.ast.Node.Contract","location":"ast/ktast.ast/-node/-contract/index.html","searchKeys":["Contract","data class Contract(val contractKeyword: Node.Keyword.Contract, val contractEffects: Node.Contract.ContractEffects, var tag: Any? = null) : Node.PostModifier","ktast.ast.Node.Contract"]},{"name":"data class Contract(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Contract","location":"ast/ktast.ast/-node/-keyword/-contract/index.html","searchKeys":["Contract","data class Contract(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Contract"]},{"name":"data class ContractEffect(val expression: Node.Expression, var tag: Any? = null) : Node","description":"ktast.ast.Node.Contract.ContractEffect","location":"ast/ktast.ast/-node/-contract/-contract-effect/index.html","searchKeys":["ContractEffect","data class ContractEffect(val expression: Node.Expression, var tag: Any? = null) : Node","ktast.ast.Node.Contract.ContractEffect"]},{"name":"data class ContractEffects(val elements: List<Node.Contract.ContractEffect>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.Contract.ContractEffect> ","description":"ktast.ast.Node.Contract.ContractEffects","location":"ast/ktast.ast/-node/-contract/-contract-effects/index.html","searchKeys":["ContractEffects","data class ContractEffects(val elements: List<Node.Contract.ContractEffect>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.Contract.ContractEffect> ","ktast.ast.Node.Contract.ContractEffects"]},{"name":"data class DeclarationKeyword(val token: Node.ClassDeclaration.DeclarationKeyword.Token, var tag: Any? = null) : Node, Node.TokenContainer<Node.ClassDeclaration.DeclarationKeyword.Token> ","description":"ktast.ast.Node.ClassDeclaration.DeclarationKeyword","location":"ast/ktast.ast/-node/-class-declaration/-declaration-keyword/index.html","searchKeys":["DeclarationKeyword","data class DeclarationKeyword(val token: Node.ClassDeclaration.DeclarationKeyword.Token, var tag: Any? = null) : Node, Node.TokenContainer<Node.ClassDeclaration.DeclarationKeyword.Token> ","ktast.ast.Node.ClassDeclaration.DeclarationKeyword"]},{"name":"data class DelegatedType(val type: Node.SimpleType, val byKeyword: Node.Keyword.By, val expression: Node.Expression, var tag: Any? = null) : Node.ClassDeclaration.ClassParent","description":"ktast.ast.Node.ClassDeclaration.ClassParent.DelegatedType","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-delegated-type/index.html","searchKeys":["DelegatedType","data class DelegatedType(val type: Node.SimpleType, val byKeyword: Node.Keyword.By, val expression: Node.Expression, var tag: Any? = null) : Node.ClassDeclaration.ClassParent","ktast.ast.Node.ClassDeclaration.ClassParent.DelegatedType"]},{"name":"data class DelegationCall(val target: Node.SecondaryConstructorDeclaration.DelegationTarget, val args: Node.ValueArgs?, var tag: Any? = null) : Node","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationCall","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-call/index.html","searchKeys":["DelegationCall","data class DelegationCall(val target: Node.SecondaryConstructorDeclaration.DelegationTarget, val args: Node.ValueArgs?, var tag: Any? = null) : Node","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationCall"]},{"name":"data class DelegationTarget(val token: Node.SecondaryConstructorDeclaration.DelegationTarget.Token, var tag: Any? = null) : Node, Node.TokenContainer<Node.SecondaryConstructorDeclaration.DelegationTarget.Token> ","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-target/index.html","searchKeys":["DelegationTarget","data class DelegationTarget(val token: Node.SecondaryConstructorDeclaration.DelegationTarget.Token, var tag: Any? = null) : Node, Node.TokenContainer<Node.SecondaryConstructorDeclaration.DelegationTarget.Token> ","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget"]},{"name":"data class DynamicType(var tag: Any? = null) : Node.Type","description":"ktast.ast.Node.DynamicType","location":"ast/ktast.ast/-node/-dynamic-type/index.html","searchKeys":["DynamicType","data class DynamicType(var tag: Any? = null) : Node.Type","ktast.ast.Node.DynamicType"]},{"name":"data class Else(val elseKeyword: Node.Keyword.Else, val body: Node.Expression, var tag: Any? = null) : Node.WhenExpression.WhenBranch","description":"ktast.ast.Node.WhenExpression.WhenBranch.Else","location":"ast/ktast.ast/-node/-when-expression/-when-branch/-else/index.html","searchKeys":["Else","data class Else(val elseKeyword: Node.Keyword.Else, val body: Node.Expression, var tag: Any? = null) : Node.WhenExpression.WhenBranch","ktast.ast.Node.WhenExpression.WhenBranch.Else"]},{"name":"data class Else(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Else","location":"ast/ktast.ast/-node/-keyword/-else/index.html","searchKeys":["Else","data class Else(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Else"]},{"name":"data class EnumEntry(val modifiers: Node.Modifiers?, val name: Node.NameExpression, val args: Node.ValueArgs?, val classBody: Node.ClassDeclaration.ClassBody?, var tag: Any? = null) : Node, Node.WithModifiers","description":"ktast.ast.Node.ClassDeclaration.ClassBody.EnumEntry","location":"ast/ktast.ast/-node/-class-declaration/-class-body/-enum-entry/index.html","searchKeys":["EnumEntry","data class EnumEntry(val modifiers: Node.Modifiers?, val name: Node.NameExpression, val args: Node.ValueArgs?, val classBody: Node.ClassDeclaration.ClassBody?, var tag: Any? = null) : Node, Node.WithModifiers","ktast.ast.Node.ClassDeclaration.ClassBody.EnumEntry"]},{"name":"data class Equal(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Equal","location":"ast/ktast.ast/-node/-keyword/-equal/index.html","searchKeys":["Equal","data class Equal(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Equal"]},{"name":"data class Expression(val expression: Node.Expression, var tag: Any? = null) : Node.DoubleColonExpression.Receiver","description":"ktast.ast.Node.DoubleColonExpression.Receiver.Expression","location":"ast/ktast.ast/-node/-double-colon-expression/-receiver/-expression/index.html","searchKeys":["Expression","data class Expression(val expression: Node.Expression, var tag: Any? = null) : Node.DoubleColonExpression.Receiver","ktast.ast.Node.DoubleColonExpression.Receiver.Expression"]},{"name":"data class Expression(val expression: Node.Expression, var tag: Any? = null) : Node.WhenExpression.WhenCondition","description":"ktast.ast.Node.WhenExpression.WhenCondition.Expression","location":"ast/ktast.ast/-node/-when-expression/-when-condition/-expression/index.html","searchKeys":["Expression","data class Expression(val expression: Node.Expression, var tag: Any? = null) : Node.WhenExpression.WhenCondition","ktast.ast.Node.WhenExpression.WhenCondition.Expression"]},{"name":"data class ExpressionContainer(val expression: Node.Expression, var tag: Any? = null) : Node","description":"ktast.ast.Node.ExpressionContainer","location":"ast/ktast.ast/-node/-expression-container/index.html","searchKeys":["ExpressionContainer","data class ExpressionContainer(val expression: Node.Expression, var tag: Any? = null) : Node","ktast.ast.Node.ExpressionContainer"]},{"name":"data class For(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.For","location":"ast/ktast.ast/-node/-keyword/-for/index.html","searchKeys":["For","data class For(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.For"]},{"name":"data class ForExpression(val forKeyword: Node.Keyword.For, val loopParam: Node.LambdaParam, val loopRange: Node.ExpressionContainer, val body: Node.ExpressionContainer, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.ForExpression","location":"ast/ktast.ast/-node/-for-expression/index.html","searchKeys":["ForExpression","data class ForExpression(val forKeyword: Node.Keyword.For, val loopParam: Node.LambdaParam, val loopRange: Node.ExpressionContainer, val body: Node.ExpressionContainer, var tag: Any? = null) : Node.Expression","ktast.ast.Node.ForExpression"]},{"name":"data class Fun(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Fun","location":"ast/ktast.ast/-node/-keyword/-fun/index.html","searchKeys":["Fun","data class Fun(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Fun"]},{"name":"data class FunctionDeclaration(val modifiers: Node.Modifiers?, val funKeyword: Node.Keyword.Fun, val typeParams: Node.TypeParams?, val receiverTypeRef: Node.TypeRef?, val name: Node.NameExpression?, val params: Node.FunctionParams?, val typeRef: Node.TypeRef?, val postModifiers: List<Node.PostModifier>, val equals: Node.Keyword.Equal?, val body: Node.Expression?, var tag: Any? = null) : Node.Declaration, Node.WithModifiers, Node.WithPostModifiers, Node.WithFunctionBody","description":"ktast.ast.Node.FunctionDeclaration","location":"ast/ktast.ast/-node/-function-declaration/index.html","searchKeys":["FunctionDeclaration","data class FunctionDeclaration(val modifiers: Node.Modifiers?, val funKeyword: Node.Keyword.Fun, val typeParams: Node.TypeParams?, val receiverTypeRef: Node.TypeRef?, val name: Node.NameExpression?, val params: Node.FunctionParams?, val typeRef: Node.TypeRef?, val postModifiers: List<Node.PostModifier>, val equals: Node.Keyword.Equal?, val body: Node.Expression?, var tag: Any? = null) : Node.Declaration, Node.WithModifiers, Node.WithPostModifiers, Node.WithFunctionBody","ktast.ast.Node.FunctionDeclaration"]},{"name":"data class FunctionParam(val modifiers: Node.Modifiers?, val valOrVar: Node.PropertyDeclaration.ValOrVar?, val name: Node.NameExpression, val typeRef: Node.TypeRef?, val equals: Node.Keyword.Equal?, val defaultValue: Node.Expression?, var tag: Any? = null) : Node, Node.WithModifiers","description":"ktast.ast.Node.FunctionParam","location":"ast/ktast.ast/-node/-function-param/index.html","searchKeys":["FunctionParam","data class FunctionParam(val modifiers: Node.Modifiers?, val valOrVar: Node.PropertyDeclaration.ValOrVar?, val name: Node.NameExpression, val typeRef: Node.TypeRef?, val equals: Node.Keyword.Equal?, val defaultValue: Node.Expression?, var tag: Any? = null) : Node, Node.WithModifiers","ktast.ast.Node.FunctionParam"]},{"name":"data class FunctionParams(val elements: List<Node.FunctionParam>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.FunctionParam> ","description":"ktast.ast.Node.FunctionParams","location":"ast/ktast.ast/-node/-function-params/index.html","searchKeys":["FunctionParams","data class FunctionParams(val elements: List<Node.FunctionParam>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.FunctionParam> ","ktast.ast.Node.FunctionParams"]},{"name":"data class FunctionType(val lPar: Node.Keyword.LPar?, val modifiers: Node.Modifiers?, val contextReceivers: Node.FunctionType.ContextReceivers?, val functionTypeReceiver: Node.FunctionType.FunctionTypeReceiver?, val params: Node.FunctionType.Params?, val returnTypeRef: Node.TypeRef, val rPar: Node.Keyword.RPar?, var tag: Any? = null) : Node.Type, Node.WithModifiers","description":"ktast.ast.Node.FunctionType","location":"ast/ktast.ast/-node/-function-type/index.html","searchKeys":["FunctionType","data class FunctionType(val lPar: Node.Keyword.LPar?, val modifiers: Node.Modifiers?, val contextReceivers: Node.FunctionType.ContextReceivers?, val functionTypeReceiver: Node.FunctionType.FunctionTypeReceiver?, val params: Node.FunctionType.Params?, val returnTypeRef: Node.TypeRef, val rPar: Node.Keyword.RPar?, var tag: Any? = null) : Node.Type, Node.WithModifiers","ktast.ast.Node.FunctionType"]},{"name":"data class FunctionTypeReceiver(val typeRef: Node.TypeRef, var tag: Any? = null) : Node","description":"ktast.ast.Node.FunctionType.FunctionTypeReceiver","location":"ast/ktast.ast/-node/-function-type/-function-type-receiver/index.html","searchKeys":["FunctionTypeReceiver","data class FunctionTypeReceiver(val typeRef: Node.TypeRef, var tag: Any? = null) : Node","ktast.ast.Node.FunctionType.FunctionTypeReceiver"]},{"name":"data class Get(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Get","location":"ast/ktast.ast/-node/-keyword/-get/index.html","searchKeys":["Get","data class Get(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Get"]},{"name":"data class Getter(val modifiers: Node.Modifiers?, val getKeyword: Node.Keyword.Get, val typeRef: Node.TypeRef?, val postModifiers: List<Node.PostModifier>, val equals: Node.Keyword.Equal?, val body: Node.Expression?, var tag: Any? = null) : Node.PropertyDeclaration.Accessor","description":"ktast.ast.Node.PropertyDeclaration.Getter","location":"ast/ktast.ast/-node/-property-declaration/-getter/index.html","searchKeys":["Getter","data class Getter(val modifiers: Node.Modifiers?, val getKeyword: Node.Keyword.Get, val typeRef: Node.TypeRef?, val postModifiers: List<Node.PostModifier>, val equals: Node.Keyword.Equal?, val body: Node.Expression?, var tag: Any? = null) : Node.PropertyDeclaration.Accessor","ktast.ast.Node.PropertyDeclaration.Getter"]},{"name":"data class If(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.If","location":"ast/ktast.ast/-node/-keyword/-if/index.html","searchKeys":["If","data class If(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.If"]},{"name":"data class IfExpression(val ifKeyword: Node.Keyword.If, val condition: Node.Expression, val body: Node.ExpressionContainer, val elseBody: Node.ExpressionContainer?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.IfExpression","location":"ast/ktast.ast/-node/-if-expression/index.html","searchKeys":["IfExpression","data class IfExpression(val ifKeyword: Node.Keyword.If, val condition: Node.Expression, val body: Node.ExpressionContainer, val elseBody: Node.ExpressionContainer?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.IfExpression"]},{"name":"data class Import(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Import","location":"ast/ktast.ast/-node/-keyword/-import/index.html","searchKeys":["Import","data class Import(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Import"]},{"name":"data class ImportAlias(val name: Node.NameExpression, var tag: Any? = null) : Node","description":"ktast.ast.Node.ImportDirective.ImportAlias","location":"ast/ktast.ast/-node/-import-directive/-import-alias/index.html","searchKeys":["ImportAlias","data class ImportAlias(val name: Node.NameExpression, var tag: Any? = null) : Node","ktast.ast.Node.ImportDirective.ImportAlias"]},{"name":"data class ImportDirective(val importKeyword: Node.Keyword.Import, val names: List<Node.NameExpression>, val importAlias: Node.ImportDirective.ImportAlias?, var tag: Any? = null) : Node","description":"ktast.ast.Node.ImportDirective","location":"ast/ktast.ast/-node/-import-directive/index.html","searchKeys":["ImportDirective","data class ImportDirective(val importKeyword: Node.Keyword.Import, val names: List<Node.NameExpression>, val importAlias: Node.ImportDirective.ImportAlias?, var tag: Any? = null) : Node","ktast.ast.Node.ImportDirective"]},{"name":"data class ImportDirectives(val elements: List<Node.ImportDirective>, var tag: Any? = null) : Node.NodeList<Node.ImportDirective> ","description":"ktast.ast.Node.ImportDirectives","location":"ast/ktast.ast/-node/-import-directives/index.html","searchKeys":["ImportDirectives","data class ImportDirectives(val elements: List<Node.ImportDirective>, var tag: Any? = null) : Node.NodeList<Node.ImportDirective> ","ktast.ast.Node.ImportDirectives"]},{"name":"data class In(val expression: Node.Expression, val not: Boolean, var tag: Any? = null) : Node.WhenExpression.WhenCondition","description":"ktast.ast.Node.WhenExpression.WhenCondition.In","location":"ast/ktast.ast/-node/-when-expression/-when-condition/-in/index.html","searchKeys":["In","data class In(val expression: Node.Expression, val not: Boolean, var tag: Any? = null) : Node.WhenExpression.WhenCondition","ktast.ast.Node.WhenExpression.WhenCondition.In"]},{"name":"data class InitDeclaration(val modifiers: Node.Modifiers?, val block: Node.BlockExpression, var tag: Any? = null) : Node.Declaration, Node.WithModifiers","description":"ktast.ast.Node.InitDeclaration","location":"ast/ktast.ast/-node/-init-declaration/index.html","searchKeys":["InitDeclaration","data class InitDeclaration(val modifiers: Node.Modifiers?, val block: Node.BlockExpression, var tag: Any? = null) : Node.Declaration, Node.WithModifiers","ktast.ast.Node.InitDeclaration"]},{"name":"data class Is(val typeRef: Node.TypeRef, val not: Boolean, var tag: Any? = null) : Node.WhenExpression.WhenCondition","description":"ktast.ast.Node.WhenExpression.WhenCondition.Is","location":"ast/ktast.ast/-node/-when-expression/-when-condition/-is/index.html","searchKeys":["Is","data class Is(val typeRef: Node.TypeRef, val not: Boolean, var tag: Any? = null) : Node.WhenExpression.WhenCondition","ktast.ast.Node.WhenExpression.WhenCondition.Is"]},{"name":"data class KeywordModifier(val token: Node.KeywordModifier.Token, var tag: Any? = null) : Node.Modifier, Node.TokenContainer<Node.KeywordModifier.Token> ","description":"ktast.ast.Node.KeywordModifier","location":"ast/ktast.ast/-node/-keyword-modifier/index.html","searchKeys":["KeywordModifier","data class KeywordModifier(val token: Node.KeywordModifier.Token, var tag: Any? = null) : Node.Modifier, Node.TokenContainer<Node.KeywordModifier.Token> ","ktast.ast.Node.KeywordModifier"]},{"name":"data class KotlinFile(val annotationSets: List<Node.AnnotationSet>, val packageDirective: Node.PackageDirective?, val importDirectives: Node.ImportDirectives?, val declarations: List<Node.Declaration>, var tag: Any? = null) : Node, Node.KotlinEntry, Node.DeclarationsContainer","description":"ktast.ast.Node.KotlinFile","location":"ast/ktast.ast/-node/-kotlin-file/index.html","searchKeys":["KotlinFile","data class KotlinFile(val annotationSets: List<Node.AnnotationSet>, val packageDirective: Node.PackageDirective?, val importDirectives: Node.ImportDirectives?, val declarations: List<Node.Declaration>, var tag: Any? = null) : Node, Node.KotlinEntry, Node.DeclarationsContainer","ktast.ast.Node.KotlinFile"]},{"name":"data class KotlinScript(val annotationSets: List<Node.AnnotationSet>, val packageDirective: Node.PackageDirective?, val importDirectives: Node.ImportDirectives?, val expressions: List<Node.Expression>, var tag: Any? = null) : Node, Node.KotlinEntry","description":"ktast.ast.Node.KotlinScript","location":"ast/ktast.ast/-node/-kotlin-script/index.html","searchKeys":["KotlinScript","data class KotlinScript(val annotationSets: List<Node.AnnotationSet>, val packageDirective: Node.PackageDirective?, val importDirectives: Node.ImportDirectives?, val expressions: List<Node.Expression>, var tag: Any? = null) : Node, Node.KotlinEntry","ktast.ast.Node.KotlinScript"]},{"name":"data class LBracket(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.LBracket","location":"ast/ktast.ast/-node/-keyword/-l-bracket/index.html","searchKeys":["LBracket","data class LBracket(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.LBracket"]},{"name":"data class LPar(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.LPar","location":"ast/ktast.ast/-node/-keyword/-l-par/index.html","searchKeys":["LPar","data class LPar(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.LPar"]},{"name":"data class LabeledExpression(val label: String, val expression: Node.Expression, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.LabeledExpression","location":"ast/ktast.ast/-node/-labeled-expression/index.html","searchKeys":["LabeledExpression","data class LabeledExpression(val label: String, val expression: Node.Expression, var tag: Any? = null) : Node.Expression","ktast.ast.Node.LabeledExpression"]},{"name":"data class LambdaArg(val annotationSets: List<Node.AnnotationSet>, val label: String?, val expression: Node.LambdaExpression, var tag: Any? = null) : Node, Node.WithAnnotationSets","description":"ktast.ast.Node.CallExpression.LambdaArg","location":"ast/ktast.ast/-node/-call-expression/-lambda-arg/index.html","searchKeys":["LambdaArg","data class LambdaArg(val annotationSets: List<Node.AnnotationSet>, val label: String?, val expression: Node.LambdaExpression, var tag: Any? = null) : Node, Node.WithAnnotationSets","ktast.ast.Node.CallExpression.LambdaArg"]},{"name":"data class LambdaBody(val statements: List<Node.Statement>, var tag: Any? = null) : Node.Expression, Node.StatementsContainer","description":"ktast.ast.Node.LambdaExpression.LambdaBody","location":"ast/ktast.ast/-node/-lambda-expression/-lambda-body/index.html","searchKeys":["LambdaBody","data class LambdaBody(val statements: List<Node.Statement>, var tag: Any? = null) : Node.Expression, Node.StatementsContainer","ktast.ast.Node.LambdaExpression.LambdaBody"]},{"name":"data class LambdaExpression(val params: Node.LambdaParams?, val lambdaBody: Node.LambdaExpression.LambdaBody?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.LambdaExpression","location":"ast/ktast.ast/-node/-lambda-expression/index.html","searchKeys":["LambdaExpression","data class LambdaExpression(val params: Node.LambdaParams?, val lambdaBody: Node.LambdaExpression.LambdaBody?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.LambdaExpression"]},{"name":"data class LambdaParam(val lPar: Node.Keyword.LPar?, val variables: List<Node.LambdaParam.Variable>, val trailingComma: Node.Keyword.Comma?, val rPar: Node.Keyword.RPar?, val colon: Node.Keyword.Colon?, val destructTypeRef: Node.TypeRef?, var tag: Any? = null) : Node","description":"ktast.ast.Node.LambdaParam","location":"ast/ktast.ast/-node/-lambda-param/index.html","searchKeys":["LambdaParam","data class LambdaParam(val lPar: Node.Keyword.LPar?, val variables: List<Node.LambdaParam.Variable>, val trailingComma: Node.Keyword.Comma?, val rPar: Node.Keyword.RPar?, val colon: Node.Keyword.Colon?, val destructTypeRef: Node.TypeRef?, var tag: Any? = null) : Node","ktast.ast.Node.LambdaParam"]},{"name":"data class LambdaParams(val elements: List<Node.LambdaParam>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.LambdaParam> ","description":"ktast.ast.Node.LambdaParams","location":"ast/ktast.ast/-node/-lambda-params/index.html","searchKeys":["LambdaParams","data class LambdaParams(val elements: List<Node.LambdaParam>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.LambdaParam> ","ktast.ast.Node.LambdaParams"]},{"name":"data class LiteralStringEntry(val str: String, var tag: Any? = null) : Node.StringLiteralExpression.Entry","description":"ktast.ast.Node.StringLiteralExpression.LiteralStringEntry","location":"ast/ktast.ast/-node/-string-literal-expression/-literal-string-entry/index.html","searchKeys":["LiteralStringEntry","data class LiteralStringEntry(val str: String, var tag: Any? = null) : Node.StringLiteralExpression.Entry","ktast.ast.Node.StringLiteralExpression.LiteralStringEntry"]},{"name":"data class LongTemplateEntry(val expression: Node.Expression, var tag: Any? = null) : Node.StringLiteralExpression.Entry","description":"ktast.ast.Node.StringLiteralExpression.LongTemplateEntry","location":"ast/ktast.ast/-node/-string-literal-expression/-long-template-entry/index.html","searchKeys":["LongTemplateEntry","data class LongTemplateEntry(val expression: Node.Expression, var tag: Any? = null) : Node.StringLiteralExpression.Entry","ktast.ast.Node.StringLiteralExpression.LongTemplateEntry"]},{"name":"data class Modifiers(val elements: List<Node.Modifier>, var tag: Any? = null) : Node.NodeList<Node.Modifier> ","description":"ktast.ast.Node.Modifiers","location":"ast/ktast.ast/-node/-modifiers/index.html","searchKeys":["Modifiers","data class Modifiers(val elements: List<Node.Modifier>, var tag: Any? = null) : Node.NodeList<Node.Modifier> ","ktast.ast.Node.Modifiers"]},{"name":"data class NameExpression(val name: String, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.NameExpression","location":"ast/ktast.ast/-node/-name-expression/index.html","searchKeys":["NameExpression","data class NameExpression(val name: String, var tag: Any? = null) : Node.Expression","ktast.ast.Node.NameExpression"]},{"name":"data class NullableType(val lPar: Node.Keyword.LPar?, val modifiers: Node.Modifiers?, val type: Node.Type, val rPar: Node.Keyword.RPar?, var tag: Any? = null) : Node.Type, Node.WithModifiers","description":"ktast.ast.Node.NullableType","location":"ast/ktast.ast/-node/-nullable-type/index.html","searchKeys":["NullableType","data class NullableType(val lPar: Node.Keyword.LPar?, val modifiers: Node.Modifiers?, val type: Node.Type, val rPar: Node.Keyword.RPar?, var tag: Any? = null) : Node.Type, Node.WithModifiers","ktast.ast.Node.NullableType"]},{"name":"data class ObjectLiteralExpression(val declaration: Node.ClassDeclaration, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.ObjectLiteralExpression","location":"ast/ktast.ast/-node/-object-literal-expression/index.html","searchKeys":["ObjectLiteralExpression","data class ObjectLiteralExpression(val declaration: Node.ClassDeclaration, var tag: Any? = null) : Node.Expression","ktast.ast.Node.ObjectLiteralExpression"]},{"name":"data class Operator(val token: Node.BinaryExpression.Operator.Token, var tag: Any? = null) : Node, Node.TokenContainer<Node.BinaryExpression.Operator.Token> ","description":"ktast.ast.Node.BinaryExpression.Operator","location":"ast/ktast.ast/-node/-binary-expression/-operator/index.html","searchKeys":["Operator","data class Operator(val token: Node.BinaryExpression.Operator.Token, var tag: Any? = null) : Node, Node.TokenContainer<Node.BinaryExpression.Operator.Token> ","ktast.ast.Node.BinaryExpression.Operator"]},{"name":"data class Operator(val token: Node.BinaryTypeExpression.Operator.Token, var tag: Any? = null) : Node, Node.TokenContainer<Node.BinaryTypeExpression.Operator.Token> ","description":"ktast.ast.Node.BinaryTypeExpression.Operator","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/index.html","searchKeys":["Operator","data class Operator(val token: Node.BinaryTypeExpression.Operator.Token, var tag: Any? = null) : Node, Node.TokenContainer<Node.BinaryTypeExpression.Operator.Token> ","ktast.ast.Node.BinaryTypeExpression.Operator"]},{"name":"data class Operator(val token: Node.UnaryExpression.Operator.Token, var tag: Any? = null) : Node, Node.TokenContainer<Node.UnaryExpression.Operator.Token> ","description":"ktast.ast.Node.UnaryExpression.Operator","location":"ast/ktast.ast/-node/-unary-expression/-operator/index.html","searchKeys":["Operator","data class Operator(val token: Node.UnaryExpression.Operator.Token, var tag: Any? = null) : Node, Node.TokenContainer<Node.UnaryExpression.Operator.Token> ","ktast.ast.Node.UnaryExpression.Operator"]},{"name":"data class Package(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Package","location":"ast/ktast.ast/-node/-keyword/-package/index.html","searchKeys":["Package","data class Package(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Package"]},{"name":"data class PackageDirective(val modifiers: Node.Modifiers?, val packageKeyword: Node.Keyword.Package, val names: List<Node.NameExpression>, var tag: Any? = null) : Node, Node.WithModifiers","description":"ktast.ast.Node.PackageDirective","location":"ast/ktast.ast/-node/-package-directive/index.html","searchKeys":["PackageDirective","data class PackageDirective(val modifiers: Node.Modifiers?, val packageKeyword: Node.Keyword.Package, val names: List<Node.NameExpression>, var tag: Any? = null) : Node, Node.WithModifiers","ktast.ast.Node.PackageDirective"]},{"name":"data class Param(val name: Node.NameExpression?, val typeRef: Node.TypeRef, var tag: Any? = null) : Node","description":"ktast.ast.Node.FunctionType.Param","location":"ast/ktast.ast/-node/-function-type/-param/index.html","searchKeys":["Param","data class Param(val name: Node.NameExpression?, val typeRef: Node.TypeRef, var tag: Any? = null) : Node","ktast.ast.Node.FunctionType.Param"]},{"name":"data class Params(val elements: List<Node.FunctionType.Param>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.FunctionType.Param> ","description":"ktast.ast.Node.FunctionType.Params","location":"ast/ktast.ast/-node/-function-type/-params/index.html","searchKeys":["Params","data class Params(val elements: List<Node.FunctionType.Param>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.FunctionType.Param> ","ktast.ast.Node.FunctionType.Params"]},{"name":"data class ParenthesizedExpression(val expression: Node.Expression, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.ParenthesizedExpression","location":"ast/ktast.ast/-node/-parenthesized-expression/index.html","searchKeys":["ParenthesizedExpression","data class ParenthesizedExpression(val expression: Node.Expression, var tag: Any? = null) : Node.Expression","ktast.ast.Node.ParenthesizedExpression"]},{"name":"data class PrimaryConstructor(val modifiers: Node.Modifiers?, val constructorKeyword: Node.Keyword.Constructor?, val params: Node.FunctionParams?, var tag: Any? = null) : Node, Node.WithModifiers","description":"ktast.ast.Node.ClassDeclaration.PrimaryConstructor","location":"ast/ktast.ast/-node/-class-declaration/-primary-constructor/index.html","searchKeys":["PrimaryConstructor","data class PrimaryConstructor(val modifiers: Node.Modifiers?, val constructorKeyword: Node.Keyword.Constructor?, val params: Node.FunctionParams?, var tag: Any? = null) : Node, Node.WithModifiers","ktast.ast.Node.ClassDeclaration.PrimaryConstructor"]},{"name":"data class PropertyDeclaration(val modifiers: Node.Modifiers?, val valOrVar: Node.PropertyDeclaration.ValOrVar, val typeParams: Node.TypeParams?, val receiverTypeRef: Node.TypeRef?, val lPar: Node.Keyword.LPar?, val variables: List<Node.Variable>, val trailingComma: Node.Keyword.Comma?, val rPar: Node.Keyword.RPar?, val typeConstraintSet: Node.TypeConstraintSet?, val equals: Node.Keyword.Equal?, val initializer: Node.Expression?, val propertyDelegate: Node.PropertyDeclaration.PropertyDelegate?, val accessors: List<Node.PropertyDeclaration.Accessor>, var tag: Any? = null) : Node.Declaration, Node.WithModifiers","description":"ktast.ast.Node.PropertyDeclaration","location":"ast/ktast.ast/-node/-property-declaration/index.html","searchKeys":["PropertyDeclaration","data class PropertyDeclaration(val modifiers: Node.Modifiers?, val valOrVar: Node.PropertyDeclaration.ValOrVar, val typeParams: Node.TypeParams?, val receiverTypeRef: Node.TypeRef?, val lPar: Node.Keyword.LPar?, val variables: List<Node.Variable>, val trailingComma: Node.Keyword.Comma?, val rPar: Node.Keyword.RPar?, val typeConstraintSet: Node.TypeConstraintSet?, val equals: Node.Keyword.Equal?, val initializer: Node.Expression?, val propertyDelegate: Node.PropertyDeclaration.PropertyDelegate?, val accessors: List<Node.PropertyDeclaration.Accessor>, var tag: Any? = null) : Node.Declaration, Node.WithModifiers","ktast.ast.Node.PropertyDeclaration"]},{"name":"data class PropertyDelegate(val byKeyword: Node.Keyword.By, val expression: Node.Expression, var tag: Any? = null) : Node","description":"ktast.ast.Node.PropertyDeclaration.PropertyDelegate","location":"ast/ktast.ast/-node/-property-declaration/-property-delegate/index.html","searchKeys":["PropertyDelegate","data class PropertyDelegate(val byKeyword: Node.Keyword.By, val expression: Node.Expression, var tag: Any? = null) : Node","ktast.ast.Node.PropertyDeclaration.PropertyDelegate"]},{"name":"data class PropertyExpression(val declaration: Node.PropertyDeclaration, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.PropertyExpression","location":"ast/ktast.ast/-node/-property-expression/index.html","searchKeys":["PropertyExpression","data class PropertyExpression(val declaration: Node.PropertyDeclaration, var tag: Any? = null) : Node.Expression","ktast.ast.Node.PropertyExpression"]},{"name":"data class Qualifier(val name: Node.NameExpression, val typeArgs: Node.TypeArgs?, var tag: Any? = null) : Node, Node.Type.NameWithTypeArgs","description":"ktast.ast.Node.SimpleType.Qualifier","location":"ast/ktast.ast/-node/-simple-type/-qualifier/index.html","searchKeys":["Qualifier","data class Qualifier(val name: Node.NameExpression, val typeArgs: Node.TypeArgs?, var tag: Any? = null) : Node, Node.Type.NameWithTypeArgs","ktast.ast.Node.SimpleType.Qualifier"]},{"name":"data class Question(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Question","location":"ast/ktast.ast/-node/-keyword/-question/index.html","searchKeys":["Question","data class Question(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Question"]},{"name":"data class RBracket(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.RBracket","location":"ast/ktast.ast/-node/-keyword/-r-bracket/index.html","searchKeys":["RBracket","data class RBracket(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.RBracket"]},{"name":"data class RPar(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.RPar","location":"ast/ktast.ast/-node/-keyword/-r-par/index.html","searchKeys":["RPar","data class RPar(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.RPar"]},{"name":"data class RegularEscapeEntry(val char: Char, var tag: Any? = null) : Node.StringLiteralExpression.Entry","description":"ktast.ast.Node.StringLiteralExpression.RegularEscapeEntry","location":"ast/ktast.ast/-node/-string-literal-expression/-regular-escape-entry/index.html","searchKeys":["RegularEscapeEntry","data class RegularEscapeEntry(val char: Char, var tag: Any? = null) : Node.StringLiteralExpression.Entry","ktast.ast.Node.StringLiteralExpression.RegularEscapeEntry"]},{"name":"data class ReturnExpression(val label: String?, val expression: Node.Expression?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.ReturnExpression","location":"ast/ktast.ast/-node/-return-expression/index.html","searchKeys":["ReturnExpression","data class ReturnExpression(val label: String?, val expression: Node.Expression?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.ReturnExpression"]},{"name":"data class SecondaryConstructorDeclaration(val modifiers: Node.Modifiers?, val constructorKeyword: Node.Keyword.Constructor, val params: Node.FunctionParams?, val delegationCall: Node.SecondaryConstructorDeclaration.DelegationCall?, val block: Node.BlockExpression?, var tag: Any? = null) : Node.Declaration, Node.WithModifiers","description":"ktast.ast.Node.SecondaryConstructorDeclaration","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/index.html","searchKeys":["SecondaryConstructorDeclaration","data class SecondaryConstructorDeclaration(val modifiers: Node.Modifiers?, val constructorKeyword: Node.Keyword.Constructor, val params: Node.FunctionParams?, val delegationCall: Node.SecondaryConstructorDeclaration.DelegationCall?, val block: Node.BlockExpression?, var tag: Any? = null) : Node.Declaration, Node.WithModifiers","ktast.ast.Node.SecondaryConstructorDeclaration"]},{"name":"data class Semicolon(val text: String, var tag: Any? = null) : Node.Extra","description":"ktast.ast.Node.Semicolon","location":"ast/ktast.ast/-node/-semicolon/index.html","searchKeys":["Semicolon","data class Semicolon(val text: String, var tag: Any? = null) : Node.Extra","ktast.ast.Node.Semicolon"]},{"name":"data class Set(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Set","location":"ast/ktast.ast/-node/-keyword/-set/index.html","searchKeys":["Set","data class Set(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Set"]},{"name":"data class Setter(val modifiers: Node.Modifiers?, val setKeyword: Node.Keyword.Set, val params: Node.LambdaParams?, val postModifiers: List<Node.PostModifier>, val equals: Node.Keyword.Equal?, val body: Node.Expression?, var tag: Any? = null) : Node.PropertyDeclaration.Accessor","description":"ktast.ast.Node.PropertyDeclaration.Setter","location":"ast/ktast.ast/-node/-property-declaration/-setter/index.html","searchKeys":["Setter","data class Setter(val modifiers: Node.Modifiers?, val setKeyword: Node.Keyword.Set, val params: Node.LambdaParams?, val postModifiers: List<Node.PostModifier>, val equals: Node.Keyword.Equal?, val body: Node.Expression?, var tag: Any? = null) : Node.PropertyDeclaration.Accessor","ktast.ast.Node.PropertyDeclaration.Setter"]},{"name":"data class ShortTemplateEntry(val str: String, var tag: Any? = null) : Node.StringLiteralExpression.Entry","description":"ktast.ast.Node.StringLiteralExpression.ShortTemplateEntry","location":"ast/ktast.ast/-node/-string-literal-expression/-short-template-entry/index.html","searchKeys":["ShortTemplateEntry","data class ShortTemplateEntry(val str: String, var tag: Any? = null) : Node.StringLiteralExpression.Entry","ktast.ast.Node.StringLiteralExpression.ShortTemplateEntry"]},{"name":"data class SimpleType(val qualifiers: List<Node.SimpleType.Qualifier>, val name: Node.NameExpression, val typeArgs: Node.TypeArgs?, var tag: Any? = null) : Node.Type, Node.Type.NameWithTypeArgs","description":"ktast.ast.Node.SimpleType","location":"ast/ktast.ast/-node/-simple-type/index.html","searchKeys":["SimpleType","data class SimpleType(val qualifiers: List<Node.SimpleType.Qualifier>, val name: Node.NameExpression, val typeArgs: Node.TypeArgs?, var tag: Any? = null) : Node.Type, Node.Type.NameWithTypeArgs","ktast.ast.Node.SimpleType"]},{"name":"data class StringLiteralExpression(val entries: List<Node.StringLiteralExpression.Entry>, val raw: Boolean, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.StringLiteralExpression","location":"ast/ktast.ast/-node/-string-literal-expression/index.html","searchKeys":["StringLiteralExpression","data class StringLiteralExpression(val entries: List<Node.StringLiteralExpression.Entry>, val raw: Boolean, var tag: Any? = null) : Node.Expression","ktast.ast.Node.StringLiteralExpression"]},{"name":"data class SuperExpression(val typeArg: Node.TypeRef?, val label: String?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.SuperExpression","location":"ast/ktast.ast/-node/-super-expression/index.html","searchKeys":["SuperExpression","data class SuperExpression(val typeArg: Node.TypeRef?, val label: String?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.SuperExpression"]},{"name":"data class Target(val token: Node.AnnotationSet.Target.Token, var tag: Any? = null) : Node, Node.TokenContainer<Node.AnnotationSet.Target.Token> ","description":"ktast.ast.Node.AnnotationSet.Target","location":"ast/ktast.ast/-node/-annotation-set/-target/index.html","searchKeys":["Target","data class Target(val token: Node.AnnotationSet.Target.Token, var tag: Any? = null) : Node, Node.TokenContainer<Node.AnnotationSet.Target.Token> ","ktast.ast.Node.AnnotationSet.Target"]},{"name":"data class ThisExpression(val label: String?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.ThisExpression","location":"ast/ktast.ast/-node/-this-expression/index.html","searchKeys":["ThisExpression","data class ThisExpression(val label: String?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.ThisExpression"]},{"name":"data class ThrowExpression(val expression: Node.Expression, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.ThrowExpression","location":"ast/ktast.ast/-node/-throw-expression/index.html","searchKeys":["ThrowExpression","data class ThrowExpression(val expression: Node.Expression, var tag: Any? = null) : Node.Expression","ktast.ast.Node.ThrowExpression"]},{"name":"data class TryExpression(val block: Node.BlockExpression, val catchClauses: List<Node.TryExpression.CatchClause>, val finallyBlock: Node.BlockExpression?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.TryExpression","location":"ast/ktast.ast/-node/-try-expression/index.html","searchKeys":["TryExpression","data class TryExpression(val block: Node.BlockExpression, val catchClauses: List<Node.TryExpression.CatchClause>, val finallyBlock: Node.BlockExpression?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.TryExpression"]},{"name":"data class Type(val type: Node.SimpleType, val questionMarks: List<Node.Keyword.Question>, var tag: Any? = null) : Node.DoubleColonExpression.Receiver","description":"ktast.ast.Node.DoubleColonExpression.Receiver.Type","location":"ast/ktast.ast/-node/-double-colon-expression/-receiver/-type/index.html","searchKeys":["Type","data class Type(val type: Node.SimpleType, val questionMarks: List<Node.Keyword.Question>, var tag: Any? = null) : Node.DoubleColonExpression.Receiver","ktast.ast.Node.DoubleColonExpression.Receiver.Type"]},{"name":"data class Type(val type: Node.SimpleType, var tag: Any? = null) : Node.ClassDeclaration.ClassParent","description":"ktast.ast.Node.ClassDeclaration.ClassParent.Type","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-type/index.html","searchKeys":["Type","data class Type(val type: Node.SimpleType, var tag: Any? = null) : Node.ClassDeclaration.ClassParent","ktast.ast.Node.ClassDeclaration.ClassParent.Type"]},{"name":"data class TypeAliasDeclaration(val modifiers: Node.Modifiers?, val name: Node.NameExpression, val typeParams: Node.TypeParams?, val typeRef: Node.TypeRef, var tag: Any? = null) : Node.Declaration, Node.WithModifiers","description":"ktast.ast.Node.TypeAliasDeclaration","location":"ast/ktast.ast/-node/-type-alias-declaration/index.html","searchKeys":["TypeAliasDeclaration","data class TypeAliasDeclaration(val modifiers: Node.Modifiers?, val name: Node.NameExpression, val typeParams: Node.TypeParams?, val typeRef: Node.TypeRef, var tag: Any? = null) : Node.Declaration, Node.WithModifiers","ktast.ast.Node.TypeAliasDeclaration"]},{"name":"data class TypeArg(val modifiers: Node.Modifiers?, val typeRef: Node.TypeRef?, val asterisk: Boolean, var tag: Any? = null) : Node, Node.WithModifiers","description":"ktast.ast.Node.TypeArg","location":"ast/ktast.ast/-node/-type-arg/index.html","searchKeys":["TypeArg","data class TypeArg(val modifiers: Node.Modifiers?, val typeRef: Node.TypeRef?, val asterisk: Boolean, var tag: Any? = null) : Node, Node.WithModifiers","ktast.ast.Node.TypeArg"]},{"name":"data class TypeArgs(val elements: List<Node.TypeArg>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.TypeArg> ","description":"ktast.ast.Node.TypeArgs","location":"ast/ktast.ast/-node/-type-args/index.html","searchKeys":["TypeArgs","data class TypeArgs(val elements: List<Node.TypeArg>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.TypeArg> ","ktast.ast.Node.TypeArgs"]},{"name":"data class TypeConstraint(val annotationSets: List<Node.AnnotationSet>, val name: Node.NameExpression, val typeRef: Node.TypeRef, var tag: Any? = null) : Node, Node.WithAnnotationSets","description":"ktast.ast.Node.TypeConstraintSet.TypeConstraint","location":"ast/ktast.ast/-node/-type-constraint-set/-type-constraint/index.html","searchKeys":["TypeConstraint","data class TypeConstraint(val annotationSets: List<Node.AnnotationSet>, val name: Node.NameExpression, val typeRef: Node.TypeRef, var tag: Any? = null) : Node, Node.WithAnnotationSets","ktast.ast.Node.TypeConstraintSet.TypeConstraint"]},{"name":"data class TypeConstraintSet(val whereKeyword: Node.Keyword.Where, val constraints: Node.TypeConstraintSet.TypeConstraints, var tag: Any? = null) : Node.PostModifier","description":"ktast.ast.Node.TypeConstraintSet","location":"ast/ktast.ast/-node/-type-constraint-set/index.html","searchKeys":["TypeConstraintSet","data class TypeConstraintSet(val whereKeyword: Node.Keyword.Where, val constraints: Node.TypeConstraintSet.TypeConstraints, var tag: Any? = null) : Node.PostModifier","ktast.ast.Node.TypeConstraintSet"]},{"name":"data class TypeConstraints(val elements: List<Node.TypeConstraintSet.TypeConstraint>, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.TypeConstraintSet.TypeConstraint> ","description":"ktast.ast.Node.TypeConstraintSet.TypeConstraints","location":"ast/ktast.ast/-node/-type-constraint-set/-type-constraints/index.html","searchKeys":["TypeConstraints","data class TypeConstraints(val elements: List<Node.TypeConstraintSet.TypeConstraint>, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.TypeConstraintSet.TypeConstraint> ","ktast.ast.Node.TypeConstraintSet.TypeConstraints"]},{"name":"data class TypeParam(val modifiers: Node.Modifiers?, val name: Node.NameExpression, val typeRef: Node.TypeRef?, var tag: Any? = null) : Node, Node.WithModifiers","description":"ktast.ast.Node.TypeParam","location":"ast/ktast.ast/-node/-type-param/index.html","searchKeys":["TypeParam","data class TypeParam(val modifiers: Node.Modifiers?, val name: Node.NameExpression, val typeRef: Node.TypeRef?, var tag: Any? = null) : Node, Node.WithModifiers","ktast.ast.Node.TypeParam"]},{"name":"data class TypeParams(val elements: List<Node.TypeParam>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.TypeParam> ","description":"ktast.ast.Node.TypeParams","location":"ast/ktast.ast/-node/-type-params/index.html","searchKeys":["TypeParams","data class TypeParams(val elements: List<Node.TypeParam>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.TypeParam> ","ktast.ast.Node.TypeParams"]},{"name":"data class TypeRef(val lPar: Node.Keyword.LPar?, val modifiers: Node.Modifiers?, val type: Node.Type, val rPar: Node.Keyword.RPar?, var tag: Any? = null) : Node, Node.WithModifiers","description":"ktast.ast.Node.TypeRef","location":"ast/ktast.ast/-node/-type-ref/index.html","searchKeys":["TypeRef","data class TypeRef(val lPar: Node.Keyword.LPar?, val modifiers: Node.Modifiers?, val type: Node.Type, val rPar: Node.Keyword.RPar?, var tag: Any? = null) : Node, Node.WithModifiers","ktast.ast.Node.TypeRef"]},{"name":"data class UnaryExpression(val expression: Node.Expression, val operator: Node.UnaryExpression.Operator, val prefix: Boolean, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.UnaryExpression","location":"ast/ktast.ast/-node/-unary-expression/index.html","searchKeys":["UnaryExpression","data class UnaryExpression(val expression: Node.Expression, val operator: Node.UnaryExpression.Operator, val prefix: Boolean, var tag: Any? = null) : Node.Expression","ktast.ast.Node.UnaryExpression"]},{"name":"data class UnicodeEscapeEntry(val digits: String, var tag: Any? = null) : Node.StringLiteralExpression.Entry","description":"ktast.ast.Node.StringLiteralExpression.UnicodeEscapeEntry","location":"ast/ktast.ast/-node/-string-literal-expression/-unicode-escape-entry/index.html","searchKeys":["UnicodeEscapeEntry","data class UnicodeEscapeEntry(val digits: String, var tag: Any? = null) : Node.StringLiteralExpression.Entry","ktast.ast.Node.StringLiteralExpression.UnicodeEscapeEntry"]},{"name":"data class ValOrVar(val token: Node.PropertyDeclaration.ValOrVar.Token, var tag: Any? = null) : Node, Node.TokenContainer<Node.PropertyDeclaration.ValOrVar.Token> ","description":"ktast.ast.Node.PropertyDeclaration.ValOrVar","location":"ast/ktast.ast/-node/-property-declaration/-val-or-var/index.html","searchKeys":["ValOrVar","data class ValOrVar(val token: Node.PropertyDeclaration.ValOrVar.Token, var tag: Any? = null) : Node, Node.TokenContainer<Node.PropertyDeclaration.ValOrVar.Token> ","ktast.ast.Node.PropertyDeclaration.ValOrVar"]},{"name":"data class ValueArg(val name: Node.NameExpression?, val asterisk: Boolean, val expression: Node.Expression, var tag: Any? = null) : Node","description":"ktast.ast.Node.ValueArg","location":"ast/ktast.ast/-node/-value-arg/index.html","searchKeys":["ValueArg","data class ValueArg(val name: Node.NameExpression?, val asterisk: Boolean, val expression: Node.Expression, var tag: Any? = null) : Node","ktast.ast.Node.ValueArg"]},{"name":"data class ValueArgs(val elements: List<Node.ValueArg>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.ValueArg> ","description":"ktast.ast.Node.ValueArgs","location":"ast/ktast.ast/-node/-value-args/index.html","searchKeys":["ValueArgs","data class ValueArgs(val elements: List<Node.ValueArg>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.ValueArg> ","ktast.ast.Node.ValueArgs"]},{"name":"data class Variable(val modifiers: Node.Modifiers?, val name: Node.NameExpression, val typeRef: Node.TypeRef?, var tag: Any? = null) : Node, Node.WithModifiers","description":"ktast.ast.Node.LambdaParam.Variable","location":"ast/ktast.ast/-node/-lambda-param/-variable/index.html","searchKeys":["Variable","data class Variable(val modifiers: Node.Modifiers?, val name: Node.NameExpression, val typeRef: Node.TypeRef?, var tag: Any? = null) : Node, Node.WithModifiers","ktast.ast.Node.LambdaParam.Variable"]},{"name":"data class Variable(val name: Node.NameExpression, val typeRef: Node.TypeRef?, var tag: Any? = null) : Node","description":"ktast.ast.Node.Variable","location":"ast/ktast.ast/-node/-variable/index.html","searchKeys":["Variable","data class Variable(val name: Node.NameExpression, val typeRef: Node.TypeRef?, var tag: Any? = null) : Node","ktast.ast.Node.Variable"]},{"name":"data class When(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.When","location":"ast/ktast.ast/-node/-keyword/-when/index.html","searchKeys":["When","data class When(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.When"]},{"name":"data class WhenExpression(val whenKeyword: Node.Keyword.When, val lPar: Node.Keyword.LPar?, val expression: Node.Expression?, val rPar: Node.Keyword.RPar?, val whenBranches: List<Node.WhenExpression.WhenBranch>, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.WhenExpression","location":"ast/ktast.ast/-node/-when-expression/index.html","searchKeys":["WhenExpression","data class WhenExpression(val whenKeyword: Node.Keyword.When, val lPar: Node.Keyword.LPar?, val expression: Node.Expression?, val rPar: Node.Keyword.RPar?, val whenBranches: List<Node.WhenExpression.WhenBranch>, var tag: Any? = null) : Node.Expression","ktast.ast.Node.WhenExpression"]},{"name":"data class Where(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Where","location":"ast/ktast.ast/-node/-keyword/-where/index.html","searchKeys":["Where","data class Where(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Where"]},{"name":"data class While(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.While","location":"ast/ktast.ast/-node/-keyword/-while/index.html","searchKeys":["While","data class While(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.While"]},{"name":"data class WhileExpression(val whileKeyword: Node.Keyword.While, val condition: Node.ExpressionContainer, val body: Node.ExpressionContainer, val doWhile: Boolean, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.WhileExpression","location":"ast/ktast.ast/-node/-while-expression/index.html","searchKeys":["WhileExpression","data class WhileExpression(val whileKeyword: Node.Keyword.While, val condition: Node.ExpressionContainer, val body: Node.ExpressionContainer, val doWhile: Boolean, var tag: Any? = null) : Node.Expression","ktast.ast.Node.WhileExpression"]},{"name":"data class Whitespace(val text: String, var tag: Any? = null) : Node.Extra","description":"ktast.ast.Node.Whitespace","location":"ast/ktast.ast/-node/-whitespace/index.html","searchKeys":["Whitespace","data class Whitespace(val text: String, var tag: Any? = null) : Node.Extra","ktast.ast.Node.Whitespace"]},{"name":"enum ExtraType : Enum<Dumper.ExtraType> ","description":"ktast.ast.Dumper.ExtraType","location":"ast/ktast.ast/-dumper/-extra-type/index.html","searchKeys":["ExtraType","enum ExtraType : Enum<Dumper.ExtraType> ","ktast.ast.Dumper.ExtraType"]},{"name":"enum Form : Enum<Node.ConstantLiteralExpression.Form> ","description":"ktast.ast.Node.ConstantLiteralExpression.Form","location":"ast/ktast.ast/-node/-constant-literal-expression/-form/index.html","searchKeys":["Form","enum Form : Enum<Node.ConstantLiteralExpression.Form> ","ktast.ast.Node.ConstantLiteralExpression.Form"]},{"name":"enum Token : Enum<Node.AnnotationSet.Target.Token> , Node.HasSimpleStringRepresentation","description":"ktast.ast.Node.AnnotationSet.Target.Token","location":"ast/ktast.ast/-node/-annotation-set/-target/-token/index.html","searchKeys":["Token","enum Token : Enum<Node.AnnotationSet.Target.Token> , Node.HasSimpleStringRepresentation","ktast.ast.Node.AnnotationSet.Target.Token"]},{"name":"enum Token : Enum<Node.BinaryExpression.Operator.Token> , Node.HasSimpleStringRepresentation","description":"ktast.ast.Node.BinaryExpression.Operator.Token","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/index.html","searchKeys":["Token","enum Token : Enum<Node.BinaryExpression.Operator.Token> , Node.HasSimpleStringRepresentation","ktast.ast.Node.BinaryExpression.Operator.Token"]},{"name":"enum Token : Enum<Node.BinaryTypeExpression.Operator.Token> , Node.HasSimpleStringRepresentation","description":"ktast.ast.Node.BinaryTypeExpression.Operator.Token","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/-token/index.html","searchKeys":["Token","enum Token : Enum<Node.BinaryTypeExpression.Operator.Token> , Node.HasSimpleStringRepresentation","ktast.ast.Node.BinaryTypeExpression.Operator.Token"]},{"name":"enum Token : Enum<Node.ClassDeclaration.DeclarationKeyword.Token> , Node.HasSimpleStringRepresentation","description":"ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Token","location":"ast/ktast.ast/-node/-class-declaration/-declaration-keyword/-token/index.html","searchKeys":["Token","enum Token : Enum<Node.ClassDeclaration.DeclarationKeyword.Token> , Node.HasSimpleStringRepresentation","ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Token"]},{"name":"enum Token : Enum<Node.KeywordModifier.Token> , Node.HasSimpleStringRepresentation","description":"ktast.ast.Node.KeywordModifier.Token","location":"ast/ktast.ast/-node/-keyword-modifier/-token/index.html","searchKeys":["Token","enum Token : Enum<Node.KeywordModifier.Token> , Node.HasSimpleStringRepresentation","ktast.ast.Node.KeywordModifier.Token"]},{"name":"enum Token : Enum<Node.PropertyDeclaration.ValOrVar.Token> , Node.HasSimpleStringRepresentation","description":"ktast.ast.Node.PropertyDeclaration.ValOrVar.Token","location":"ast/ktast.ast/-node/-property-declaration/-val-or-var/-token/index.html","searchKeys":["Token","enum Token : Enum<Node.PropertyDeclaration.ValOrVar.Token> , Node.HasSimpleStringRepresentation","ktast.ast.Node.PropertyDeclaration.ValOrVar.Token"]},{"name":"enum Token : Enum<Node.SecondaryConstructorDeclaration.DelegationTarget.Token> , Node.HasSimpleStringRepresentation","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Token","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-target/-token/index.html","searchKeys":["Token","enum Token : Enum<Node.SecondaryConstructorDeclaration.DelegationTarget.Token> , Node.HasSimpleStringRepresentation","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Token"]},{"name":"enum Token : Enum<Node.UnaryExpression.Operator.Token> , Node.HasSimpleStringRepresentation","description":"ktast.ast.Node.UnaryExpression.Operator.Token","location":"ast/ktast.ast/-node/-unary-expression/-operator/-token/index.html","searchKeys":["Token","enum Token : Enum<Node.UnaryExpression.Operator.Token> , Node.HasSimpleStringRepresentation","ktast.ast.Node.UnaryExpression.Operator.Token"]},{"name":"fun <T : Appendable> write(v: Node, app: T, extrasMap: ExtrasMap? = null): T","description":"ktast.ast.Writer.Companion.write","location":"ast/ktast.ast/-writer/-companion/write.html","searchKeys":["write","fun <T : Appendable> write(v: Node, app: T, extrasMap: ExtrasMap? = null): T","ktast.ast.Writer.Companion.write"]},{"name":"fun <T : Node> postVisit(v: T, extrasMap: MutableExtrasMap? = null, fn: (v: Node, parent: Node?) -> Node?): T","description":"ktast.ast.MutableVisitor.Companion.postVisit","location":"ast/ktast.ast/-mutable-visitor/-companion/post-visit.html","searchKeys":["postVisit","fun <T : Node> postVisit(v: T, extrasMap: MutableExtrasMap? = null, fn: (v: Node, parent: Node?) -> Node?): T","ktast.ast.MutableVisitor.Companion.postVisit"]},{"name":"fun <T : Node> preVisit(v: T, extrasMap: MutableExtrasMap? = null, fn: (v: Node, parent: Node?) -> Node?): T","description":"ktast.ast.MutableVisitor.Companion.preVisit","location":"ast/ktast.ast/-mutable-visitor/-companion/pre-visit.html","searchKeys":["preVisit","fun <T : Node> preVisit(v: T, extrasMap: MutableExtrasMap? = null, fn: (v: Node, parent: Node?) -> Node?): T","ktast.ast.MutableVisitor.Companion.preVisit"]},{"name":"fun <T : Node> visit(v: T): T","description":"ktast.ast.MutableVisitor.visit","location":"ast/ktast.ast/-mutable-visitor/visit.html","searchKeys":["visit","fun <T : Node> visit(v: T): T","ktast.ast.MutableVisitor.visit"]},{"name":"fun dump(v: Node)","description":"ktast.ast.Dumper.dump","location":"ast/ktast.ast/-dumper/dump.html","searchKeys":["dump","fun dump(v: Node)","ktast.ast.Dumper.dump"]},{"name":"fun dump(v: Node, extrasMap: ExtrasMap? = null, verbose: Boolean = true): String","description":"ktast.ast.Dumper.Companion.dump","location":"ast/ktast.ast/-dumper/-companion/dump.html","searchKeys":["dump","fun dump(v: Node, extrasMap: ExtrasMap? = null, verbose: Boolean = true): String","ktast.ast.Dumper.Companion.dump"]},{"name":"fun markIf(v1: Any?, v2: Any?)","description":"ktast.ast.MutableVisitor.ChangedRef.markIf","location":"ast/ktast.ast/-mutable-visitor/-changed-ref/mark-if.html","searchKeys":["markIf","fun markIf(v1: Any?, v2: Any?)","ktast.ast.MutableVisitor.ChangedRef.markIf"]},{"name":"fun of(value: String): Node.AnnotationSet.Target","description":"ktast.ast.Node.AnnotationSet.Target.Companion.of","location":"ast/ktast.ast/-node/-annotation-set/-target/-companion/of.html","searchKeys":["of","fun of(value: String): Node.AnnotationSet.Target","ktast.ast.Node.AnnotationSet.Target.Companion.of"]},{"name":"fun of(value: String): Node.BinaryExpression.Operator","description":"ktast.ast.Node.BinaryExpression.Operator.Companion.of","location":"ast/ktast.ast/-node/-binary-expression/-operator/-companion/of.html","searchKeys":["of","fun of(value: String): Node.BinaryExpression.Operator","ktast.ast.Node.BinaryExpression.Operator.Companion.of"]},{"name":"fun of(value: String): Node.BinaryTypeExpression.Operator","description":"ktast.ast.Node.BinaryTypeExpression.Operator.Companion.of","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/-companion/of.html","searchKeys":["of","fun of(value: String): Node.BinaryTypeExpression.Operator","ktast.ast.Node.BinaryTypeExpression.Operator.Companion.of"]},{"name":"fun of(value: String): Node.ClassDeclaration.DeclarationKeyword","description":"ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Companion.of","location":"ast/ktast.ast/-node/-class-declaration/-declaration-keyword/-companion/of.html","searchKeys":["of","fun of(value: String): Node.ClassDeclaration.DeclarationKeyword","ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Companion.of"]},{"name":"fun of(value: String): Node.KeywordModifier","description":"ktast.ast.Node.KeywordModifier.Companion.of","location":"ast/ktast.ast/-node/-keyword-modifier/-companion/of.html","searchKeys":["of","fun of(value: String): Node.KeywordModifier","ktast.ast.Node.KeywordModifier.Companion.of"]},{"name":"fun of(value: String): Node.PropertyDeclaration.ValOrVar","description":"ktast.ast.Node.PropertyDeclaration.ValOrVar.Companion.of","location":"ast/ktast.ast/-node/-property-declaration/-val-or-var/-companion/of.html","searchKeys":["of","fun of(value: String): Node.PropertyDeclaration.ValOrVar","ktast.ast.Node.PropertyDeclaration.ValOrVar.Companion.of"]},{"name":"fun of(value: String): Node.SecondaryConstructorDeclaration.DelegationTarget","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Companion.of","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-target/-companion/of.html","searchKeys":["of","fun of(value: String): Node.SecondaryConstructorDeclaration.DelegationTarget","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Companion.of"]},{"name":"fun of(value: String): Node.UnaryExpression.Operator","description":"ktast.ast.Node.UnaryExpression.Operator.Companion.of","location":"ast/ktast.ast/-node/-unary-expression/-operator/-companion/of.html","searchKeys":["of","fun of(value: String): Node.UnaryExpression.Operator","ktast.ast.Node.UnaryExpression.Operator.Companion.of"]},{"name":"fun valueOf(value: String): Dumper.ExtraType","description":"ktast.ast.Dumper.ExtraType.valueOf","location":"ast/ktast.ast/-dumper/-extra-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Dumper.ExtraType","ktast.ast.Dumper.ExtraType.valueOf"]},{"name":"fun valueOf(value: String): Node.AnnotationSet.Target.Token","description":"ktast.ast.Node.AnnotationSet.Target.Token.valueOf","location":"ast/ktast.ast/-node/-annotation-set/-target/-token/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Node.AnnotationSet.Target.Token","ktast.ast.Node.AnnotationSet.Target.Token.valueOf"]},{"name":"fun valueOf(value: String): Node.BinaryExpression.Operator.Token","description":"ktast.ast.Node.BinaryExpression.Operator.Token.valueOf","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Node.BinaryExpression.Operator.Token","ktast.ast.Node.BinaryExpression.Operator.Token.valueOf"]},{"name":"fun valueOf(value: String): Node.BinaryTypeExpression.Operator.Token","description":"ktast.ast.Node.BinaryTypeExpression.Operator.Token.valueOf","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/-token/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Node.BinaryTypeExpression.Operator.Token","ktast.ast.Node.BinaryTypeExpression.Operator.Token.valueOf"]},{"name":"fun valueOf(value: String): Node.ClassDeclaration.DeclarationKeyword.Token","description":"ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Token.valueOf","location":"ast/ktast.ast/-node/-class-declaration/-declaration-keyword/-token/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Node.ClassDeclaration.DeclarationKeyword.Token","ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Token.valueOf"]},{"name":"fun valueOf(value: String): Node.ConstantLiteralExpression.Form","description":"ktast.ast.Node.ConstantLiteralExpression.Form.valueOf","location":"ast/ktast.ast/-node/-constant-literal-expression/-form/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Node.ConstantLiteralExpression.Form","ktast.ast.Node.ConstantLiteralExpression.Form.valueOf"]},{"name":"fun valueOf(value: String): Node.KeywordModifier.Token","description":"ktast.ast.Node.KeywordModifier.Token.valueOf","location":"ast/ktast.ast/-node/-keyword-modifier/-token/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Node.KeywordModifier.Token","ktast.ast.Node.KeywordModifier.Token.valueOf"]},{"name":"fun valueOf(value: String): Node.PropertyDeclaration.ValOrVar.Token","description":"ktast.ast.Node.PropertyDeclaration.ValOrVar.Token.valueOf","location":"ast/ktast.ast/-node/-property-declaration/-val-or-var/-token/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Node.PropertyDeclaration.ValOrVar.Token","ktast.ast.Node.PropertyDeclaration.ValOrVar.Token.valueOf"]},{"name":"fun valueOf(value: String): Node.SecondaryConstructorDeclaration.DelegationTarget.Token","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Token.valueOf","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-target/-token/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Node.SecondaryConstructorDeclaration.DelegationTarget.Token","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Token.valueOf"]},{"name":"fun valueOf(value: String): Node.UnaryExpression.Operator.Token","description":"ktast.ast.Node.UnaryExpression.Operator.Token.valueOf","location":"ast/ktast.ast/-node/-unary-expression/-operator/-token/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Node.UnaryExpression.Operator.Token","ktast.ast.Node.UnaryExpression.Operator.Token.valueOf"]},{"name":"fun values(): Array<Dumper.ExtraType>","description":"ktast.ast.Dumper.ExtraType.values","location":"ast/ktast.ast/-dumper/-extra-type/values.html","searchKeys":["values","fun values(): Array<Dumper.ExtraType>","ktast.ast.Dumper.ExtraType.values"]},{"name":"fun values(): Array<Node.AnnotationSet.Target.Token>","description":"ktast.ast.Node.AnnotationSet.Target.Token.values","location":"ast/ktast.ast/-node/-annotation-set/-target/-token/values.html","searchKeys":["values","fun values(): Array<Node.AnnotationSet.Target.Token>","ktast.ast.Node.AnnotationSet.Target.Token.values"]},{"name":"fun values(): Array<Node.BinaryExpression.Operator.Token>","description":"ktast.ast.Node.BinaryExpression.Operator.Token.values","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/values.html","searchKeys":["values","fun values(): Array<Node.BinaryExpression.Operator.Token>","ktast.ast.Node.BinaryExpression.Operator.Token.values"]},{"name":"fun values(): Array<Node.BinaryTypeExpression.Operator.Token>","description":"ktast.ast.Node.BinaryTypeExpression.Operator.Token.values","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/-token/values.html","searchKeys":["values","fun values(): Array<Node.BinaryTypeExpression.Operator.Token>","ktast.ast.Node.BinaryTypeExpression.Operator.Token.values"]},{"name":"fun values(): Array<Node.ClassDeclaration.DeclarationKeyword.Token>","description":"ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Token.values","location":"ast/ktast.ast/-node/-class-declaration/-declaration-keyword/-token/values.html","searchKeys":["values","fun values(): Array<Node.ClassDeclaration.DeclarationKeyword.Token>","ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Token.values"]},{"name":"fun values(): Array<Node.ConstantLiteralExpression.Form>","description":"ktast.ast.Node.ConstantLiteralExpression.Form.values","location":"ast/ktast.ast/-node/-constant-literal-expression/-form/values.html","searchKeys":["values","fun values(): Array<Node.ConstantLiteralExpression.Form>","ktast.ast.Node.ConstantLiteralExpression.Form.values"]},{"name":"fun values(): Array<Node.KeywordModifier.Token>","description":"ktast.ast.Node.KeywordModifier.Token.values","location":"ast/ktast.ast/-node/-keyword-modifier/-token/values.html","searchKeys":["values","fun values(): Array<Node.KeywordModifier.Token>","ktast.ast.Node.KeywordModifier.Token.values"]},{"name":"fun values(): Array<Node.PropertyDeclaration.ValOrVar.Token>","description":"ktast.ast.Node.PropertyDeclaration.ValOrVar.Token.values","location":"ast/ktast.ast/-node/-property-declaration/-val-or-var/-token/values.html","searchKeys":["values","fun values(): Array<Node.PropertyDeclaration.ValOrVar.Token>","ktast.ast.Node.PropertyDeclaration.ValOrVar.Token.values"]},{"name":"fun values(): Array<Node.SecondaryConstructorDeclaration.DelegationTarget.Token>","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Token.values","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-target/-token/values.html","searchKeys":["values","fun values(): Array<Node.SecondaryConstructorDeclaration.DelegationTarget.Token>","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Token.values"]},{"name":"fun values(): Array<Node.UnaryExpression.Operator.Token>","description":"ktast.ast.Node.UnaryExpression.Operator.Token.values","location":"ast/ktast.ast/-node/-unary-expression/-operator/-token/values.html","searchKeys":["values","fun values(): Array<Node.UnaryExpression.Operator.Token>","ktast.ast.Node.UnaryExpression.Operator.Token.values"]},{"name":"fun visit(v: Node)","description":"ktast.ast.Visitor.visit","location":"ast/ktast.ast/-visitor/visit.html","searchKeys":["visit","fun visit(v: Node)","ktast.ast.Visitor.visit"]},{"name":"fun visit(v: Node, fn: (v: Node, parent: Node?) -> Unit)","description":"ktast.ast.Visitor.Companion.visit","location":"ast/ktast.ast/-visitor/-companion/visit.html","searchKeys":["visit","fun visit(v: Node, fn: (v: Node, parent: Node?) -> Unit)","ktast.ast.Visitor.Companion.visit"]},{"name":"fun write(v: Node)","description":"ktast.ast.Writer.write","location":"ast/ktast.ast/-writer/write.html","searchKeys":["write","fun write(v: Node)","ktast.ast.Writer.write"]},{"name":"fun write(v: Node, extrasMap: ExtrasMap? = null): String","description":"ktast.ast.Writer.Companion.write","location":"ast/ktast.ast/-writer/-companion/write.html","searchKeys":["write","fun write(v: Node, extrasMap: ExtrasMap? = null): String","ktast.ast.Writer.Companion.write"]},{"name":"interface DeclarationsContainer","description":"ktast.ast.Node.DeclarationsContainer","location":"ast/ktast.ast/-node/-declarations-container/index.html","searchKeys":["DeclarationsContainer","interface DeclarationsContainer","ktast.ast.Node.DeclarationsContainer"]},{"name":"interface ExtrasMap","description":"ktast.ast.ExtrasMap","location":"ast/ktast.ast/-extras-map/index.html","searchKeys":["ExtrasMap","interface ExtrasMap","ktast.ast.ExtrasMap"]},{"name":"interface HasSimpleStringRepresentation","description":"ktast.ast.Node.HasSimpleStringRepresentation","location":"ast/ktast.ast/-node/-has-simple-string-representation/index.html","searchKeys":["HasSimpleStringRepresentation","interface HasSimpleStringRepresentation","ktast.ast.Node.HasSimpleStringRepresentation"]},{"name":"interface KotlinEntry : Node.WithAnnotationSets","description":"ktast.ast.Node.KotlinEntry","location":"ast/ktast.ast/-node/-kotlin-entry/index.html","searchKeys":["KotlinEntry","interface KotlinEntry : Node.WithAnnotationSets","ktast.ast.Node.KotlinEntry"]},{"name":"interface MutableExtrasMap : ExtrasMap","description":"ktast.ast.MutableExtrasMap","location":"ast/ktast.ast/-mutable-extras-map/index.html","searchKeys":["MutableExtrasMap","interface MutableExtrasMap : ExtrasMap","ktast.ast.MutableExtrasMap"]},{"name":"interface NameWithTypeArgs","description":"ktast.ast.Node.Type.NameWithTypeArgs","location":"ast/ktast.ast/-node/-type/-name-with-type-args/index.html","searchKeys":["NameWithTypeArgs","interface NameWithTypeArgs","ktast.ast.Node.Type.NameWithTypeArgs"]},{"name":"interface Node","description":"ktast.ast.Node","location":"ast/ktast.ast/-node/index.html","searchKeys":["Node","interface Node","ktast.ast.Node"]},{"name":"interface StatementsContainer","description":"ktast.ast.Node.StatementsContainer","location":"ast/ktast.ast/-node/-statements-container/index.html","searchKeys":["StatementsContainer","interface StatementsContainer","ktast.ast.Node.StatementsContainer"]},{"name":"interface TokenContainer<T : Node.HasSimpleStringRepresentation> : Node.HasSimpleStringRepresentation","description":"ktast.ast.Node.TokenContainer","location":"ast/ktast.ast/-node/-token-container/index.html","searchKeys":["TokenContainer","interface TokenContainer<T : Node.HasSimpleStringRepresentation> : Node.HasSimpleStringRepresentation","ktast.ast.Node.TokenContainer"]},{"name":"interface WithAnnotationSets","description":"ktast.ast.Node.WithAnnotationSets","location":"ast/ktast.ast/-node/-with-annotation-sets/index.html","searchKeys":["WithAnnotationSets","interface WithAnnotationSets","ktast.ast.Node.WithAnnotationSets"]},{"name":"interface WithFunctionBody","description":"ktast.ast.Node.WithFunctionBody","location":"ast/ktast.ast/-node/-with-function-body/index.html","searchKeys":["WithFunctionBody","interface WithFunctionBody","ktast.ast.Node.WithFunctionBody"]},{"name":"interface WithModifiers : Node.WithAnnotationSets","description":"ktast.ast.Node.WithModifiers","location":"ast/ktast.ast/-node/-with-modifiers/index.html","searchKeys":["WithModifiers","interface WithModifiers : Node.WithAnnotationSets","ktast.ast.Node.WithModifiers"]},{"name":"interface WithPostModifiers","description":"ktast.ast.Node.WithPostModifiers","location":"ast/ktast.ast/-node/-with-post-modifiers/index.html","searchKeys":["WithPostModifiers","interface WithPostModifiers","ktast.ast.Node.WithPostModifiers"]},{"name":"object Companion","description":"ktast.ast.Dumper.Companion","location":"ast/ktast.ast/-dumper/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.Dumper.Companion"]},{"name":"object Companion","description":"ktast.ast.MutableVisitor.Companion","location":"ast/ktast.ast/-mutable-visitor/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.MutableVisitor.Companion"]},{"name":"object Companion","description":"ktast.ast.Node.AnnotationSet.Target.Companion","location":"ast/ktast.ast/-node/-annotation-set/-target/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.Node.AnnotationSet.Target.Companion"]},{"name":"object Companion","description":"ktast.ast.Node.BinaryExpression.Operator.Companion","location":"ast/ktast.ast/-node/-binary-expression/-operator/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.Node.BinaryExpression.Operator.Companion"]},{"name":"object Companion","description":"ktast.ast.Node.BinaryTypeExpression.Operator.Companion","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.Node.BinaryTypeExpression.Operator.Companion"]},{"name":"object Companion","description":"ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Companion","location":"ast/ktast.ast/-node/-class-declaration/-declaration-keyword/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Companion"]},{"name":"object Companion","description":"ktast.ast.Node.KeywordModifier.Companion","location":"ast/ktast.ast/-node/-keyword-modifier/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.Node.KeywordModifier.Companion"]},{"name":"object Companion","description":"ktast.ast.Node.PropertyDeclaration.ValOrVar.Companion","location":"ast/ktast.ast/-node/-property-declaration/-val-or-var/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.Node.PropertyDeclaration.ValOrVar.Companion"]},{"name":"object Companion","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Companion","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-target/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Companion"]},{"name":"object Companion","description":"ktast.ast.Node.UnaryExpression.Operator.Companion","location":"ast/ktast.ast/-node/-unary-expression/-operator/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.Node.UnaryExpression.Operator.Companion"]},{"name":"object Companion","description":"ktast.ast.Visitor.Companion","location":"ast/ktast.ast/-visitor/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.Visitor.Companion"]},{"name":"object Companion","description":"ktast.ast.Writer.Companion","location":"ast/ktast.ast/-writer/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.Writer.Companion"]},{"name":"open class ChangedRef(var changed: Boolean)","description":"ktast.ast.MutableVisitor.ChangedRef","location":"ast/ktast.ast/-mutable-visitor/-changed-ref/index.html","searchKeys":["ChangedRef","open class ChangedRef(var changed: Boolean)","ktast.ast.MutableVisitor.ChangedRef"]},{"name":"open class MutableVisitor(extrasMap: MutableExtrasMap? = null)","description":"ktast.ast.MutableVisitor","location":"ast/ktast.ast/-mutable-visitor/index.html","searchKeys":["MutableVisitor","open class MutableVisitor(extrasMap: MutableExtrasMap? = null)","ktast.ast.MutableVisitor"]},{"name":"open class Visitor","description":"ktast.ast.Visitor","location":"ast/ktast.ast/-visitor/index.html","searchKeys":["Visitor","open class Visitor","ktast.ast.Visitor"]},{"name":"open class Writer(val app: Appendable = StringBuilder(), val extrasMap: ExtrasMap? = null) : Visitor","description":"ktast.ast.Writer","location":"ast/ktast.ast/-writer/index.html","searchKeys":["Writer","open class Writer(val app: Appendable = StringBuilder(), val extrasMap: ExtrasMap? = null) : Visitor","ktast.ast.Writer"]},{"name":"open fun <T : Node> postVisit(v: T, parent: Node?): T","description":"ktast.ast.MutableVisitor.postVisit","location":"ast/ktast.ast/-mutable-visitor/post-visit.html","searchKeys":["postVisit","open fun <T : Node> postVisit(v: T, parent: Node?): T","ktast.ast.MutableVisitor.postVisit"]},{"name":"open fun <T : Node> preVisit(v: T, parent: Node?): T","description":"ktast.ast.MutableVisitor.preVisit","location":"ast/ktast.ast/-mutable-visitor/pre-visit.html","searchKeys":["preVisit","open fun <T : Node> preVisit(v: T, parent: Node?): T","ktast.ast.MutableVisitor.preVisit"]},{"name":"open fun <T : Node> visit(v: T, parent: Node?, ch: MutableVisitor.ChangedRef = ChangedRef(false)): T","description":"ktast.ast.MutableVisitor.visit","location":"ast/ktast.ast/-mutable-visitor/visit.html","searchKeys":["visit","open fun <T : Node> visit(v: T, parent: Node?, ch: MutableVisitor.ChangedRef = ChangedRef(false)): T","ktast.ast.MutableVisitor.visit"]},{"name":"open fun <T> sub(fn: (MutableVisitor.ChangedRef) -> T): T","description":"ktast.ast.MutableVisitor.ChangedRef.sub","location":"ast/ktast.ast/-mutable-visitor/-changed-ref/sub.html","searchKeys":["sub","open fun <T> sub(fn: (MutableVisitor.ChangedRef) -> T): T","ktast.ast.MutableVisitor.ChangedRef.sub"]},{"name":"open fun docComment(v: Node): Node.Comment?","description":"ktast.ast.ExtrasMap.docComment","location":"ast/ktast.ast/-extras-map/doc-comment.html","searchKeys":["docComment","open fun docComment(v: Node): Node.Comment?","ktast.ast.ExtrasMap.docComment"]},{"name":"open override val annotationSets: List<Node.AnnotationSet>","description":"ktast.ast.Node.AnnotatedExpression.annotationSets","location":"ast/ktast.ast/-node/-annotated-expression/annotation-sets.html","searchKeys":["annotationSets","open override val annotationSets: List<Node.AnnotationSet>","ktast.ast.Node.AnnotatedExpression.annotationSets"]},{"name":"open override val annotationSets: List<Node.AnnotationSet>","description":"ktast.ast.Node.CallExpression.LambdaArg.annotationSets","location":"ast/ktast.ast/-node/-call-expression/-lambda-arg/annotation-sets.html","searchKeys":["annotationSets","open override val annotationSets: List<Node.AnnotationSet>","ktast.ast.Node.CallExpression.LambdaArg.annotationSets"]},{"name":"open override val annotationSets: List<Node.AnnotationSet>","description":"ktast.ast.Node.KotlinFile.annotationSets","location":"ast/ktast.ast/-node/-kotlin-file/annotation-sets.html","searchKeys":["annotationSets","open override val annotationSets: List<Node.AnnotationSet>","ktast.ast.Node.KotlinFile.annotationSets"]},{"name":"open override val annotationSets: List<Node.AnnotationSet>","description":"ktast.ast.Node.KotlinScript.annotationSets","location":"ast/ktast.ast/-node/-kotlin-script/annotation-sets.html","searchKeys":["annotationSets","open override val annotationSets: List<Node.AnnotationSet>","ktast.ast.Node.KotlinScript.annotationSets"]},{"name":"open override val annotationSets: List<Node.AnnotationSet>","description":"ktast.ast.Node.TypeConstraintSet.TypeConstraint.annotationSets","location":"ast/ktast.ast/-node/-type-constraint-set/-type-constraint/annotation-sets.html","searchKeys":["annotationSets","open override val annotationSets: List<Node.AnnotationSet>","ktast.ast.Node.TypeConstraintSet.TypeConstraint.annotationSets"]},{"name":"open override val annotationSets: List<Node.AnnotationSet>","description":"ktast.ast.Node.WithModifiers.annotationSets","location":"ast/ktast.ast/-node/-with-modifiers/annotation-sets.html","searchKeys":["annotationSets","open override val annotationSets: List<Node.AnnotationSet>","ktast.ast.Node.WithModifiers.annotationSets"]},{"name":"open override val body: Node.Expression?","description":"ktast.ast.Node.FunctionDeclaration.body","location":"ast/ktast.ast/-node/-function-declaration/body.html","searchKeys":["body","open override val body: Node.Expression?","ktast.ast.Node.FunctionDeclaration.body"]},{"name":"open override val body: Node.Expression?","description":"ktast.ast.Node.PropertyDeclaration.Getter.body","location":"ast/ktast.ast/-node/-property-declaration/-getter/body.html","searchKeys":["body","open override val body: Node.Expression?","ktast.ast.Node.PropertyDeclaration.Getter.body"]},{"name":"open override val body: Node.Expression?","description":"ktast.ast.Node.PropertyDeclaration.Setter.body","location":"ast/ktast.ast/-node/-property-declaration/-setter/body.html","searchKeys":["body","open override val body: Node.Expression?","ktast.ast.Node.PropertyDeclaration.Setter.body"]},{"name":"open override val declarations: List<Node.Declaration>","description":"ktast.ast.Node.ClassDeclaration.ClassBody.declarations","location":"ast/ktast.ast/-node/-class-declaration/-class-body/declarations.html","searchKeys":["declarations","open override val declarations: List<Node.Declaration>","ktast.ast.Node.ClassDeclaration.ClassBody.declarations"]},{"name":"open override val declarations: List<Node.Declaration>","description":"ktast.ast.Node.KotlinFile.declarations","location":"ast/ktast.ast/-node/-kotlin-file/declarations.html","searchKeys":["declarations","open override val declarations: List<Node.Declaration>","ktast.ast.Node.KotlinFile.declarations"]},{"name":"open override val elements: List<Node.ClassDeclaration.ClassParent>","description":"ktast.ast.Node.ClassDeclaration.ClassParents.elements","location":"ast/ktast.ast/-node/-class-declaration/-class-parents/elements.html","searchKeys":["elements","open override val elements: List<Node.ClassDeclaration.ClassParent>","ktast.ast.Node.ClassDeclaration.ClassParents.elements"]},{"name":"open override val elements: List<Node.Contract.ContractEffect>","description":"ktast.ast.Node.Contract.ContractEffects.elements","location":"ast/ktast.ast/-node/-contract/-contract-effects/elements.html","searchKeys":["elements","open override val elements: List<Node.Contract.ContractEffect>","ktast.ast.Node.Contract.ContractEffects.elements"]},{"name":"open override val elements: List<Node.FunctionParam>","description":"ktast.ast.Node.FunctionParams.elements","location":"ast/ktast.ast/-node/-function-params/elements.html","searchKeys":["elements","open override val elements: List<Node.FunctionParam>","ktast.ast.Node.FunctionParams.elements"]},{"name":"open override val elements: List<Node.FunctionType.ContextReceiver>","description":"ktast.ast.Node.FunctionType.ContextReceivers.elements","location":"ast/ktast.ast/-node/-function-type/-context-receivers/elements.html","searchKeys":["elements","open override val elements: List<Node.FunctionType.ContextReceiver>","ktast.ast.Node.FunctionType.ContextReceivers.elements"]},{"name":"open override val elements: List<Node.FunctionType.Param>","description":"ktast.ast.Node.FunctionType.Params.elements","location":"ast/ktast.ast/-node/-function-type/-params/elements.html","searchKeys":["elements","open override val elements: List<Node.FunctionType.Param>","ktast.ast.Node.FunctionType.Params.elements"]},{"name":"open override val elements: List<Node.ImportDirective>","description":"ktast.ast.Node.ImportDirectives.elements","location":"ast/ktast.ast/-node/-import-directives/elements.html","searchKeys":["elements","open override val elements: List<Node.ImportDirective>","ktast.ast.Node.ImportDirectives.elements"]},{"name":"open override val elements: List<Node.LambdaParam>","description":"ktast.ast.Node.LambdaParams.elements","location":"ast/ktast.ast/-node/-lambda-params/elements.html","searchKeys":["elements","open override val elements: List<Node.LambdaParam>","ktast.ast.Node.LambdaParams.elements"]},{"name":"open override val elements: List<Node.Modifier>","description":"ktast.ast.Node.Modifiers.elements","location":"ast/ktast.ast/-node/-modifiers/elements.html","searchKeys":["elements","open override val elements: List<Node.Modifier>","ktast.ast.Node.Modifiers.elements"]},{"name":"open override val elements: List<Node.TypeArg>","description":"ktast.ast.Node.TypeArgs.elements","location":"ast/ktast.ast/-node/-type-args/elements.html","searchKeys":["elements","open override val elements: List<Node.TypeArg>","ktast.ast.Node.TypeArgs.elements"]},{"name":"open override val elements: List<Node.TypeConstraintSet.TypeConstraint>","description":"ktast.ast.Node.TypeConstraintSet.TypeConstraints.elements","location":"ast/ktast.ast/-node/-type-constraint-set/-type-constraints/elements.html","searchKeys":["elements","open override val elements: List<Node.TypeConstraintSet.TypeConstraint>","ktast.ast.Node.TypeConstraintSet.TypeConstraints.elements"]},{"name":"open override val elements: List<Node.TypeParam>","description":"ktast.ast.Node.TypeParams.elements","location":"ast/ktast.ast/-node/-type-params/elements.html","searchKeys":["elements","open override val elements: List<Node.TypeParam>","ktast.ast.Node.TypeParams.elements"]},{"name":"open override val elements: List<Node.ValueArg>","description":"ktast.ast.Node.ValueArgs.elements","location":"ast/ktast.ast/-node/-value-args/elements.html","searchKeys":["elements","open override val elements: List<Node.ValueArg>","ktast.ast.Node.ValueArgs.elements"]},{"name":"open override val equals: Node.Keyword.Equal?","description":"ktast.ast.Node.FunctionDeclaration.equals","location":"ast/ktast.ast/-node/-function-declaration/equals.html","searchKeys":["equals","open override val equals: Node.Keyword.Equal?","ktast.ast.Node.FunctionDeclaration.equals"]},{"name":"open override val equals: Node.Keyword.Equal?","description":"ktast.ast.Node.PropertyDeclaration.Getter.equals","location":"ast/ktast.ast/-node/-property-declaration/-getter/equals.html","searchKeys":["equals","open override val equals: Node.Keyword.Equal?","ktast.ast.Node.PropertyDeclaration.Getter.equals"]},{"name":"open override val equals: Node.Keyword.Equal?","description":"ktast.ast.Node.PropertyDeclaration.Setter.equals","location":"ast/ktast.ast/-node/-property-declaration/-setter/equals.html","searchKeys":["equals","open override val equals: Node.Keyword.Equal?","ktast.ast.Node.PropertyDeclaration.Setter.equals"]},{"name":"open override val importDirectives: Node.ImportDirectives?","description":"ktast.ast.Node.KotlinFile.importDirectives","location":"ast/ktast.ast/-node/-kotlin-file/import-directives.html","searchKeys":["importDirectives","open override val importDirectives: Node.ImportDirectives?","ktast.ast.Node.KotlinFile.importDirectives"]},{"name":"open override val importDirectives: Node.ImportDirectives?","description":"ktast.ast.Node.KotlinScript.importDirectives","location":"ast/ktast.ast/-node/-kotlin-script/import-directives.html","searchKeys":["importDirectives","open override val importDirectives: Node.ImportDirectives?","ktast.ast.Node.KotlinScript.importDirectives"]},{"name":"open override val lhs: Node.DoubleColonExpression.Receiver?","description":"ktast.ast.Node.CallableReferenceExpression.lhs","location":"ast/ktast.ast/-node/-callable-reference-expression/lhs.html","searchKeys":["lhs","open override val lhs: Node.DoubleColonExpression.Receiver?","ktast.ast.Node.CallableReferenceExpression.lhs"]},{"name":"open override val lhs: Node.DoubleColonExpression.Receiver?","description":"ktast.ast.Node.ClassLiteralExpression.lhs","location":"ast/ktast.ast/-node/-class-literal-expression/lhs.html","searchKeys":["lhs","open override val lhs: Node.DoubleColonExpression.Receiver?","ktast.ast.Node.ClassLiteralExpression.lhs"]},{"name":"open override val lhs: Node.Expression","description":"ktast.ast.Node.BinaryExpression.lhs","location":"ast/ktast.ast/-node/-binary-expression/lhs.html","searchKeys":["lhs","open override val lhs: Node.Expression","ktast.ast.Node.BinaryExpression.lhs"]},{"name":"open override val lhs: Node.Expression","description":"ktast.ast.Node.BinaryInfixExpression.lhs","location":"ast/ktast.ast/-node/-binary-infix-expression/lhs.html","searchKeys":["lhs","open override val lhs: Node.Expression","ktast.ast.Node.BinaryInfixExpression.lhs"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.ClassDeclaration.ClassBody.EnumEntry.modifiers","location":"ast/ktast.ast/-node/-class-declaration/-class-body/-enum-entry/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.ClassDeclaration.ClassBody.EnumEntry.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.ClassDeclaration.PrimaryConstructor.modifiers","location":"ast/ktast.ast/-node/-class-declaration/-primary-constructor/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.ClassDeclaration.PrimaryConstructor.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.ClassDeclaration.modifiers","location":"ast/ktast.ast/-node/-class-declaration/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.ClassDeclaration.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.FunctionDeclaration.modifiers","location":"ast/ktast.ast/-node/-function-declaration/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.FunctionDeclaration.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.FunctionParam.modifiers","location":"ast/ktast.ast/-node/-function-param/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.FunctionParam.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.FunctionType.modifiers","location":"ast/ktast.ast/-node/-function-type/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.FunctionType.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.InitDeclaration.modifiers","location":"ast/ktast.ast/-node/-init-declaration/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.InitDeclaration.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.LambdaParam.Variable.modifiers","location":"ast/ktast.ast/-node/-lambda-param/-variable/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.LambdaParam.Variable.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.NullableType.modifiers","location":"ast/ktast.ast/-node/-nullable-type/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.NullableType.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.PackageDirective.modifiers","location":"ast/ktast.ast/-node/-package-directive/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.PackageDirective.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.PropertyDeclaration.Getter.modifiers","location":"ast/ktast.ast/-node/-property-declaration/-getter/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.PropertyDeclaration.Getter.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.PropertyDeclaration.Setter.modifiers","location":"ast/ktast.ast/-node/-property-declaration/-setter/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.PropertyDeclaration.Setter.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.PropertyDeclaration.modifiers","location":"ast/ktast.ast/-node/-property-declaration/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.PropertyDeclaration.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.SecondaryConstructorDeclaration.modifiers","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.SecondaryConstructorDeclaration.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.TypeAliasDeclaration.modifiers","location":"ast/ktast.ast/-node/-type-alias-declaration/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.TypeAliasDeclaration.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.TypeArg.modifiers","location":"ast/ktast.ast/-node/-type-arg/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.TypeArg.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.TypeParam.modifiers","location":"ast/ktast.ast/-node/-type-param/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.TypeParam.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.TypeRef.modifiers","location":"ast/ktast.ast/-node/-type-ref/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.TypeRef.modifiers"]},{"name":"open override val name: Node.NameExpression","description":"ktast.ast.Node.SimpleType.Qualifier.name","location":"ast/ktast.ast/-node/-simple-type/-qualifier/name.html","searchKeys":["name","open override val name: Node.NameExpression","ktast.ast.Node.SimpleType.Qualifier.name"]},{"name":"open override val name: Node.NameExpression","description":"ktast.ast.Node.SimpleType.name","location":"ast/ktast.ast/-node/-simple-type/name.html","searchKeys":["name","open override val name: Node.NameExpression","ktast.ast.Node.SimpleType.name"]},{"name":"open override val packageDirective: Node.PackageDirective?","description":"ktast.ast.Node.KotlinFile.packageDirective","location":"ast/ktast.ast/-node/-kotlin-file/package-directive.html","searchKeys":["packageDirective","open override val packageDirective: Node.PackageDirective?","ktast.ast.Node.KotlinFile.packageDirective"]},{"name":"open override val packageDirective: Node.PackageDirective?","description":"ktast.ast.Node.KotlinScript.packageDirective","location":"ast/ktast.ast/-node/-kotlin-script/package-directive.html","searchKeys":["packageDirective","open override val packageDirective: Node.PackageDirective?","ktast.ast.Node.KotlinScript.packageDirective"]},{"name":"open override val postModifiers: List<Node.PostModifier>","description":"ktast.ast.Node.FunctionDeclaration.postModifiers","location":"ast/ktast.ast/-node/-function-declaration/post-modifiers.html","searchKeys":["postModifiers","open override val postModifiers: List<Node.PostModifier>","ktast.ast.Node.FunctionDeclaration.postModifiers"]},{"name":"open override val postModifiers: List<Node.PostModifier>","description":"ktast.ast.Node.PropertyDeclaration.Getter.postModifiers","location":"ast/ktast.ast/-node/-property-declaration/-getter/post-modifiers.html","searchKeys":["postModifiers","open override val postModifiers: List<Node.PostModifier>","ktast.ast.Node.PropertyDeclaration.Getter.postModifiers"]},{"name":"open override val postModifiers: List<Node.PostModifier>","description":"ktast.ast.Node.PropertyDeclaration.Setter.postModifiers","location":"ast/ktast.ast/-node/-property-declaration/-setter/post-modifiers.html","searchKeys":["postModifiers","open override val postModifiers: List<Node.PostModifier>","ktast.ast.Node.PropertyDeclaration.Setter.postModifiers"]},{"name":"open override val rhs: Node.Expression","description":"ktast.ast.Node.BinaryExpression.rhs","location":"ast/ktast.ast/-node/-binary-expression/rhs.html","searchKeys":["rhs","open override val rhs: Node.Expression","ktast.ast.Node.BinaryExpression.rhs"]},{"name":"open override val rhs: Node.Expression","description":"ktast.ast.Node.BinaryInfixExpression.rhs","location":"ast/ktast.ast/-node/-binary-infix-expression/rhs.html","searchKeys":["rhs","open override val rhs: Node.Expression","ktast.ast.Node.BinaryInfixExpression.rhs"]},{"name":"open override val statements: List<Node.Statement>","description":"ktast.ast.Node.BlockExpression.statements","location":"ast/ktast.ast/-node/-block-expression/statements.html","searchKeys":["statements","open override val statements: List<Node.Statement>","ktast.ast.Node.BlockExpression.statements"]},{"name":"open override val statements: List<Node.Statement>","description":"ktast.ast.Node.LambdaExpression.LambdaBody.statements","location":"ast/ktast.ast/-node/-lambda-expression/-lambda-body/statements.html","searchKeys":["statements","open override val statements: List<Node.Statement>","ktast.ast.Node.LambdaExpression.LambdaBody.statements"]},{"name":"open override val string: String","description":"ktast.ast.Node.AnnotationSet.Target.Token.string","location":"ast/ktast.ast/-node/-annotation-set/-target/-token/string.html","searchKeys":["string","open override val string: String","ktast.ast.Node.AnnotationSet.Target.Token.string"]},{"name":"open override val string: String","description":"ktast.ast.Node.BinaryExpression.Operator.Token.string","location":"ast/ktast.ast/-node/-binary-expression/-operator/-token/string.html","searchKeys":["string","open override val string: String","ktast.ast.Node.BinaryExpression.Operator.Token.string"]},{"name":"open override val string: String","description":"ktast.ast.Node.BinaryTypeExpression.Operator.Token.string","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/-token/string.html","searchKeys":["string","open override val string: String","ktast.ast.Node.BinaryTypeExpression.Operator.Token.string"]},{"name":"open override val string: String","description":"ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Token.string","location":"ast/ktast.ast/-node/-class-declaration/-declaration-keyword/-token/string.html","searchKeys":["string","open override val string: String","ktast.ast.Node.ClassDeclaration.DeclarationKeyword.Token.string"]},{"name":"open override val string: String","description":"ktast.ast.Node.Keyword.string","location":"ast/ktast.ast/-node/-keyword/string.html","searchKeys":["string","open override val string: String","ktast.ast.Node.Keyword.string"]},{"name":"open override val string: String","description":"ktast.ast.Node.KeywordModifier.Token.string","location":"ast/ktast.ast/-node/-keyword-modifier/-token/string.html","searchKeys":["string","open override val string: String","ktast.ast.Node.KeywordModifier.Token.string"]},{"name":"open override val string: String","description":"ktast.ast.Node.PropertyDeclaration.ValOrVar.Token.string","location":"ast/ktast.ast/-node/-property-declaration/-val-or-var/-token/string.html","searchKeys":["string","open override val string: String","ktast.ast.Node.PropertyDeclaration.ValOrVar.Token.string"]},{"name":"open override val string: String","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Token.string","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-target/-token/string.html","searchKeys":["string","open override val string: String","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.Token.string"]},{"name":"open override val string: String","description":"ktast.ast.Node.TokenContainer.string","location":"ast/ktast.ast/-node/-token-container/string.html","searchKeys":["string","open override val string: String","ktast.ast.Node.TokenContainer.string"]},{"name":"open override val string: String","description":"ktast.ast.Node.UnaryExpression.Operator.Token.string","location":"ast/ktast.ast/-node/-unary-expression/-operator/-token/string.html","searchKeys":["string","open override val string: String","ktast.ast.Node.UnaryExpression.Operator.Token.string"]},{"name":"open override val text: String","description":"ktast.ast.Node.Comment.text","location":"ast/ktast.ast/-node/-comment/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Comment.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Semicolon.text","location":"ast/ktast.ast/-node/-semicolon/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Semicolon.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Whitespace.text","location":"ast/ktast.ast/-node/-whitespace/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Whitespace.text"]},{"name":"open override val token: Node.AnnotationSet.Target.Token","description":"ktast.ast.Node.AnnotationSet.Target.token","location":"ast/ktast.ast/-node/-annotation-set/-target/token.html","searchKeys":["token","open override val token: Node.AnnotationSet.Target.Token","ktast.ast.Node.AnnotationSet.Target.token"]},{"name":"open override val token: Node.BinaryExpression.Operator.Token","description":"ktast.ast.Node.BinaryExpression.Operator.token","location":"ast/ktast.ast/-node/-binary-expression/-operator/token.html","searchKeys":["token","open override val token: Node.BinaryExpression.Operator.Token","ktast.ast.Node.BinaryExpression.Operator.token"]},{"name":"open override val token: Node.BinaryTypeExpression.Operator.Token","description":"ktast.ast.Node.BinaryTypeExpression.Operator.token","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/token.html","searchKeys":["token","open override val token: Node.BinaryTypeExpression.Operator.Token","ktast.ast.Node.BinaryTypeExpression.Operator.token"]},{"name":"open override val token: Node.ClassDeclaration.DeclarationKeyword.Token","description":"ktast.ast.Node.ClassDeclaration.DeclarationKeyword.token","location":"ast/ktast.ast/-node/-class-declaration/-declaration-keyword/token.html","searchKeys":["token","open override val token: Node.ClassDeclaration.DeclarationKeyword.Token","ktast.ast.Node.ClassDeclaration.DeclarationKeyword.token"]},{"name":"open override val token: Node.KeywordModifier.Token","description":"ktast.ast.Node.KeywordModifier.token","location":"ast/ktast.ast/-node/-keyword-modifier/token.html","searchKeys":["token","open override val token: Node.KeywordModifier.Token","ktast.ast.Node.KeywordModifier.token"]},{"name":"open override val token: Node.PropertyDeclaration.ValOrVar.Token","description":"ktast.ast.Node.PropertyDeclaration.ValOrVar.token","location":"ast/ktast.ast/-node/-property-declaration/-val-or-var/token.html","searchKeys":["token","open override val token: Node.PropertyDeclaration.ValOrVar.Token","ktast.ast.Node.PropertyDeclaration.ValOrVar.token"]},{"name":"open override val token: Node.SecondaryConstructorDeclaration.DelegationTarget.Token","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.token","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-target/token.html","searchKeys":["token","open override val token: Node.SecondaryConstructorDeclaration.DelegationTarget.Token","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.token"]},{"name":"open override val token: Node.UnaryExpression.Operator.Token","description":"ktast.ast.Node.UnaryExpression.Operator.token","location":"ast/ktast.ast/-node/-unary-expression/-operator/token.html","searchKeys":["token","open override val token: Node.UnaryExpression.Operator.Token","ktast.ast.Node.UnaryExpression.Operator.token"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.Contract.ContractEffects.trailingComma","location":"ast/ktast.ast/-node/-contract/-contract-effects/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.Contract.ContractEffects.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.FunctionParams.trailingComma","location":"ast/ktast.ast/-node/-function-params/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.FunctionParams.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.FunctionType.ContextReceivers.trailingComma","location":"ast/ktast.ast/-node/-function-type/-context-receivers/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.FunctionType.ContextReceivers.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.FunctionType.Params.trailingComma","location":"ast/ktast.ast/-node/-function-type/-params/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.FunctionType.Params.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.LambdaParams.trailingComma","location":"ast/ktast.ast/-node/-lambda-params/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.LambdaParams.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.TypeArgs.trailingComma","location":"ast/ktast.ast/-node/-type-args/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.TypeArgs.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.TypeParams.trailingComma","location":"ast/ktast.ast/-node/-type-params/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.TypeParams.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.ValueArgs.trailingComma","location":"ast/ktast.ast/-node/-value-args/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.ValueArgs.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma? = null","description":"ktast.ast.Node.ClassDeclaration.ClassParents.trailingComma","location":"ast/ktast.ast/-node/-class-declaration/-class-parents/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma? = null","ktast.ast.Node.ClassDeclaration.ClassParents.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma? = null","description":"ktast.ast.Node.TypeConstraintSet.TypeConstraints.trailingComma","location":"ast/ktast.ast/-node/-type-constraint-set/-type-constraints/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma? = null","ktast.ast.Node.TypeConstraintSet.TypeConstraints.trailingComma"]},{"name":"open override val typeArgs: Node.TypeArgs?","description":"ktast.ast.Node.SimpleType.Qualifier.typeArgs","location":"ast/ktast.ast/-node/-simple-type/-qualifier/type-args.html","searchKeys":["typeArgs","open override val typeArgs: Node.TypeArgs?","ktast.ast.Node.SimpleType.Qualifier.typeArgs"]},{"name":"open override val typeArgs: Node.TypeArgs?","description":"ktast.ast.Node.SimpleType.typeArgs","location":"ast/ktast.ast/-node/-simple-type/type-args.html","searchKeys":["typeArgs","open override val typeArgs: Node.TypeArgs?","ktast.ast.Node.SimpleType.typeArgs"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.AnnotatedExpression.tag","location":"ast/ktast.ast/-node/-annotated-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.AnnotatedExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.AnnotationSet.Annotation.tag","location":"ast/ktast.ast/-node/-annotation-set/-annotation/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.AnnotationSet.Annotation.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.AnnotationSet.Target.tag","location":"ast/ktast.ast/-node/-annotation-set/-target/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.AnnotationSet.Target.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.AnnotationSet.tag","location":"ast/ktast.ast/-node/-annotation-set/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.AnnotationSet.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.AnonymousFunctionExpression.tag","location":"ast/ktast.ast/-node/-anonymous-function-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.AnonymousFunctionExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ArrayAccessExpression.tag","location":"ast/ktast.ast/-node/-array-access-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ArrayAccessExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.BinaryExpression.Operator.tag","location":"ast/ktast.ast/-node/-binary-expression/-operator/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.BinaryExpression.Operator.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.BinaryExpression.tag","location":"ast/ktast.ast/-node/-binary-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.BinaryExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.BinaryInfixExpression.tag","location":"ast/ktast.ast/-node/-binary-infix-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.BinaryInfixExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.BinaryTypeExpression.Operator.tag","location":"ast/ktast.ast/-node/-binary-type-expression/-operator/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.BinaryTypeExpression.Operator.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.BinaryTypeExpression.tag","location":"ast/ktast.ast/-node/-binary-type-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.BinaryTypeExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.BlockExpression.tag","location":"ast/ktast.ast/-node/-block-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.BlockExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.BreakExpression.tag","location":"ast/ktast.ast/-node/-break-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.BreakExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.CallExpression.LambdaArg.tag","location":"ast/ktast.ast/-node/-call-expression/-lambda-arg/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.CallExpression.LambdaArg.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.CallExpression.tag","location":"ast/ktast.ast/-node/-call-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.CallExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.CallableReferenceExpression.tag","location":"ast/ktast.ast/-node/-callable-reference-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.CallableReferenceExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ClassDeclaration.ClassBody.EnumEntry.tag","location":"ast/ktast.ast/-node/-class-declaration/-class-body/-enum-entry/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ClassDeclaration.ClassBody.EnumEntry.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ClassDeclaration.ClassBody.tag","location":"ast/ktast.ast/-node/-class-declaration/-class-body/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ClassDeclaration.ClassBody.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ClassDeclaration.ClassParent.CallConstructor.tag","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-call-constructor/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ClassDeclaration.ClassParent.CallConstructor.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ClassDeclaration.ClassParent.DelegatedType.tag","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-delegated-type/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ClassDeclaration.ClassParent.DelegatedType.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ClassDeclaration.ClassParent.Type.tag","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-type/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ClassDeclaration.ClassParent.Type.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ClassDeclaration.ClassParents.tag","location":"ast/ktast.ast/-node/-class-declaration/-class-parents/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ClassDeclaration.ClassParents.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ClassDeclaration.DeclarationKeyword.tag","location":"ast/ktast.ast/-node/-class-declaration/-declaration-keyword/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ClassDeclaration.DeclarationKeyword.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ClassDeclaration.PrimaryConstructor.tag","location":"ast/ktast.ast/-node/-class-declaration/-primary-constructor/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ClassDeclaration.PrimaryConstructor.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ClassDeclaration.tag","location":"ast/ktast.ast/-node/-class-declaration/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ClassDeclaration.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ClassLiteralExpression.tag","location":"ast/ktast.ast/-node/-class-literal-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ClassLiteralExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.CollectionLiteralExpression.tag","location":"ast/ktast.ast/-node/-collection-literal-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.CollectionLiteralExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Comment.tag","location":"ast/ktast.ast/-node/-comment/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Comment.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ConstantLiteralExpression.tag","location":"ast/ktast.ast/-node/-constant-literal-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ConstantLiteralExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ContinueExpression.tag","location":"ast/ktast.ast/-node/-continue-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ContinueExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Contract.ContractEffect.tag","location":"ast/ktast.ast/-node/-contract/-contract-effect/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Contract.ContractEffect.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Contract.ContractEffects.tag","location":"ast/ktast.ast/-node/-contract/-contract-effects/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Contract.ContractEffects.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Contract.tag","location":"ast/ktast.ast/-node/-contract/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Contract.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.DoubleColonExpression.Receiver.Expression.tag","location":"ast/ktast.ast/-node/-double-colon-expression/-receiver/-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.DoubleColonExpression.Receiver.Expression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.DoubleColonExpression.Receiver.Type.tag","location":"ast/ktast.ast/-node/-double-colon-expression/-receiver/-type/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.DoubleColonExpression.Receiver.Type.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.DynamicType.tag","location":"ast/ktast.ast/-node/-dynamic-type/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.DynamicType.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ExpressionContainer.tag","location":"ast/ktast.ast/-node/-expression-container/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ExpressionContainer.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ForExpression.tag","location":"ast/ktast.ast/-node/-for-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ForExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.FunctionDeclaration.tag","location":"ast/ktast.ast/-node/-function-declaration/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.FunctionDeclaration.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.FunctionParam.tag","location":"ast/ktast.ast/-node/-function-param/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.FunctionParam.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.FunctionParams.tag","location":"ast/ktast.ast/-node/-function-params/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.FunctionParams.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.FunctionType.ContextReceiver.tag","location":"ast/ktast.ast/-node/-function-type/-context-receiver/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.FunctionType.ContextReceiver.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.FunctionType.ContextReceivers.tag","location":"ast/ktast.ast/-node/-function-type/-context-receivers/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.FunctionType.ContextReceivers.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.FunctionType.FunctionTypeReceiver.tag","location":"ast/ktast.ast/-node/-function-type/-function-type-receiver/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.FunctionType.FunctionTypeReceiver.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.FunctionType.Param.tag","location":"ast/ktast.ast/-node/-function-type/-param/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.FunctionType.Param.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.FunctionType.Params.tag","location":"ast/ktast.ast/-node/-function-type/-params/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.FunctionType.Params.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.FunctionType.tag","location":"ast/ktast.ast/-node/-function-type/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.FunctionType.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.IfExpression.tag","location":"ast/ktast.ast/-node/-if-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.IfExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ImportDirective.ImportAlias.tag","location":"ast/ktast.ast/-node/-import-directive/-import-alias/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ImportDirective.ImportAlias.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ImportDirective.tag","location":"ast/ktast.ast/-node/-import-directive/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ImportDirective.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ImportDirectives.tag","location":"ast/ktast.ast/-node/-import-directives/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ImportDirectives.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.InitDeclaration.tag","location":"ast/ktast.ast/-node/-init-declaration/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.InitDeclaration.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.At.tag","location":"ast/ktast.ast/-node/-keyword/-at/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.At.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.By.tag","location":"ast/ktast.ast/-node/-keyword/-by/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.By.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Catch.tag","location":"ast/ktast.ast/-node/-keyword/-catch/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Catch.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Colon.tag","location":"ast/ktast.ast/-node/-keyword/-colon/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Colon.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Comma.tag","location":"ast/ktast.ast/-node/-keyword/-comma/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Comma.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Constructor.tag","location":"ast/ktast.ast/-node/-keyword/-constructor/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Constructor.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Contract.tag","location":"ast/ktast.ast/-node/-keyword/-contract/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Contract.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Else.tag","location":"ast/ktast.ast/-node/-keyword/-else/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Else.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Equal.tag","location":"ast/ktast.ast/-node/-keyword/-equal/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Equal.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.For.tag","location":"ast/ktast.ast/-node/-keyword/-for/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.For.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Fun.tag","location":"ast/ktast.ast/-node/-keyword/-fun/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Fun.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Get.tag","location":"ast/ktast.ast/-node/-keyword/-get/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Get.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.If.tag","location":"ast/ktast.ast/-node/-keyword/-if/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.If.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Import.tag","location":"ast/ktast.ast/-node/-keyword/-import/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Import.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.LBracket.tag","location":"ast/ktast.ast/-node/-keyword/-l-bracket/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.LBracket.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.LPar.tag","location":"ast/ktast.ast/-node/-keyword/-l-par/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.LPar.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Package.tag","location":"ast/ktast.ast/-node/-keyword/-package/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Package.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Question.tag","location":"ast/ktast.ast/-node/-keyword/-question/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Question.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.RBracket.tag","location":"ast/ktast.ast/-node/-keyword/-r-bracket/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.RBracket.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.RPar.tag","location":"ast/ktast.ast/-node/-keyword/-r-par/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.RPar.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Set.tag","location":"ast/ktast.ast/-node/-keyword/-set/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Set.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.When.tag","location":"ast/ktast.ast/-node/-keyword/-when/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.When.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Where.tag","location":"ast/ktast.ast/-node/-keyword/-where/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Where.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.While.tag","location":"ast/ktast.ast/-node/-keyword/-while/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.While.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.KeywordModifier.tag","location":"ast/ktast.ast/-node/-keyword-modifier/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.KeywordModifier.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.KotlinFile.tag","location":"ast/ktast.ast/-node/-kotlin-file/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.KotlinFile.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.KotlinScript.tag","location":"ast/ktast.ast/-node/-kotlin-script/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.KotlinScript.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.LabeledExpression.tag","location":"ast/ktast.ast/-node/-labeled-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.LabeledExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.LambdaExpression.LambdaBody.tag","location":"ast/ktast.ast/-node/-lambda-expression/-lambda-body/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.LambdaExpression.LambdaBody.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.LambdaExpression.tag","location":"ast/ktast.ast/-node/-lambda-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.LambdaExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.LambdaParam.Variable.tag","location":"ast/ktast.ast/-node/-lambda-param/-variable/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.LambdaParam.Variable.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.LambdaParam.tag","location":"ast/ktast.ast/-node/-lambda-param/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.LambdaParam.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.LambdaParams.tag","location":"ast/ktast.ast/-node/-lambda-params/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.LambdaParams.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Modifiers.tag","location":"ast/ktast.ast/-node/-modifiers/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Modifiers.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.NameExpression.tag","location":"ast/ktast.ast/-node/-name-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.NameExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.NullableType.tag","location":"ast/ktast.ast/-node/-nullable-type/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.NullableType.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ObjectLiteralExpression.tag","location":"ast/ktast.ast/-node/-object-literal-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ObjectLiteralExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.PackageDirective.tag","location":"ast/ktast.ast/-node/-package-directive/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.PackageDirective.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ParenthesizedExpression.tag","location":"ast/ktast.ast/-node/-parenthesized-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ParenthesizedExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.PropertyDeclaration.Getter.tag","location":"ast/ktast.ast/-node/-property-declaration/-getter/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.PropertyDeclaration.Getter.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.PropertyDeclaration.PropertyDelegate.tag","location":"ast/ktast.ast/-node/-property-declaration/-property-delegate/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.PropertyDeclaration.PropertyDelegate.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.PropertyDeclaration.Setter.tag","location":"ast/ktast.ast/-node/-property-declaration/-setter/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.PropertyDeclaration.Setter.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.PropertyDeclaration.ValOrVar.tag","location":"ast/ktast.ast/-node/-property-declaration/-val-or-var/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.PropertyDeclaration.ValOrVar.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.PropertyDeclaration.tag","location":"ast/ktast.ast/-node/-property-declaration/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.PropertyDeclaration.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.PropertyExpression.tag","location":"ast/ktast.ast/-node/-property-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.PropertyExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ReturnExpression.tag","location":"ast/ktast.ast/-node/-return-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ReturnExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationCall.tag","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-call/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationCall.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.tag","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-target/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationTarget.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.SecondaryConstructorDeclaration.tag","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.SecondaryConstructorDeclaration.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Semicolon.tag","location":"ast/ktast.ast/-node/-semicolon/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Semicolon.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.SimpleType.Qualifier.tag","location":"ast/ktast.ast/-node/-simple-type/-qualifier/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.SimpleType.Qualifier.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.SimpleType.tag","location":"ast/ktast.ast/-node/-simple-type/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.SimpleType.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.StringLiteralExpression.LiteralStringEntry.tag","location":"ast/ktast.ast/-node/-string-literal-expression/-literal-string-entry/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.StringLiteralExpression.LiteralStringEntry.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.StringLiteralExpression.LongTemplateEntry.tag","location":"ast/ktast.ast/-node/-string-literal-expression/-long-template-entry/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.StringLiteralExpression.LongTemplateEntry.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.StringLiteralExpression.RegularEscapeEntry.tag","location":"ast/ktast.ast/-node/-string-literal-expression/-regular-escape-entry/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.StringLiteralExpression.RegularEscapeEntry.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.StringLiteralExpression.ShortTemplateEntry.tag","location":"ast/ktast.ast/-node/-string-literal-expression/-short-template-entry/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.StringLiteralExpression.ShortTemplateEntry.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.StringLiteralExpression.UnicodeEscapeEntry.tag","location":"ast/ktast.ast/-node/-string-literal-expression/-unicode-escape-entry/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.StringLiteralExpression.UnicodeEscapeEntry.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.StringLiteralExpression.tag","location":"ast/ktast.ast/-node/-string-literal-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.StringLiteralExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.SuperExpression.tag","location":"ast/ktast.ast/-node/-super-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.SuperExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ThisExpression.tag","location":"ast/ktast.ast/-node/-this-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ThisExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ThrowExpression.tag","location":"ast/ktast.ast/-node/-throw-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ThrowExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TryExpression.CatchClause.tag","location":"ast/ktast.ast/-node/-try-expression/-catch-clause/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TryExpression.CatchClause.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TryExpression.tag","location":"ast/ktast.ast/-node/-try-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TryExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TypeAliasDeclaration.tag","location":"ast/ktast.ast/-node/-type-alias-declaration/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TypeAliasDeclaration.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TypeArg.tag","location":"ast/ktast.ast/-node/-type-arg/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TypeArg.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TypeArgs.tag","location":"ast/ktast.ast/-node/-type-args/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TypeArgs.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TypeConstraintSet.TypeConstraint.tag","location":"ast/ktast.ast/-node/-type-constraint-set/-type-constraint/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TypeConstraintSet.TypeConstraint.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TypeConstraintSet.TypeConstraints.tag","location":"ast/ktast.ast/-node/-type-constraint-set/-type-constraints/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TypeConstraintSet.TypeConstraints.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TypeConstraintSet.tag","location":"ast/ktast.ast/-node/-type-constraint-set/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TypeConstraintSet.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TypeParam.tag","location":"ast/ktast.ast/-node/-type-param/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TypeParam.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TypeParams.tag","location":"ast/ktast.ast/-node/-type-params/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TypeParams.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TypeRef.tag","location":"ast/ktast.ast/-node/-type-ref/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TypeRef.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.UnaryExpression.Operator.tag","location":"ast/ktast.ast/-node/-unary-expression/-operator/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.UnaryExpression.Operator.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.UnaryExpression.tag","location":"ast/ktast.ast/-node/-unary-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.UnaryExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ValueArg.tag","location":"ast/ktast.ast/-node/-value-arg/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ValueArg.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ValueArgs.tag","location":"ast/ktast.ast/-node/-value-args/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ValueArgs.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Variable.tag","location":"ast/ktast.ast/-node/-variable/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Variable.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.WhenExpression.WhenBranch.Conditional.tag","location":"ast/ktast.ast/-node/-when-expression/-when-branch/-conditional/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.WhenExpression.WhenBranch.Conditional.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.WhenExpression.WhenBranch.Else.tag","location":"ast/ktast.ast/-node/-when-expression/-when-branch/-else/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.WhenExpression.WhenBranch.Else.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.WhenExpression.WhenCondition.Expression.tag","location":"ast/ktast.ast/-node/-when-expression/-when-condition/-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.WhenExpression.WhenCondition.Expression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.WhenExpression.WhenCondition.In.tag","location":"ast/ktast.ast/-node/-when-expression/-when-condition/-in/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.WhenExpression.WhenCondition.In.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.WhenExpression.WhenCondition.Is.tag","location":"ast/ktast.ast/-node/-when-expression/-when-condition/-is/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.WhenExpression.WhenCondition.Is.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.WhenExpression.tag","location":"ast/ktast.ast/-node/-when-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.WhenExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.WhileExpression.tag","location":"ast/ktast.ast/-node/-while-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.WhileExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Whitespace.tag","location":"ast/ktast.ast/-node/-whitespace/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Whitespace.tag"]},{"name":"sealed class Accessor : Node, Node.WithModifiers, Node.WithPostModifiers, Node.WithFunctionBody","description":"ktast.ast.Node.PropertyDeclaration.Accessor","location":"ast/ktast.ast/-node/-property-declaration/-accessor/index.html","searchKeys":["Accessor","sealed class Accessor : Node, Node.WithModifiers, Node.WithPostModifiers, Node.WithFunctionBody","ktast.ast.Node.PropertyDeclaration.Accessor"]},{"name":"sealed class BaseBinaryExpression : Node.Expression","description":"ktast.ast.Node.BaseBinaryExpression","location":"ast/ktast.ast/-node/-base-binary-expression/index.html","searchKeys":["BaseBinaryExpression","sealed class BaseBinaryExpression : Node.Expression","ktast.ast.Node.BaseBinaryExpression"]},{"name":"sealed class ClassParent : Node","description":"ktast.ast.Node.ClassDeclaration.ClassParent","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/index.html","searchKeys":["ClassParent","sealed class ClassParent : Node","ktast.ast.Node.ClassDeclaration.ClassParent"]},{"name":"sealed class Declaration : Node.Statement","description":"ktast.ast.Node.Declaration","location":"ast/ktast.ast/-node/-declaration/index.html","searchKeys":["Declaration","sealed class Declaration : Node.Statement","ktast.ast.Node.Declaration"]},{"name":"sealed class DoubleColonExpression : Node.Expression","description":"ktast.ast.Node.DoubleColonExpression","location":"ast/ktast.ast/-node/-double-colon-expression/index.html","searchKeys":["DoubleColonExpression","sealed class DoubleColonExpression : Node.Expression","ktast.ast.Node.DoubleColonExpression"]},{"name":"sealed class Entry : Node","description":"ktast.ast.Node.StringLiteralExpression.Entry","location":"ast/ktast.ast/-node/-string-literal-expression/-entry/index.html","searchKeys":["Entry","sealed class Entry : Node","ktast.ast.Node.StringLiteralExpression.Entry"]},{"name":"sealed class Expression : Node.Statement","description":"ktast.ast.Node.Expression","location":"ast/ktast.ast/-node/-expression/index.html","searchKeys":["Expression","sealed class Expression : Node.Statement","ktast.ast.Node.Expression"]},{"name":"sealed class Extra : Node","description":"ktast.ast.Node.Extra","location":"ast/ktast.ast/-node/-extra/index.html","searchKeys":["Extra","sealed class Extra : Node","ktast.ast.Node.Extra"]},{"name":"sealed class Keyword : Node, Node.HasSimpleStringRepresentation","description":"ktast.ast.Node.Keyword","location":"ast/ktast.ast/-node/-keyword/index.html","searchKeys":["Keyword","sealed class Keyword : Node, Node.HasSimpleStringRepresentation","ktast.ast.Node.Keyword"]},{"name":"sealed class Modifier : Node","description":"ktast.ast.Node.Modifier","location":"ast/ktast.ast/-node/-modifier/index.html","searchKeys":["Modifier","sealed class Modifier : Node","ktast.ast.Node.Modifier"]},{"name":"sealed class PostModifier : Node","description":"ktast.ast.Node.PostModifier","location":"ast/ktast.ast/-node/-post-modifier/index.html","searchKeys":["PostModifier","sealed class PostModifier : Node","ktast.ast.Node.PostModifier"]},{"name":"sealed class Receiver : Node","description":"ktast.ast.Node.DoubleColonExpression.Receiver","location":"ast/ktast.ast/-node/-double-colon-expression/-receiver/index.html","searchKeys":["Receiver","sealed class Receiver : Node","ktast.ast.Node.DoubleColonExpression.Receiver"]},{"name":"sealed class Statement : Node","description":"ktast.ast.Node.Statement","location":"ast/ktast.ast/-node/-statement/index.html","searchKeys":["Statement","sealed class Statement : Node","ktast.ast.Node.Statement"]},{"name":"sealed class Type : Node","description":"ktast.ast.Node.Type","location":"ast/ktast.ast/-node/-type/index.html","searchKeys":["Type","sealed class Type : Node","ktast.ast.Node.Type"]},{"name":"sealed class WhenBranch : Node","description":"ktast.ast.Node.WhenExpression.WhenBranch","location":"ast/ktast.ast/-node/-when-expression/-when-branch/index.html","searchKeys":["WhenBranch","sealed class WhenBranch : Node","ktast.ast.Node.WhenExpression.WhenBranch"]},{"name":"sealed class WhenCondition : Node","description":"ktast.ast.Node.WhenExpression.WhenCondition","location":"ast/ktast.ast/-node/-when-expression/-when-condition/index.html","searchKeys":["WhenCondition","sealed class WhenCondition : Node","ktast.ast.Node.WhenExpression.WhenCondition"]},{"name":"val accessors: List<Node.PropertyDeclaration.Accessor>","description":"ktast.ast.Node.PropertyDeclaration.accessors","location":"ast/ktast.ast/-node/-property-declaration/accessors.html","searchKeys":["accessors","val accessors: List<Node.PropertyDeclaration.Accessor>","ktast.ast.Node.PropertyDeclaration.accessors"]},{"name":"val annotations: List<Node.AnnotationSet.Annotation>","description":"ktast.ast.Node.AnnotationSet.annotations","location":"ast/ktast.ast/-node/-annotation-set/annotations.html","searchKeys":["annotations","val annotations: List<Node.AnnotationSet.Annotation>","ktast.ast.Node.AnnotationSet.annotations"]},{"name":"val app: Appendable","description":"ktast.ast.Writer.app","location":"ast/ktast.ast/-writer/app.html","searchKeys":["app","val app: Appendable","ktast.ast.Writer.app"]},{"name":"val args: Node.ValueArgs?","description":"ktast.ast.Node.AnnotationSet.Annotation.args","location":"ast/ktast.ast/-node/-annotation-set/-annotation/args.html","searchKeys":["args","val args: Node.ValueArgs?","ktast.ast.Node.AnnotationSet.Annotation.args"]},{"name":"val args: Node.ValueArgs?","description":"ktast.ast.Node.CallExpression.args","location":"ast/ktast.ast/-node/-call-expression/args.html","searchKeys":["args","val args: Node.ValueArgs?","ktast.ast.Node.CallExpression.args"]},{"name":"val args: Node.ValueArgs?","description":"ktast.ast.Node.ClassDeclaration.ClassBody.EnumEntry.args","location":"ast/ktast.ast/-node/-class-declaration/-class-body/-enum-entry/args.html","searchKeys":["args","val args: Node.ValueArgs?","ktast.ast.Node.ClassDeclaration.ClassBody.EnumEntry.args"]},{"name":"val args: Node.ValueArgs?","description":"ktast.ast.Node.ClassDeclaration.ClassParent.CallConstructor.args","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-call-constructor/args.html","searchKeys":["args","val args: Node.ValueArgs?","ktast.ast.Node.ClassDeclaration.ClassParent.CallConstructor.args"]},{"name":"val args: Node.ValueArgs?","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationCall.args","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-call/args.html","searchKeys":["args","val args: Node.ValueArgs?","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationCall.args"]},{"name":"val asterisk: Boolean","description":"ktast.ast.Node.TypeArg.asterisk","location":"ast/ktast.ast/-node/-type-arg/asterisk.html","searchKeys":["asterisk","val asterisk: Boolean","ktast.ast.Node.TypeArg.asterisk"]},{"name":"val asterisk: Boolean","description":"ktast.ast.Node.ValueArg.asterisk","location":"ast/ktast.ast/-node/-value-arg/asterisk.html","searchKeys":["asterisk","val asterisk: Boolean","ktast.ast.Node.ValueArg.asterisk"]},{"name":"val atSymbol: Node.Keyword.At?","description":"ktast.ast.Node.AnnotationSet.atSymbol","location":"ast/ktast.ast/-node/-annotation-set/at-symbol.html","searchKeys":["atSymbol","val atSymbol: Node.Keyword.At?","ktast.ast.Node.AnnotationSet.atSymbol"]},{"name":"val block: Node.BlockExpression","description":"ktast.ast.Node.InitDeclaration.block","location":"ast/ktast.ast/-node/-init-declaration/block.html","searchKeys":["block","val block: Node.BlockExpression","ktast.ast.Node.InitDeclaration.block"]},{"name":"val block: Node.BlockExpression","description":"ktast.ast.Node.TryExpression.CatchClause.block","location":"ast/ktast.ast/-node/-try-expression/-catch-clause/block.html","searchKeys":["block","val block: Node.BlockExpression","ktast.ast.Node.TryExpression.CatchClause.block"]},{"name":"val block: Node.BlockExpression","description":"ktast.ast.Node.TryExpression.block","location":"ast/ktast.ast/-node/-try-expression/block.html","searchKeys":["block","val block: Node.BlockExpression","ktast.ast.Node.TryExpression.block"]},{"name":"val block: Node.BlockExpression?","description":"ktast.ast.Node.SecondaryConstructorDeclaration.block","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/block.html","searchKeys":["block","val block: Node.BlockExpression?","ktast.ast.Node.SecondaryConstructorDeclaration.block"]},{"name":"val body: Node.Expression","description":"ktast.ast.Node.WhenExpression.WhenBranch.Conditional.body","location":"ast/ktast.ast/-node/-when-expression/-when-branch/-conditional/body.html","searchKeys":["body","val body: Node.Expression","ktast.ast.Node.WhenExpression.WhenBranch.Conditional.body"]},{"name":"val body: Node.Expression","description":"ktast.ast.Node.WhenExpression.WhenBranch.Else.body","location":"ast/ktast.ast/-node/-when-expression/-when-branch/-else/body.html","searchKeys":["body","val body: Node.Expression","ktast.ast.Node.WhenExpression.WhenBranch.Else.body"]},{"name":"val body: Node.ExpressionContainer","description":"ktast.ast.Node.ForExpression.body","location":"ast/ktast.ast/-node/-for-expression/body.html","searchKeys":["body","val body: Node.ExpressionContainer","ktast.ast.Node.ForExpression.body"]},{"name":"val body: Node.ExpressionContainer","description":"ktast.ast.Node.IfExpression.body","location":"ast/ktast.ast/-node/-if-expression/body.html","searchKeys":["body","val body: Node.ExpressionContainer","ktast.ast.Node.IfExpression.body"]},{"name":"val body: Node.ExpressionContainer","description":"ktast.ast.Node.WhileExpression.body","location":"ast/ktast.ast/-node/-while-expression/body.html","searchKeys":["body","val body: Node.ExpressionContainer","ktast.ast.Node.WhileExpression.body"]},{"name":"val byKeyword: Node.Keyword.By","description":"ktast.ast.Node.ClassDeclaration.ClassParent.DelegatedType.byKeyword","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-delegated-type/by-keyword.html","searchKeys":["byKeyword","val byKeyword: Node.Keyword.By","ktast.ast.Node.ClassDeclaration.ClassParent.DelegatedType.byKeyword"]},{"name":"val byKeyword: Node.Keyword.By","description":"ktast.ast.Node.PropertyDeclaration.PropertyDelegate.byKeyword","location":"ast/ktast.ast/-node/-property-declaration/-property-delegate/by-keyword.html","searchKeys":["byKeyword","val byKeyword: Node.Keyword.By","ktast.ast.Node.PropertyDeclaration.PropertyDelegate.byKeyword"]},{"name":"val catchClauses: List<Node.TryExpression.CatchClause>","description":"ktast.ast.Node.TryExpression.catchClauses","location":"ast/ktast.ast/-node/-try-expression/catch-clauses.html","searchKeys":["catchClauses","val catchClauses: List<Node.TryExpression.CatchClause>","ktast.ast.Node.TryExpression.catchClauses"]},{"name":"val catchKeyword: Node.Keyword.Catch","description":"ktast.ast.Node.TryExpression.CatchClause.catchKeyword","location":"ast/ktast.ast/-node/-try-expression/-catch-clause/catch-keyword.html","searchKeys":["catchKeyword","val catchKeyword: Node.Keyword.Catch","ktast.ast.Node.TryExpression.CatchClause.catchKeyword"]},{"name":"val char: Char","description":"ktast.ast.Node.StringLiteralExpression.RegularEscapeEntry.char","location":"ast/ktast.ast/-node/-string-literal-expression/-regular-escape-entry/char.html","searchKeys":["char","val char: Char","ktast.ast.Node.StringLiteralExpression.RegularEscapeEntry.char"]},{"name":"val classBody: Node.ClassDeclaration.ClassBody?","description":"ktast.ast.Node.ClassDeclaration.ClassBody.EnumEntry.classBody","location":"ast/ktast.ast/-node/-class-declaration/-class-body/-enum-entry/class-body.html","searchKeys":["classBody","val classBody: Node.ClassDeclaration.ClassBody?","ktast.ast.Node.ClassDeclaration.ClassBody.EnumEntry.classBody"]},{"name":"val classBody: Node.ClassDeclaration.ClassBody?","description":"ktast.ast.Node.ClassDeclaration.classBody","location":"ast/ktast.ast/-node/-class-declaration/class-body.html","searchKeys":["classBody","val classBody: Node.ClassDeclaration.ClassBody?","ktast.ast.Node.ClassDeclaration.classBody"]},{"name":"val classParents: Node.ClassDeclaration.ClassParents?","description":"ktast.ast.Node.ClassDeclaration.classParents","location":"ast/ktast.ast/-node/-class-declaration/class-parents.html","searchKeys":["classParents","val classParents: Node.ClassDeclaration.ClassParents?","ktast.ast.Node.ClassDeclaration.classParents"]},{"name":"val colon: Node.Keyword.Colon?","description":"ktast.ast.Node.AnnotationSet.colon","location":"ast/ktast.ast/-node/-annotation-set/colon.html","searchKeys":["colon","val colon: Node.Keyword.Colon?","ktast.ast.Node.AnnotationSet.colon"]},{"name":"val colon: Node.Keyword.Colon?","description":"ktast.ast.Node.LambdaParam.colon","location":"ast/ktast.ast/-node/-lambda-param/colon.html","searchKeys":["colon","val colon: Node.Keyword.Colon?","ktast.ast.Node.LambdaParam.colon"]},{"name":"val condition: Node.Expression","description":"ktast.ast.Node.IfExpression.condition","location":"ast/ktast.ast/-node/-if-expression/condition.html","searchKeys":["condition","val condition: Node.Expression","ktast.ast.Node.IfExpression.condition"]},{"name":"val condition: Node.ExpressionContainer","description":"ktast.ast.Node.WhileExpression.condition","location":"ast/ktast.ast/-node/-while-expression/condition.html","searchKeys":["condition","val condition: Node.ExpressionContainer","ktast.ast.Node.WhileExpression.condition"]},{"name":"val constraints: Node.TypeConstraintSet.TypeConstraints","description":"ktast.ast.Node.TypeConstraintSet.constraints","location":"ast/ktast.ast/-node/-type-constraint-set/constraints.html","searchKeys":["constraints","val constraints: Node.TypeConstraintSet.TypeConstraints","ktast.ast.Node.TypeConstraintSet.constraints"]},{"name":"val constructorKeyword: Node.Keyword.Constructor","description":"ktast.ast.Node.SecondaryConstructorDeclaration.constructorKeyword","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/constructor-keyword.html","searchKeys":["constructorKeyword","val constructorKeyword: Node.Keyword.Constructor","ktast.ast.Node.SecondaryConstructorDeclaration.constructorKeyword"]},{"name":"val constructorKeyword: Node.Keyword.Constructor?","description":"ktast.ast.Node.ClassDeclaration.PrimaryConstructor.constructorKeyword","location":"ast/ktast.ast/-node/-class-declaration/-primary-constructor/constructor-keyword.html","searchKeys":["constructorKeyword","val constructorKeyword: Node.Keyword.Constructor?","ktast.ast.Node.ClassDeclaration.PrimaryConstructor.constructorKeyword"]},{"name":"val contextReceivers: Node.FunctionType.ContextReceivers?","description":"ktast.ast.Node.FunctionType.contextReceivers","location":"ast/ktast.ast/-node/-function-type/context-receivers.html","searchKeys":["contextReceivers","val contextReceivers: Node.FunctionType.ContextReceivers?","ktast.ast.Node.FunctionType.contextReceivers"]},{"name":"val contractEffects: Node.Contract.ContractEffects","description":"ktast.ast.Node.Contract.contractEffects","location":"ast/ktast.ast/-node/-contract/contract-effects.html","searchKeys":["contractEffects","val contractEffects: Node.Contract.ContractEffects","ktast.ast.Node.Contract.contractEffects"]},{"name":"val contractKeyword: Node.Keyword.Contract","description":"ktast.ast.Node.Contract.contractKeyword","location":"ast/ktast.ast/-node/-contract/contract-keyword.html","searchKeys":["contractKeyword","val contractKeyword: Node.Keyword.Contract","ktast.ast.Node.Contract.contractKeyword"]},{"name":"val declaration: Node.ClassDeclaration","description":"ktast.ast.Node.ObjectLiteralExpression.declaration","location":"ast/ktast.ast/-node/-object-literal-expression/declaration.html","searchKeys":["declaration","val declaration: Node.ClassDeclaration","ktast.ast.Node.ObjectLiteralExpression.declaration"]},{"name":"val declaration: Node.PropertyDeclaration","description":"ktast.ast.Node.PropertyExpression.declaration","location":"ast/ktast.ast/-node/-property-expression/declaration.html","searchKeys":["declaration","val declaration: Node.PropertyDeclaration","ktast.ast.Node.PropertyExpression.declaration"]},{"name":"val declarationKeyword: Node.ClassDeclaration.DeclarationKeyword","description":"ktast.ast.Node.ClassDeclaration.declarationKeyword","location":"ast/ktast.ast/-node/-class-declaration/declaration-keyword.html","searchKeys":["declarationKeyword","val declarationKeyword: Node.ClassDeclaration.DeclarationKeyword","ktast.ast.Node.ClassDeclaration.declarationKeyword"]},{"name":"val defaultValue: Node.Expression?","description":"ktast.ast.Node.FunctionParam.defaultValue","location":"ast/ktast.ast/-node/-function-param/default-value.html","searchKeys":["defaultValue","val defaultValue: Node.Expression?","ktast.ast.Node.FunctionParam.defaultValue"]},{"name":"val delegationCall: Node.SecondaryConstructorDeclaration.DelegationCall?","description":"ktast.ast.Node.SecondaryConstructorDeclaration.delegationCall","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/delegation-call.html","searchKeys":["delegationCall","val delegationCall: Node.SecondaryConstructorDeclaration.DelegationCall?","ktast.ast.Node.SecondaryConstructorDeclaration.delegationCall"]},{"name":"val destructTypeRef: Node.TypeRef?","description":"ktast.ast.Node.LambdaParam.destructTypeRef","location":"ast/ktast.ast/-node/-lambda-param/destruct-type-ref.html","searchKeys":["destructTypeRef","val destructTypeRef: Node.TypeRef?","ktast.ast.Node.LambdaParam.destructTypeRef"]},{"name":"val digits: String","description":"ktast.ast.Node.StringLiteralExpression.UnicodeEscapeEntry.digits","location":"ast/ktast.ast/-node/-string-literal-expression/-unicode-escape-entry/digits.html","searchKeys":["digits","val digits: String","ktast.ast.Node.StringLiteralExpression.UnicodeEscapeEntry.digits"]},{"name":"val doWhile: Boolean","description":"ktast.ast.Node.WhileExpression.doWhile","location":"ast/ktast.ast/-node/-while-expression/do-while.html","searchKeys":["doWhile","val doWhile: Boolean","ktast.ast.Node.WhileExpression.doWhile"]},{"name":"val elseBody: Node.ExpressionContainer?","description":"ktast.ast.Node.IfExpression.elseBody","location":"ast/ktast.ast/-node/-if-expression/else-body.html","searchKeys":["elseBody","val elseBody: Node.ExpressionContainer?","ktast.ast.Node.IfExpression.elseBody"]},{"name":"val elseKeyword: Node.Keyword.Else","description":"ktast.ast.Node.WhenExpression.WhenBranch.Else.elseKeyword","location":"ast/ktast.ast/-node/-when-expression/-when-branch/-else/else-keyword.html","searchKeys":["elseKeyword","val elseKeyword: Node.Keyword.Else","ktast.ast.Node.WhenExpression.WhenBranch.Else.elseKeyword"]},{"name":"val entries: List<Node.StringLiteralExpression.Entry>","description":"ktast.ast.Node.StringLiteralExpression.entries","location":"ast/ktast.ast/-node/-string-literal-expression/entries.html","searchKeys":["entries","val entries: List<Node.StringLiteralExpression.Entry>","ktast.ast.Node.StringLiteralExpression.entries"]},{"name":"val enumEntries: List<Node.ClassDeclaration.ClassBody.EnumEntry>","description":"ktast.ast.Node.ClassDeclaration.ClassBody.enumEntries","location":"ast/ktast.ast/-node/-class-declaration/-class-body/enum-entries.html","searchKeys":["enumEntries","val enumEntries: List<Node.ClassDeclaration.ClassBody.EnumEntry>","ktast.ast.Node.ClassDeclaration.ClassBody.enumEntries"]},{"name":"val equals: Node.Keyword.Equal?","description":"ktast.ast.Node.FunctionParam.equals","location":"ast/ktast.ast/-node/-function-param/equals.html","searchKeys":["equals","val equals: Node.Keyword.Equal?","ktast.ast.Node.FunctionParam.equals"]},{"name":"val equals: Node.Keyword.Equal?","description":"ktast.ast.Node.PropertyDeclaration.equals","location":"ast/ktast.ast/-node/-property-declaration/equals.html","searchKeys":["equals","val equals: Node.Keyword.Equal?","ktast.ast.Node.PropertyDeclaration.equals"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.AnnotatedExpression.expression","location":"ast/ktast.ast/-node/-annotated-expression/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.AnnotatedExpression.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.ArrayAccessExpression.expression","location":"ast/ktast.ast/-node/-array-access-expression/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.ArrayAccessExpression.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.CallExpression.expression","location":"ast/ktast.ast/-node/-call-expression/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.CallExpression.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.ClassDeclaration.ClassParent.DelegatedType.expression","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-delegated-type/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.ClassDeclaration.ClassParent.DelegatedType.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.Contract.ContractEffect.expression","location":"ast/ktast.ast/-node/-contract/-contract-effect/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.Contract.ContractEffect.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.DoubleColonExpression.Receiver.Expression.expression","location":"ast/ktast.ast/-node/-double-colon-expression/-receiver/-expression/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.DoubleColonExpression.Receiver.Expression.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.ExpressionContainer.expression","location":"ast/ktast.ast/-node/-expression-container/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.ExpressionContainer.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.LabeledExpression.expression","location":"ast/ktast.ast/-node/-labeled-expression/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.LabeledExpression.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.ParenthesizedExpression.expression","location":"ast/ktast.ast/-node/-parenthesized-expression/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.ParenthesizedExpression.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.PropertyDeclaration.PropertyDelegate.expression","location":"ast/ktast.ast/-node/-property-declaration/-property-delegate/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.PropertyDeclaration.PropertyDelegate.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.StringLiteralExpression.LongTemplateEntry.expression","location":"ast/ktast.ast/-node/-string-literal-expression/-long-template-entry/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.StringLiteralExpression.LongTemplateEntry.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.ThrowExpression.expression","location":"ast/ktast.ast/-node/-throw-expression/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.ThrowExpression.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.UnaryExpression.expression","location":"ast/ktast.ast/-node/-unary-expression/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.UnaryExpression.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.ValueArg.expression","location":"ast/ktast.ast/-node/-value-arg/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.ValueArg.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.WhenExpression.WhenCondition.Expression.expression","location":"ast/ktast.ast/-node/-when-expression/-when-condition/-expression/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.WhenExpression.WhenCondition.Expression.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.WhenExpression.WhenCondition.In.expression","location":"ast/ktast.ast/-node/-when-expression/-when-condition/-in/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.WhenExpression.WhenCondition.In.expression"]},{"name":"val expression: Node.Expression?","description":"ktast.ast.Node.ReturnExpression.expression","location":"ast/ktast.ast/-node/-return-expression/expression.html","searchKeys":["expression","val expression: Node.Expression?","ktast.ast.Node.ReturnExpression.expression"]},{"name":"val expression: Node.Expression?","description":"ktast.ast.Node.WhenExpression.expression","location":"ast/ktast.ast/-node/-when-expression/expression.html","searchKeys":["expression","val expression: Node.Expression?","ktast.ast.Node.WhenExpression.expression"]},{"name":"val expression: Node.LambdaExpression","description":"ktast.ast.Node.CallExpression.LambdaArg.expression","location":"ast/ktast.ast/-node/-call-expression/-lambda-arg/expression.html","searchKeys":["expression","val expression: Node.LambdaExpression","ktast.ast.Node.CallExpression.LambdaArg.expression"]},{"name":"val expressions: List<Node.Expression>","description":"ktast.ast.Node.CollectionLiteralExpression.expressions","location":"ast/ktast.ast/-node/-collection-literal-expression/expressions.html","searchKeys":["expressions","val expressions: List<Node.Expression>","ktast.ast.Node.CollectionLiteralExpression.expressions"]},{"name":"val expressions: List<Node.Expression>","description":"ktast.ast.Node.KotlinScript.expressions","location":"ast/ktast.ast/-node/-kotlin-script/expressions.html","searchKeys":["expressions","val expressions: List<Node.Expression>","ktast.ast.Node.KotlinScript.expressions"]},{"name":"val extrasMap: ExtrasMap? = null","description":"ktast.ast.Writer.extrasMap","location":"ast/ktast.ast/-writer/extras-map.html","searchKeys":["extrasMap","val extrasMap: ExtrasMap? = null","ktast.ast.Writer.extrasMap"]},{"name":"val finallyBlock: Node.BlockExpression?","description":"ktast.ast.Node.TryExpression.finallyBlock","location":"ast/ktast.ast/-node/-try-expression/finally-block.html","searchKeys":["finallyBlock","val finallyBlock: Node.BlockExpression?","ktast.ast.Node.TryExpression.finallyBlock"]},{"name":"val forKeyword: Node.Keyword.For","description":"ktast.ast.Node.ForExpression.forKeyword","location":"ast/ktast.ast/-node/-for-expression/for-keyword.html","searchKeys":["forKeyword","val forKeyword: Node.Keyword.For","ktast.ast.Node.ForExpression.forKeyword"]},{"name":"val form: Node.ConstantLiteralExpression.Form","description":"ktast.ast.Node.ConstantLiteralExpression.form","location":"ast/ktast.ast/-node/-constant-literal-expression/form.html","searchKeys":["form","val form: Node.ConstantLiteralExpression.Form","ktast.ast.Node.ConstantLiteralExpression.form"]},{"name":"val funKeyword: Node.Keyword.Fun","description":"ktast.ast.Node.FunctionDeclaration.funKeyword","location":"ast/ktast.ast/-node/-function-declaration/fun-keyword.html","searchKeys":["funKeyword","val funKeyword: Node.Keyword.Fun","ktast.ast.Node.FunctionDeclaration.funKeyword"]},{"name":"val function: Node.FunctionDeclaration","description":"ktast.ast.Node.AnonymousFunctionExpression.function","location":"ast/ktast.ast/-node/-anonymous-function-expression/function.html","searchKeys":["function","val function: Node.FunctionDeclaration","ktast.ast.Node.AnonymousFunctionExpression.function"]},{"name":"val functionTypeReceiver: Node.FunctionType.FunctionTypeReceiver?","description":"ktast.ast.Node.FunctionType.functionTypeReceiver","location":"ast/ktast.ast/-node/-function-type/function-type-receiver.html","searchKeys":["functionTypeReceiver","val functionTypeReceiver: Node.FunctionType.FunctionTypeReceiver?","ktast.ast.Node.FunctionType.functionTypeReceiver"]},{"name":"val getKeyword: Node.Keyword.Get","description":"ktast.ast.Node.PropertyDeclaration.Getter.getKeyword","location":"ast/ktast.ast/-node/-property-declaration/-getter/get-keyword.html","searchKeys":["getKeyword","val getKeyword: Node.Keyword.Get","ktast.ast.Node.PropertyDeclaration.Getter.getKeyword"]},{"name":"val hasTrailingCommaInEnumEntries: Boolean","description":"ktast.ast.Node.ClassDeclaration.ClassBody.hasTrailingCommaInEnumEntries","location":"ast/ktast.ast/-node/-class-declaration/-class-body/has-trailing-comma-in-enum-entries.html","searchKeys":["hasTrailingCommaInEnumEntries","val hasTrailingCommaInEnumEntries: Boolean","ktast.ast.Node.ClassDeclaration.ClassBody.hasTrailingCommaInEnumEntries"]},{"name":"val ifKeyword: Node.Keyword.If","description":"ktast.ast.Node.IfExpression.ifKeyword","location":"ast/ktast.ast/-node/-if-expression/if-keyword.html","searchKeys":["ifKeyword","val ifKeyword: Node.Keyword.If","ktast.ast.Node.IfExpression.ifKeyword"]},{"name":"val importAlias: Node.ImportDirective.ImportAlias?","description":"ktast.ast.Node.ImportDirective.importAlias","location":"ast/ktast.ast/-node/-import-directive/import-alias.html","searchKeys":["importAlias","val importAlias: Node.ImportDirective.ImportAlias?","ktast.ast.Node.ImportDirective.importAlias"]},{"name":"val importKeyword: Node.Keyword.Import","description":"ktast.ast.Node.ImportDirective.importKeyword","location":"ast/ktast.ast/-node/-import-directive/import-keyword.html","searchKeys":["importKeyword","val importKeyword: Node.Keyword.Import","ktast.ast.Node.ImportDirective.importKeyword"]},{"name":"val indices: List<Node.Expression>","description":"ktast.ast.Node.ArrayAccessExpression.indices","location":"ast/ktast.ast/-node/-array-access-expression/indices.html","searchKeys":["indices","val indices: List<Node.Expression>","ktast.ast.Node.ArrayAccessExpression.indices"]},{"name":"val initializer: Node.Expression?","description":"ktast.ast.Node.PropertyDeclaration.initializer","location":"ast/ktast.ast/-node/-property-declaration/initializer.html","searchKeys":["initializer","val initializer: Node.Expression?","ktast.ast.Node.PropertyDeclaration.initializer"]},{"name":"val isClass: Boolean","description":"ktast.ast.Node.ClassDeclaration.isClass","location":"ast/ktast.ast/-node/-class-declaration/is-class.html","searchKeys":["isClass","val isClass: Boolean","ktast.ast.Node.ClassDeclaration.isClass"]},{"name":"val isCompanion: Boolean","description":"ktast.ast.Node.ClassDeclaration.isCompanion","location":"ast/ktast.ast/-node/-class-declaration/is-companion.html","searchKeys":["isCompanion","val isCompanion: Boolean","ktast.ast.Node.ClassDeclaration.isCompanion"]},{"name":"val isEnum: Boolean","description":"ktast.ast.Node.ClassDeclaration.isEnum","location":"ast/ktast.ast/-node/-class-declaration/is-enum.html","searchKeys":["isEnum","val isEnum: Boolean","ktast.ast.Node.ClassDeclaration.isEnum"]},{"name":"val isInterface: Boolean","description":"ktast.ast.Node.ClassDeclaration.isInterface","location":"ast/ktast.ast/-node/-class-declaration/is-interface.html","searchKeys":["isInterface","val isInterface: Boolean","ktast.ast.Node.ClassDeclaration.isInterface"]},{"name":"val isObject: Boolean","description":"ktast.ast.Node.ClassDeclaration.isObject","location":"ast/ktast.ast/-node/-class-declaration/is-object.html","searchKeys":["isObject","val isObject: Boolean","ktast.ast.Node.ClassDeclaration.isObject"]},{"name":"val lBracket: Node.Keyword.LBracket?","description":"ktast.ast.Node.AnnotationSet.lBracket","location":"ast/ktast.ast/-node/-annotation-set/l-bracket.html","searchKeys":["lBracket","val lBracket: Node.Keyword.LBracket?","ktast.ast.Node.AnnotationSet.lBracket"]},{"name":"val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.FunctionType.lPar","location":"ast/ktast.ast/-node/-function-type/l-par.html","searchKeys":["lPar","val lPar: Node.Keyword.LPar?","ktast.ast.Node.FunctionType.lPar"]},{"name":"val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.LambdaParam.lPar","location":"ast/ktast.ast/-node/-lambda-param/l-par.html","searchKeys":["lPar","val lPar: Node.Keyword.LPar?","ktast.ast.Node.LambdaParam.lPar"]},{"name":"val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.NullableType.lPar","location":"ast/ktast.ast/-node/-nullable-type/l-par.html","searchKeys":["lPar","val lPar: Node.Keyword.LPar?","ktast.ast.Node.NullableType.lPar"]},{"name":"val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.PropertyDeclaration.lPar","location":"ast/ktast.ast/-node/-property-declaration/l-par.html","searchKeys":["lPar","val lPar: Node.Keyword.LPar?","ktast.ast.Node.PropertyDeclaration.lPar"]},{"name":"val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.TypeRef.lPar","location":"ast/ktast.ast/-node/-type-ref/l-par.html","searchKeys":["lPar","val lPar: Node.Keyword.LPar?","ktast.ast.Node.TypeRef.lPar"]},{"name":"val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.WhenExpression.lPar","location":"ast/ktast.ast/-node/-when-expression/l-par.html","searchKeys":["lPar","val lPar: Node.Keyword.LPar?","ktast.ast.Node.WhenExpression.lPar"]},{"name":"val label: String","description":"ktast.ast.Node.LabeledExpression.label","location":"ast/ktast.ast/-node/-labeled-expression/label.html","searchKeys":["label","val label: String","ktast.ast.Node.LabeledExpression.label"]},{"name":"val label: String?","description":"ktast.ast.Node.BreakExpression.label","location":"ast/ktast.ast/-node/-break-expression/label.html","searchKeys":["label","val label: String?","ktast.ast.Node.BreakExpression.label"]},{"name":"val label: String?","description":"ktast.ast.Node.CallExpression.LambdaArg.label","location":"ast/ktast.ast/-node/-call-expression/-lambda-arg/label.html","searchKeys":["label","val label: String?","ktast.ast.Node.CallExpression.LambdaArg.label"]},{"name":"val label: String?","description":"ktast.ast.Node.ContinueExpression.label","location":"ast/ktast.ast/-node/-continue-expression/label.html","searchKeys":["label","val label: String?","ktast.ast.Node.ContinueExpression.label"]},{"name":"val label: String?","description":"ktast.ast.Node.ReturnExpression.label","location":"ast/ktast.ast/-node/-return-expression/label.html","searchKeys":["label","val label: String?","ktast.ast.Node.ReturnExpression.label"]},{"name":"val label: String?","description":"ktast.ast.Node.SuperExpression.label","location":"ast/ktast.ast/-node/-super-expression/label.html","searchKeys":["label","val label: String?","ktast.ast.Node.SuperExpression.label"]},{"name":"val label: String?","description":"ktast.ast.Node.ThisExpression.label","location":"ast/ktast.ast/-node/-this-expression/label.html","searchKeys":["label","val label: String?","ktast.ast.Node.ThisExpression.label"]},{"name":"val lambda: Node.CallExpression.LambdaArg?","description":"ktast.ast.Node.ClassDeclaration.ClassParent.CallConstructor.lambda","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-call-constructor/lambda.html","searchKeys":["lambda","val lambda: Node.CallExpression.LambdaArg?","ktast.ast.Node.ClassDeclaration.ClassParent.CallConstructor.lambda"]},{"name":"val lambdaArg: Node.CallExpression.LambdaArg?","description":"ktast.ast.Node.CallExpression.lambdaArg","location":"ast/ktast.ast/-node/-call-expression/lambda-arg.html","searchKeys":["lambdaArg","val lambdaArg: Node.CallExpression.LambdaArg?","ktast.ast.Node.CallExpression.lambdaArg"]},{"name":"val lambdaBody: Node.LambdaExpression.LambdaBody?","description":"ktast.ast.Node.LambdaExpression.lambdaBody","location":"ast/ktast.ast/-node/-lambda-expression/lambda-body.html","searchKeys":["lambdaBody","val lambdaBody: Node.LambdaExpression.LambdaBody?","ktast.ast.Node.LambdaExpression.lambdaBody"]},{"name":"val lhs: Node.Expression","description":"ktast.ast.Node.BinaryTypeExpression.lhs","location":"ast/ktast.ast/-node/-binary-type-expression/lhs.html","searchKeys":["lhs","val lhs: Node.Expression","ktast.ast.Node.BinaryTypeExpression.lhs"]},{"name":"val loopParam: Node.LambdaParam","description":"ktast.ast.Node.ForExpression.loopParam","location":"ast/ktast.ast/-node/-for-expression/loop-param.html","searchKeys":["loopParam","val loopParam: Node.LambdaParam","ktast.ast.Node.ForExpression.loopParam"]},{"name":"val loopRange: Node.ExpressionContainer","description":"ktast.ast.Node.ForExpression.loopRange","location":"ast/ktast.ast/-node/-for-expression/loop-range.html","searchKeys":["loopRange","val loopRange: Node.ExpressionContainer","ktast.ast.Node.ForExpression.loopRange"]},{"name":"val name: Node.NameExpression","description":"ktast.ast.Node.ClassDeclaration.ClassBody.EnumEntry.name","location":"ast/ktast.ast/-node/-class-declaration/-class-body/-enum-entry/name.html","searchKeys":["name","val name: Node.NameExpression","ktast.ast.Node.ClassDeclaration.ClassBody.EnumEntry.name"]},{"name":"val name: Node.NameExpression","description":"ktast.ast.Node.FunctionParam.name","location":"ast/ktast.ast/-node/-function-param/name.html","searchKeys":["name","val name: Node.NameExpression","ktast.ast.Node.FunctionParam.name"]},{"name":"val name: Node.NameExpression","description":"ktast.ast.Node.ImportDirective.ImportAlias.name","location":"ast/ktast.ast/-node/-import-directive/-import-alias/name.html","searchKeys":["name","val name: Node.NameExpression","ktast.ast.Node.ImportDirective.ImportAlias.name"]},{"name":"val name: Node.NameExpression","description":"ktast.ast.Node.LambdaParam.Variable.name","location":"ast/ktast.ast/-node/-lambda-param/-variable/name.html","searchKeys":["name","val name: Node.NameExpression","ktast.ast.Node.LambdaParam.Variable.name"]},{"name":"val name: Node.NameExpression","description":"ktast.ast.Node.TypeAliasDeclaration.name","location":"ast/ktast.ast/-node/-type-alias-declaration/name.html","searchKeys":["name","val name: Node.NameExpression","ktast.ast.Node.TypeAliasDeclaration.name"]},{"name":"val name: Node.NameExpression","description":"ktast.ast.Node.TypeConstraintSet.TypeConstraint.name","location":"ast/ktast.ast/-node/-type-constraint-set/-type-constraint/name.html","searchKeys":["name","val name: Node.NameExpression","ktast.ast.Node.TypeConstraintSet.TypeConstraint.name"]},{"name":"val name: Node.NameExpression","description":"ktast.ast.Node.TypeParam.name","location":"ast/ktast.ast/-node/-type-param/name.html","searchKeys":["name","val name: Node.NameExpression","ktast.ast.Node.TypeParam.name"]},{"name":"val name: Node.NameExpression","description":"ktast.ast.Node.Variable.name","location":"ast/ktast.ast/-node/-variable/name.html","searchKeys":["name","val name: Node.NameExpression","ktast.ast.Node.Variable.name"]},{"name":"val name: Node.NameExpression?","description":"ktast.ast.Node.ClassDeclaration.name","location":"ast/ktast.ast/-node/-class-declaration/name.html","searchKeys":["name","val name: Node.NameExpression?","ktast.ast.Node.ClassDeclaration.name"]},{"name":"val name: Node.NameExpression?","description":"ktast.ast.Node.FunctionDeclaration.name","location":"ast/ktast.ast/-node/-function-declaration/name.html","searchKeys":["name","val name: Node.NameExpression?","ktast.ast.Node.FunctionDeclaration.name"]},{"name":"val name: Node.NameExpression?","description":"ktast.ast.Node.FunctionType.Param.name","location":"ast/ktast.ast/-node/-function-type/-param/name.html","searchKeys":["name","val name: Node.NameExpression?","ktast.ast.Node.FunctionType.Param.name"]},{"name":"val name: Node.NameExpression?","description":"ktast.ast.Node.ValueArg.name","location":"ast/ktast.ast/-node/-value-arg/name.html","searchKeys":["name","val name: Node.NameExpression?","ktast.ast.Node.ValueArg.name"]},{"name":"val name: String","description":"ktast.ast.Node.NameExpression.name","location":"ast/ktast.ast/-node/-name-expression/name.html","searchKeys":["name","val name: String","ktast.ast.Node.NameExpression.name"]},{"name":"val names: List<Node.NameExpression>","description":"ktast.ast.Node.ImportDirective.names","location":"ast/ktast.ast/-node/-import-directive/names.html","searchKeys":["names","val names: List<Node.NameExpression>","ktast.ast.Node.ImportDirective.names"]},{"name":"val names: List<Node.NameExpression>","description":"ktast.ast.Node.PackageDirective.names","location":"ast/ktast.ast/-node/-package-directive/names.html","searchKeys":["names","val names: List<Node.NameExpression>","ktast.ast.Node.PackageDirective.names"]},{"name":"val not: Boolean","description":"ktast.ast.Node.WhenExpression.WhenCondition.In.not","location":"ast/ktast.ast/-node/-when-expression/-when-condition/-in/not.html","searchKeys":["not","val not: Boolean","ktast.ast.Node.WhenExpression.WhenCondition.In.not"]},{"name":"val not: Boolean","description":"ktast.ast.Node.WhenExpression.WhenCondition.Is.not","location":"ast/ktast.ast/-node/-when-expression/-when-condition/-is/not.html","searchKeys":["not","val not: Boolean","ktast.ast.Node.WhenExpression.WhenCondition.Is.not"]},{"name":"val operator: Node.BinaryExpression.Operator","description":"ktast.ast.Node.BinaryExpression.operator","location":"ast/ktast.ast/-node/-binary-expression/operator.html","searchKeys":["operator","val operator: Node.BinaryExpression.Operator","ktast.ast.Node.BinaryExpression.operator"]},{"name":"val operator: Node.BinaryTypeExpression.Operator","description":"ktast.ast.Node.BinaryTypeExpression.operator","location":"ast/ktast.ast/-node/-binary-type-expression/operator.html","searchKeys":["operator","val operator: Node.BinaryTypeExpression.Operator","ktast.ast.Node.BinaryTypeExpression.operator"]},{"name":"val operator: Node.NameExpression","description":"ktast.ast.Node.BinaryInfixExpression.operator","location":"ast/ktast.ast/-node/-binary-infix-expression/operator.html","searchKeys":["operator","val operator: Node.NameExpression","ktast.ast.Node.BinaryInfixExpression.operator"]},{"name":"val operator: Node.UnaryExpression.Operator","description":"ktast.ast.Node.UnaryExpression.operator","location":"ast/ktast.ast/-node/-unary-expression/operator.html","searchKeys":["operator","val operator: Node.UnaryExpression.Operator","ktast.ast.Node.UnaryExpression.operator"]},{"name":"val packageKeyword: Node.Keyword.Package","description":"ktast.ast.Node.PackageDirective.packageKeyword","location":"ast/ktast.ast/-node/-package-directive/package-keyword.html","searchKeys":["packageKeyword","val packageKeyword: Node.Keyword.Package","ktast.ast.Node.PackageDirective.packageKeyword"]},{"name":"val params: Node.FunctionParams","description":"ktast.ast.Node.TryExpression.CatchClause.params","location":"ast/ktast.ast/-node/-try-expression/-catch-clause/params.html","searchKeys":["params","val params: Node.FunctionParams","ktast.ast.Node.TryExpression.CatchClause.params"]},{"name":"val params: Node.FunctionParams?","description":"ktast.ast.Node.ClassDeclaration.PrimaryConstructor.params","location":"ast/ktast.ast/-node/-class-declaration/-primary-constructor/params.html","searchKeys":["params","val params: Node.FunctionParams?","ktast.ast.Node.ClassDeclaration.PrimaryConstructor.params"]},{"name":"val params: Node.FunctionParams?","description":"ktast.ast.Node.FunctionDeclaration.params","location":"ast/ktast.ast/-node/-function-declaration/params.html","searchKeys":["params","val params: Node.FunctionParams?","ktast.ast.Node.FunctionDeclaration.params"]},{"name":"val params: Node.FunctionParams?","description":"ktast.ast.Node.SecondaryConstructorDeclaration.params","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/params.html","searchKeys":["params","val params: Node.FunctionParams?","ktast.ast.Node.SecondaryConstructorDeclaration.params"]},{"name":"val params: Node.FunctionType.Params?","description":"ktast.ast.Node.FunctionType.params","location":"ast/ktast.ast/-node/-function-type/params.html","searchKeys":["params","val params: Node.FunctionType.Params?","ktast.ast.Node.FunctionType.params"]},{"name":"val params: Node.LambdaParams?","description":"ktast.ast.Node.LambdaExpression.params","location":"ast/ktast.ast/-node/-lambda-expression/params.html","searchKeys":["params","val params: Node.LambdaParams?","ktast.ast.Node.LambdaExpression.params"]},{"name":"val params: Node.LambdaParams?","description":"ktast.ast.Node.PropertyDeclaration.Setter.params","location":"ast/ktast.ast/-node/-property-declaration/-setter/params.html","searchKeys":["params","val params: Node.LambdaParams?","ktast.ast.Node.PropertyDeclaration.Setter.params"]},{"name":"val prefix: Boolean","description":"ktast.ast.Node.UnaryExpression.prefix","location":"ast/ktast.ast/-node/-unary-expression/prefix.html","searchKeys":["prefix","val prefix: Boolean","ktast.ast.Node.UnaryExpression.prefix"]},{"name":"val prefix: String","description":"ktast.ast.Node.NodeList.prefix","location":"ast/ktast.ast/-node/-node-list/prefix.html","searchKeys":["prefix","val prefix: String","ktast.ast.Node.NodeList.prefix"]},{"name":"val primaryConstructor: Node.ClassDeclaration.PrimaryConstructor?","description":"ktast.ast.Node.ClassDeclaration.primaryConstructor","location":"ast/ktast.ast/-node/-class-declaration/primary-constructor.html","searchKeys":["primaryConstructor","val primaryConstructor: Node.ClassDeclaration.PrimaryConstructor?","ktast.ast.Node.ClassDeclaration.primaryConstructor"]},{"name":"val propertyDelegate: Node.PropertyDeclaration.PropertyDelegate?","description":"ktast.ast.Node.PropertyDeclaration.propertyDelegate","location":"ast/ktast.ast/-node/-property-declaration/property-delegate.html","searchKeys":["propertyDelegate","val propertyDelegate: Node.PropertyDeclaration.PropertyDelegate?","ktast.ast.Node.PropertyDeclaration.propertyDelegate"]},{"name":"val qualifiers: List<Node.SimpleType.Qualifier>","description":"ktast.ast.Node.SimpleType.qualifiers","location":"ast/ktast.ast/-node/-simple-type/qualifiers.html","searchKeys":["qualifiers","val qualifiers: List<Node.SimpleType.Qualifier>","ktast.ast.Node.SimpleType.qualifiers"]},{"name":"val questionMarks: List<Node.Keyword.Question>","description":"ktast.ast.Node.DoubleColonExpression.Receiver.Type.questionMarks","location":"ast/ktast.ast/-node/-double-colon-expression/-receiver/-type/question-marks.html","searchKeys":["questionMarks","val questionMarks: List<Node.Keyword.Question>","ktast.ast.Node.DoubleColonExpression.Receiver.Type.questionMarks"]},{"name":"val rBracket: Node.Keyword.RBracket?","description":"ktast.ast.Node.AnnotationSet.rBracket","location":"ast/ktast.ast/-node/-annotation-set/r-bracket.html","searchKeys":["rBracket","val rBracket: Node.Keyword.RBracket?","ktast.ast.Node.AnnotationSet.rBracket"]},{"name":"val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.FunctionType.rPar","location":"ast/ktast.ast/-node/-function-type/r-par.html","searchKeys":["rPar","val rPar: Node.Keyword.RPar?","ktast.ast.Node.FunctionType.rPar"]},{"name":"val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.LambdaParam.rPar","location":"ast/ktast.ast/-node/-lambda-param/r-par.html","searchKeys":["rPar","val rPar: Node.Keyword.RPar?","ktast.ast.Node.LambdaParam.rPar"]},{"name":"val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.NullableType.rPar","location":"ast/ktast.ast/-node/-nullable-type/r-par.html","searchKeys":["rPar","val rPar: Node.Keyword.RPar?","ktast.ast.Node.NullableType.rPar"]},{"name":"val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.PropertyDeclaration.rPar","location":"ast/ktast.ast/-node/-property-declaration/r-par.html","searchKeys":["rPar","val rPar: Node.Keyword.RPar?","ktast.ast.Node.PropertyDeclaration.rPar"]},{"name":"val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.TypeRef.rPar","location":"ast/ktast.ast/-node/-type-ref/r-par.html","searchKeys":["rPar","val rPar: Node.Keyword.RPar?","ktast.ast.Node.TypeRef.rPar"]},{"name":"val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.WhenExpression.rPar","location":"ast/ktast.ast/-node/-when-expression/r-par.html","searchKeys":["rPar","val rPar: Node.Keyword.RPar?","ktast.ast.Node.WhenExpression.rPar"]},{"name":"val raw: Boolean","description":"ktast.ast.Node.StringLiteralExpression.raw","location":"ast/ktast.ast/-node/-string-literal-expression/raw.html","searchKeys":["raw","val raw: Boolean","ktast.ast.Node.StringLiteralExpression.raw"]},{"name":"val receiverTypeRef: Node.TypeRef?","description":"ktast.ast.Node.FunctionDeclaration.receiverTypeRef","location":"ast/ktast.ast/-node/-function-declaration/receiver-type-ref.html","searchKeys":["receiverTypeRef","val receiverTypeRef: Node.TypeRef?","ktast.ast.Node.FunctionDeclaration.receiverTypeRef"]},{"name":"val receiverTypeRef: Node.TypeRef?","description":"ktast.ast.Node.PropertyDeclaration.receiverTypeRef","location":"ast/ktast.ast/-node/-property-declaration/receiver-type-ref.html","searchKeys":["receiverTypeRef","val receiverTypeRef: Node.TypeRef?","ktast.ast.Node.PropertyDeclaration.receiverTypeRef"]},{"name":"val returnTypeRef: Node.TypeRef","description":"ktast.ast.Node.FunctionType.returnTypeRef","location":"ast/ktast.ast/-node/-function-type/return-type-ref.html","searchKeys":["returnTypeRef","val returnTypeRef: Node.TypeRef","ktast.ast.Node.FunctionType.returnTypeRef"]},{"name":"val rhs: Node.NameExpression","description":"ktast.ast.Node.CallableReferenceExpression.rhs","location":"ast/ktast.ast/-node/-callable-reference-expression/rhs.html","searchKeys":["rhs","val rhs: Node.NameExpression","ktast.ast.Node.CallableReferenceExpression.rhs"]},{"name":"val rhs: Node.TypeRef","description":"ktast.ast.Node.BinaryTypeExpression.rhs","location":"ast/ktast.ast/-node/-binary-type-expression/rhs.html","searchKeys":["rhs","val rhs: Node.TypeRef","ktast.ast.Node.BinaryTypeExpression.rhs"]},{"name":"val setKeyword: Node.Keyword.Set","description":"ktast.ast.Node.PropertyDeclaration.Setter.setKeyword","location":"ast/ktast.ast/-node/-property-declaration/-setter/set-keyword.html","searchKeys":["setKeyword","val setKeyword: Node.Keyword.Set","ktast.ast.Node.PropertyDeclaration.Setter.setKeyword"]},{"name":"val str: String","description":"ktast.ast.Node.StringLiteralExpression.LiteralStringEntry.str","location":"ast/ktast.ast/-node/-string-literal-expression/-literal-string-entry/str.html","searchKeys":["str","val str: String","ktast.ast.Node.StringLiteralExpression.LiteralStringEntry.str"]},{"name":"val str: String","description":"ktast.ast.Node.StringLiteralExpression.ShortTemplateEntry.str","location":"ast/ktast.ast/-node/-string-literal-expression/-short-template-entry/str.html","searchKeys":["str","val str: String","ktast.ast.Node.StringLiteralExpression.ShortTemplateEntry.str"]},{"name":"val suffix: String","description":"ktast.ast.Node.NodeList.suffix","location":"ast/ktast.ast/-node/-node-list/suffix.html","searchKeys":["suffix","val suffix: String","ktast.ast.Node.NodeList.suffix"]},{"name":"val target: Node.AnnotationSet.Target?","description":"ktast.ast.Node.AnnotationSet.target","location":"ast/ktast.ast/-node/-annotation-set/target.html","searchKeys":["target","val target: Node.AnnotationSet.Target?","ktast.ast.Node.AnnotationSet.target"]},{"name":"val target: Node.SecondaryConstructorDeclaration.DelegationTarget","description":"ktast.ast.Node.SecondaryConstructorDeclaration.DelegationCall.target","location":"ast/ktast.ast/-node/-secondary-constructor-declaration/-delegation-call/target.html","searchKeys":["target","val target: Node.SecondaryConstructorDeclaration.DelegationTarget","ktast.ast.Node.SecondaryConstructorDeclaration.DelegationCall.target"]},{"name":"val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.ArrayAccessExpression.trailingComma","location":"ast/ktast.ast/-node/-array-access-expression/trailing-comma.html","searchKeys":["trailingComma","val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.ArrayAccessExpression.trailingComma"]},{"name":"val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.CollectionLiteralExpression.trailingComma","location":"ast/ktast.ast/-node/-collection-literal-expression/trailing-comma.html","searchKeys":["trailingComma","val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.CollectionLiteralExpression.trailingComma"]},{"name":"val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.LambdaParam.trailingComma","location":"ast/ktast.ast/-node/-lambda-param/trailing-comma.html","searchKeys":["trailingComma","val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.LambdaParam.trailingComma"]},{"name":"val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.PropertyDeclaration.trailingComma","location":"ast/ktast.ast/-node/-property-declaration/trailing-comma.html","searchKeys":["trailingComma","val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.PropertyDeclaration.trailingComma"]},{"name":"val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.WhenExpression.WhenBranch.Conditional.trailingComma","location":"ast/ktast.ast/-node/-when-expression/-when-branch/-conditional/trailing-comma.html","searchKeys":["trailingComma","val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.WhenExpression.WhenBranch.Conditional.trailingComma"]},{"name":"val type: Node.SimpleType","description":"ktast.ast.Node.AnnotationSet.Annotation.type","location":"ast/ktast.ast/-node/-annotation-set/-annotation/type.html","searchKeys":["type","val type: Node.SimpleType","ktast.ast.Node.AnnotationSet.Annotation.type"]},{"name":"val type: Node.SimpleType","description":"ktast.ast.Node.ClassDeclaration.ClassParent.CallConstructor.type","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-call-constructor/type.html","searchKeys":["type","val type: Node.SimpleType","ktast.ast.Node.ClassDeclaration.ClassParent.CallConstructor.type"]},{"name":"val type: Node.SimpleType","description":"ktast.ast.Node.ClassDeclaration.ClassParent.DelegatedType.type","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-delegated-type/type.html","searchKeys":["type","val type: Node.SimpleType","ktast.ast.Node.ClassDeclaration.ClassParent.DelegatedType.type"]},{"name":"val type: Node.SimpleType","description":"ktast.ast.Node.ClassDeclaration.ClassParent.Type.type","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-type/type.html","searchKeys":["type","val type: Node.SimpleType","ktast.ast.Node.ClassDeclaration.ClassParent.Type.type"]},{"name":"val type: Node.SimpleType","description":"ktast.ast.Node.DoubleColonExpression.Receiver.Type.type","location":"ast/ktast.ast/-node/-double-colon-expression/-receiver/-type/type.html","searchKeys":["type","val type: Node.SimpleType","ktast.ast.Node.DoubleColonExpression.Receiver.Type.type"]},{"name":"val type: Node.Type","description":"ktast.ast.Node.NullableType.type","location":"ast/ktast.ast/-node/-nullable-type/type.html","searchKeys":["type","val type: Node.Type","ktast.ast.Node.NullableType.type"]},{"name":"val type: Node.Type","description":"ktast.ast.Node.TypeRef.type","location":"ast/ktast.ast/-node/-type-ref/type.html","searchKeys":["type","val type: Node.Type","ktast.ast.Node.TypeRef.type"]},{"name":"val typeArg: Node.TypeRef?","description":"ktast.ast.Node.SuperExpression.typeArg","location":"ast/ktast.ast/-node/-super-expression/type-arg.html","searchKeys":["typeArg","val typeArg: Node.TypeRef?","ktast.ast.Node.SuperExpression.typeArg"]},{"name":"val typeArgs: Node.TypeArgs?","description":"ktast.ast.Node.CallExpression.typeArgs","location":"ast/ktast.ast/-node/-call-expression/type-args.html","searchKeys":["typeArgs","val typeArgs: Node.TypeArgs?","ktast.ast.Node.CallExpression.typeArgs"]},{"name":"val typeArgs: Node.TypeArgs?","description":"ktast.ast.Node.ClassDeclaration.ClassParent.CallConstructor.typeArgs","location":"ast/ktast.ast/-node/-class-declaration/-class-parent/-call-constructor/type-args.html","searchKeys":["typeArgs","val typeArgs: Node.TypeArgs?","ktast.ast.Node.ClassDeclaration.ClassParent.CallConstructor.typeArgs"]},{"name":"val typeConstraintSet: Node.TypeConstraintSet?","description":"ktast.ast.Node.ClassDeclaration.typeConstraintSet","location":"ast/ktast.ast/-node/-class-declaration/type-constraint-set.html","searchKeys":["typeConstraintSet","val typeConstraintSet: Node.TypeConstraintSet?","ktast.ast.Node.ClassDeclaration.typeConstraintSet"]},{"name":"val typeConstraintSet: Node.TypeConstraintSet?","description":"ktast.ast.Node.PropertyDeclaration.typeConstraintSet","location":"ast/ktast.ast/-node/-property-declaration/type-constraint-set.html","searchKeys":["typeConstraintSet","val typeConstraintSet: Node.TypeConstraintSet?","ktast.ast.Node.PropertyDeclaration.typeConstraintSet"]},{"name":"val typeParams: Node.TypeParams?","description":"ktast.ast.Node.ClassDeclaration.typeParams","location":"ast/ktast.ast/-node/-class-declaration/type-params.html","searchKeys":["typeParams","val typeParams: Node.TypeParams?","ktast.ast.Node.ClassDeclaration.typeParams"]},{"name":"val typeParams: Node.TypeParams?","description":"ktast.ast.Node.FunctionDeclaration.typeParams","location":"ast/ktast.ast/-node/-function-declaration/type-params.html","searchKeys":["typeParams","val typeParams: Node.TypeParams?","ktast.ast.Node.FunctionDeclaration.typeParams"]},{"name":"val typeParams: Node.TypeParams?","description":"ktast.ast.Node.PropertyDeclaration.typeParams","location":"ast/ktast.ast/-node/-property-declaration/type-params.html","searchKeys":["typeParams","val typeParams: Node.TypeParams?","ktast.ast.Node.PropertyDeclaration.typeParams"]},{"name":"val typeParams: Node.TypeParams?","description":"ktast.ast.Node.TypeAliasDeclaration.typeParams","location":"ast/ktast.ast/-node/-type-alias-declaration/type-params.html","searchKeys":["typeParams","val typeParams: Node.TypeParams?","ktast.ast.Node.TypeAliasDeclaration.typeParams"]},{"name":"val typeRef: Node.TypeRef","description":"ktast.ast.Node.FunctionType.ContextReceiver.typeRef","location":"ast/ktast.ast/-node/-function-type/-context-receiver/type-ref.html","searchKeys":["typeRef","val typeRef: Node.TypeRef","ktast.ast.Node.FunctionType.ContextReceiver.typeRef"]},{"name":"val typeRef: Node.TypeRef","description":"ktast.ast.Node.FunctionType.FunctionTypeReceiver.typeRef","location":"ast/ktast.ast/-node/-function-type/-function-type-receiver/type-ref.html","searchKeys":["typeRef","val typeRef: Node.TypeRef","ktast.ast.Node.FunctionType.FunctionTypeReceiver.typeRef"]},{"name":"val typeRef: Node.TypeRef","description":"ktast.ast.Node.FunctionType.Param.typeRef","location":"ast/ktast.ast/-node/-function-type/-param/type-ref.html","searchKeys":["typeRef","val typeRef: Node.TypeRef","ktast.ast.Node.FunctionType.Param.typeRef"]},{"name":"val typeRef: Node.TypeRef","description":"ktast.ast.Node.TypeAliasDeclaration.typeRef","location":"ast/ktast.ast/-node/-type-alias-declaration/type-ref.html","searchKeys":["typeRef","val typeRef: Node.TypeRef","ktast.ast.Node.TypeAliasDeclaration.typeRef"]},{"name":"val typeRef: Node.TypeRef","description":"ktast.ast.Node.TypeConstraintSet.TypeConstraint.typeRef","location":"ast/ktast.ast/-node/-type-constraint-set/-type-constraint/type-ref.html","searchKeys":["typeRef","val typeRef: Node.TypeRef","ktast.ast.Node.TypeConstraintSet.TypeConstraint.typeRef"]},{"name":"val typeRef: Node.TypeRef","description":"ktast.ast.Node.WhenExpression.WhenCondition.Is.typeRef","location":"ast/ktast.ast/-node/-when-expression/-when-condition/-is/type-ref.html","searchKeys":["typeRef","val typeRef: Node.TypeRef","ktast.ast.Node.WhenExpression.WhenCondition.Is.typeRef"]},{"name":"val typeRef: Node.TypeRef?","description":"ktast.ast.Node.FunctionDeclaration.typeRef","location":"ast/ktast.ast/-node/-function-declaration/type-ref.html","searchKeys":["typeRef","val typeRef: Node.TypeRef?","ktast.ast.Node.FunctionDeclaration.typeRef"]},{"name":"val typeRef: Node.TypeRef?","description":"ktast.ast.Node.FunctionParam.typeRef","location":"ast/ktast.ast/-node/-function-param/type-ref.html","searchKeys":["typeRef","val typeRef: Node.TypeRef?","ktast.ast.Node.FunctionParam.typeRef"]},{"name":"val typeRef: Node.TypeRef?","description":"ktast.ast.Node.LambdaParam.Variable.typeRef","location":"ast/ktast.ast/-node/-lambda-param/-variable/type-ref.html","searchKeys":["typeRef","val typeRef: Node.TypeRef?","ktast.ast.Node.LambdaParam.Variable.typeRef"]},{"name":"val typeRef: Node.TypeRef?","description":"ktast.ast.Node.PropertyDeclaration.Getter.typeRef","location":"ast/ktast.ast/-node/-property-declaration/-getter/type-ref.html","searchKeys":["typeRef","val typeRef: Node.TypeRef?","ktast.ast.Node.PropertyDeclaration.Getter.typeRef"]},{"name":"val typeRef: Node.TypeRef?","description":"ktast.ast.Node.TypeArg.typeRef","location":"ast/ktast.ast/-node/-type-arg/type-ref.html","searchKeys":["typeRef","val typeRef: Node.TypeRef?","ktast.ast.Node.TypeArg.typeRef"]},{"name":"val typeRef: Node.TypeRef?","description":"ktast.ast.Node.TypeParam.typeRef","location":"ast/ktast.ast/-node/-type-param/type-ref.html","searchKeys":["typeRef","val typeRef: Node.TypeRef?","ktast.ast.Node.TypeParam.typeRef"]},{"name":"val typeRef: Node.TypeRef?","description":"ktast.ast.Node.Variable.typeRef","location":"ast/ktast.ast/-node/-variable/type-ref.html","searchKeys":["typeRef","val typeRef: Node.TypeRef?","ktast.ast.Node.Variable.typeRef"]},{"name":"val valOrVar: Node.PropertyDeclaration.ValOrVar","description":"ktast.ast.Node.PropertyDeclaration.valOrVar","location":"ast/ktast.ast/-node/-property-declaration/val-or-var.html","searchKeys":["valOrVar","val valOrVar: Node.PropertyDeclaration.ValOrVar","ktast.ast.Node.PropertyDeclaration.valOrVar"]},{"name":"val valOrVar: Node.PropertyDeclaration.ValOrVar?","description":"ktast.ast.Node.FunctionParam.valOrVar","location":"ast/ktast.ast/-node/-function-param/val-or-var.html","searchKeys":["valOrVar","val valOrVar: Node.PropertyDeclaration.ValOrVar?","ktast.ast.Node.FunctionParam.valOrVar"]},{"name":"val value: String","description":"ktast.ast.Node.ConstantLiteralExpression.value","location":"ast/ktast.ast/-node/-constant-literal-expression/value.html","searchKeys":["value","val value: String","ktast.ast.Node.ConstantLiteralExpression.value"]},{"name":"val variables: List<Node.LambdaParam.Variable>","description":"ktast.ast.Node.LambdaParam.variables","location":"ast/ktast.ast/-node/-lambda-param/variables.html","searchKeys":["variables","val variables: List<Node.LambdaParam.Variable>","ktast.ast.Node.LambdaParam.variables"]},{"name":"val variables: List<Node.Variable>","description":"ktast.ast.Node.PropertyDeclaration.variables","location":"ast/ktast.ast/-node/-property-declaration/variables.html","searchKeys":["variables","val variables: List<Node.Variable>","ktast.ast.Node.PropertyDeclaration.variables"]},{"name":"val whenBranches: List<Node.WhenExpression.WhenBranch>","description":"ktast.ast.Node.WhenExpression.whenBranches","location":"ast/ktast.ast/-node/-when-expression/when-branches.html","searchKeys":["whenBranches","val whenBranches: List<Node.WhenExpression.WhenBranch>","ktast.ast.Node.WhenExpression.whenBranches"]},{"name":"val whenConditions: List<Node.WhenExpression.WhenCondition>","description":"ktast.ast.Node.WhenExpression.WhenBranch.Conditional.whenConditions","location":"ast/ktast.ast/-node/-when-expression/-when-branch/-conditional/when-conditions.html","searchKeys":["whenConditions","val whenConditions: List<Node.WhenExpression.WhenCondition>","ktast.ast.Node.WhenExpression.WhenBranch.Conditional.whenConditions"]},{"name":"val whenKeyword: Node.Keyword.When","description":"ktast.ast.Node.WhenExpression.whenKeyword","location":"ast/ktast.ast/-node/-when-expression/when-keyword.html","searchKeys":["whenKeyword","val whenKeyword: Node.Keyword.When","ktast.ast.Node.WhenExpression.whenKeyword"]},{"name":"val whereKeyword: Node.Keyword.Where","description":"ktast.ast.Node.TypeConstraintSet.whereKeyword","location":"ast/ktast.ast/-node/-type-constraint-set/where-keyword.html","searchKeys":["whereKeyword","val whereKeyword: Node.Keyword.Where","ktast.ast.Node.TypeConstraintSet.whereKeyword"]},{"name":"val whileKeyword: Node.Keyword.While","description":"ktast.ast.Node.WhileExpression.whileKeyword","location":"ast/ktast.ast/-node/-while-expression/while-keyword.html","searchKeys":["whileKeyword","val whileKeyword: Node.Keyword.While","ktast.ast.Node.WhileExpression.whileKeyword"]},{"name":"var changed: Boolean","description":"ktast.ast.MutableVisitor.ChangedRef.changed","location":"ast/ktast.ast/-mutable-visitor/-changed-ref/changed.html","searchKeys":["changed","var changed: Boolean","ktast.ast.MutableVisitor.ChangedRef.changed"]},{"name":"class ConverterWithMutableExtras : ConverterWithExtras, MutableExtrasMap","description":"ktast.ast.psi.ConverterWithMutableExtras","location":"ast-psi/ktast.ast.psi/-converter-with-mutable-extras/index.html","searchKeys":["ConverterWithMutableExtras","class ConverterWithMutableExtras : ConverterWithExtras, MutableExtrasMap","ktast.ast.psi.ConverterWithMutableExtras"]},{"name":"class Unsupported(message: String) : UnsupportedOperationException","description":"ktast.ast.psi.Converter.Unsupported","location":"ast-psi/ktast.ast.psi/-converter/-unsupported/index.html","searchKeys":["Unsupported","class Unsupported(message: String) : UnsupportedOperationException","ktast.ast.psi.Converter.Unsupported"]},{"name":"constructor()","description":"ktast.ast.psi.Converter.Converter","location":"ast-psi/ktast.ast.psi/-converter/-converter.html","searchKeys":["Converter","constructor()","ktast.ast.psi.Converter.Converter"]},{"name":"constructor()","description":"ktast.ast.psi.ConverterWithExtras.ConverterWithExtras","location":"ast-psi/ktast.ast.psi/-converter-with-extras/-converter-with-extras.html","searchKeys":["ConverterWithExtras","constructor()","ktast.ast.psi.ConverterWithExtras.ConverterWithExtras"]},{"name":"constructor()","description":"ktast.ast.psi.ConverterWithMutableExtras.ConverterWithMutableExtras","location":"ast-psi/ktast.ast.psi/-converter-with-mutable-extras/-converter-with-mutable-extras.html","searchKeys":["ConverterWithMutableExtras","constructor()","ktast.ast.psi.ConverterWithMutableExtras.ConverterWithMutableExtras"]},{"name":"constructor(converter: Converter = Converter)","description":"ktast.ast.psi.Parser.Parser","location":"ast-psi/ktast.ast.psi/-parser/-parser.html","searchKeys":["Parser","constructor(converter: Converter = Converter)","ktast.ast.psi.Parser.Parser"]},{"name":"constructor(file: KtFile, errors: List<PsiErrorElement>)","description":"ktast.ast.psi.Parser.ParseError.ParseError","location":"ast-psi/ktast.ast.psi/-parser/-parse-error/-parse-error.html","searchKeys":["ParseError","constructor(file: KtFile, errors: List<PsiErrorElement>)","ktast.ast.psi.Parser.ParseError.ParseError"]},{"name":"constructor(message: String)","description":"ktast.ast.psi.Converter.Unsupported.Unsupported","location":"ast-psi/ktast.ast.psi/-converter/-unsupported/-unsupported.html","searchKeys":["Unsupported","constructor(message: String)","ktast.ast.psi.Converter.Unsupported.Unsupported"]},{"name":"data class ParseError(val file: KtFile, val errors: List<PsiErrorElement>) : IllegalArgumentException","description":"ktast.ast.psi.Parser.ParseError","location":"ast-psi/ktast.ast.psi/-parser/-parse-error/index.html","searchKeys":["ParseError","data class ParseError(val file: KtFile, val errors: List<PsiErrorElement>) : IllegalArgumentException","ktast.ast.psi.Parser.ParseError"]},{"name":"fun parseFile(code: String, throwOnError: Boolean = true): Node.KotlinFile","description":"ktast.ast.psi.Parser.parseFile","location":"ast-psi/ktast.ast.psi/-parser/parse-file.html","searchKeys":["parseFile","fun parseFile(code: String, throwOnError: Boolean = true): Node.KotlinFile","ktast.ast.psi.Parser.parseFile"]},{"name":"fun parsePsiFile(code: String): KtFile","description":"ktast.ast.psi.Parser.parsePsiFile","location":"ast-psi/ktast.ast.psi/-parser/parse-psi-file.html","searchKeys":["parsePsiFile","fun parsePsiFile(code: String): KtFile","ktast.ast.psi.Parser.parsePsiFile"]},{"name":"object Companion : Converter","description":"ktast.ast.psi.Converter.Companion","location":"ast-psi/ktast.ast.psi/-converter/-companion/index.html","searchKeys":["Companion","object Companion : Converter","ktast.ast.psi.Converter.Companion"]},{"name":"object Companion : Parser","description":"ktast.ast.psi.Parser.Companion","location":"ast-psi/ktast.ast.psi/-parser/-companion/index.html","searchKeys":["Companion","object Companion : Parser","ktast.ast.psi.Parser.Companion"]},{"name":"open class Converter","description":"ktast.ast.psi.Converter","location":"ast-psi/ktast.ast.psi/-converter/index.html","searchKeys":["Converter","open class Converter","ktast.ast.psi.Converter"]},{"name":"open class ConverterWithExtras : Converter, ExtrasMap","description":"ktast.ast.psi.ConverterWithExtras","location":"ast-psi/ktast.ast.psi/-converter-with-extras/index.html","searchKeys":["ConverterWithExtras","open class ConverterWithExtras : Converter, ExtrasMap","ktast.ast.psi.ConverterWithExtras"]},{"name":"open class Parser(val converter: Converter = Converter)","description":"ktast.ast.psi.Parser","location":"ast-psi/ktast.ast.psi/-parser/index.html","searchKeys":["Parser","open class Parser(val converter: Converter = Converter)","ktast.ast.psi.Parser"]},{"name":"open fun <T : Node.Keyword> convertKeyword(v: PsiElement, factory: () -> T): T","description":"ktast.ast.psi.Converter.convertKeyword","location":"ast-psi/ktast.ast.psi/-converter/convert-keyword.html","searchKeys":["convertKeyword","open fun <T : Node.Keyword> convertKeyword(v: PsiElement, factory: () -> T): T","ktast.ast.psi.Converter.convertKeyword"]},{"name":"open fun convertAnnotated(v: KtAnnotatedExpression): Node.AnnotatedExpression","description":"ktast.ast.psi.Converter.convertAnnotated","location":"ast-psi/ktast.ast.psi/-converter/convert-annotated.html","searchKeys":["convertAnnotated","open fun convertAnnotated(v: KtAnnotatedExpression): Node.AnnotatedExpression","ktast.ast.psi.Converter.convertAnnotated"]},{"name":"open fun convertAnnotationSet(v: KtAnnotation): Node.AnnotationSet","description":"ktast.ast.psi.Converter.convertAnnotationSet","location":"ast-psi/ktast.ast.psi/-converter/convert-annotation-set.html","searchKeys":["convertAnnotationSet","open fun convertAnnotationSet(v: KtAnnotation): Node.AnnotationSet","ktast.ast.psi.Converter.convertAnnotationSet"]},{"name":"open fun convertAnnotationSet(v: KtAnnotationEntry): Node.AnnotationSet","description":"ktast.ast.psi.Converter.convertAnnotationSet","location":"ast-psi/ktast.ast.psi/-converter/convert-annotation-set.html","searchKeys":["convertAnnotationSet","open fun convertAnnotationSet(v: KtAnnotationEntry): Node.AnnotationSet","ktast.ast.psi.Converter.convertAnnotationSet"]},{"name":"open fun convertAnnotationSetTarget(v: KtAnnotationUseSiteTarget): Node.AnnotationSet.Target","description":"ktast.ast.psi.Converter.convertAnnotationSetTarget","location":"ast-psi/ktast.ast.psi/-converter/convert-annotation-set-target.html","searchKeys":["convertAnnotationSetTarget","open fun convertAnnotationSetTarget(v: KtAnnotationUseSiteTarget): Node.AnnotationSet.Target","ktast.ast.psi.Converter.convertAnnotationSetTarget"]},{"name":"open fun convertAnnotationSets(v: KtElement): List<Node.AnnotationSet>","description":"ktast.ast.psi.Converter.convertAnnotationSets","location":"ast-psi/ktast.ast.psi/-converter/convert-annotation-sets.html","searchKeys":["convertAnnotationSets","open fun convertAnnotationSets(v: KtElement): List<Node.AnnotationSet>","ktast.ast.psi.Converter.convertAnnotationSets"]},{"name":"open fun convertAnnotationWithoutMapping(v: KtAnnotationEntry): Node.AnnotationSet.Annotation","description":"ktast.ast.psi.Converter.convertAnnotationWithoutMapping","location":"ast-psi/ktast.ast.psi/-converter/convert-annotation-without-mapping.html","searchKeys":["convertAnnotationWithoutMapping","open fun convertAnnotationWithoutMapping(v: KtAnnotationEntry): Node.AnnotationSet.Annotation","ktast.ast.psi.Converter.convertAnnotationWithoutMapping"]},{"name":"open fun convertAnonymousFunction(v: KtNamedFunction): Node.AnonymousFunctionExpression","description":"ktast.ast.psi.Converter.convertAnonymousFunction","location":"ast-psi/ktast.ast.psi/-converter/convert-anonymous-function.html","searchKeys":["convertAnonymousFunction","open fun convertAnonymousFunction(v: KtNamedFunction): Node.AnonymousFunctionExpression","ktast.ast.psi.Converter.convertAnonymousFunction"]},{"name":"open fun convertArrayAccess(v: KtArrayAccessExpression): Node.ArrayAccessExpression","description":"ktast.ast.psi.Converter.convertArrayAccess","location":"ast-psi/ktast.ast.psi/-converter/convert-array-access.html","searchKeys":["convertArrayAccess","open fun convertArrayAccess(v: KtArrayAccessExpression): Node.ArrayAccessExpression","ktast.ast.psi.Converter.convertArrayAccess"]},{"name":"open fun convertBinary(v: KtBinaryExpression): Node.BaseBinaryExpression","description":"ktast.ast.psi.Converter.convertBinary","location":"ast-psi/ktast.ast.psi/-converter/convert-binary.html","searchKeys":["convertBinary","open fun convertBinary(v: KtBinaryExpression): Node.BaseBinaryExpression","ktast.ast.psi.Converter.convertBinary"]},{"name":"open fun convertBinary(v: KtQualifiedExpression): Node.BinaryExpression","description":"ktast.ast.psi.Converter.convertBinary","location":"ast-psi/ktast.ast.psi/-converter/convert-binary.html","searchKeys":["convertBinary","open fun convertBinary(v: KtQualifiedExpression): Node.BinaryExpression","ktast.ast.psi.Converter.convertBinary"]},{"name":"open fun convertBinaryOperator(v: PsiElement): Node.BinaryExpression.Operator","description":"ktast.ast.psi.Converter.convertBinaryOperator","location":"ast-psi/ktast.ast.psi/-converter/convert-binary-operator.html","searchKeys":["convertBinaryOperator","open fun convertBinaryOperator(v: PsiElement): Node.BinaryExpression.Operator","ktast.ast.psi.Converter.convertBinaryOperator"]},{"name":"open fun convertBinaryType(v: KtBinaryExpressionWithTypeRHS): Node.BinaryTypeExpression","description":"ktast.ast.psi.Converter.convertBinaryType","location":"ast-psi/ktast.ast.psi/-converter/convert-binary-type.html","searchKeys":["convertBinaryType","open fun convertBinaryType(v: KtBinaryExpressionWithTypeRHS): Node.BinaryTypeExpression","ktast.ast.psi.Converter.convertBinaryType"]},{"name":"open fun convertBinaryType(v: KtIsExpression): Node.BinaryTypeExpression","description":"ktast.ast.psi.Converter.convertBinaryType","location":"ast-psi/ktast.ast.psi/-converter/convert-binary-type.html","searchKeys":["convertBinaryType","open fun convertBinaryType(v: KtIsExpression): Node.BinaryTypeExpression","ktast.ast.psi.Converter.convertBinaryType"]},{"name":"open fun convertBinaryTypeOperator(v: PsiElement): Node.BinaryTypeExpression.Operator","description":"ktast.ast.psi.Converter.convertBinaryTypeOperator","location":"ast-psi/ktast.ast.psi/-converter/convert-binary-type-operator.html","searchKeys":["convertBinaryTypeOperator","open fun convertBinaryTypeOperator(v: PsiElement): Node.BinaryTypeExpression.Operator","ktast.ast.psi.Converter.convertBinaryTypeOperator"]},{"name":"open fun convertBlock(v: KtBlockExpression): Node.BlockExpression","description":"ktast.ast.psi.Converter.convertBlock","location":"ast-psi/ktast.ast.psi/-converter/convert-block.html","searchKeys":["convertBlock","open fun convertBlock(v: KtBlockExpression): Node.BlockExpression","ktast.ast.psi.Converter.convertBlock"]},{"name":"open fun convertBreak(v: KtBreakExpression): Node.BreakExpression","description":"ktast.ast.psi.Converter.convertBreak","location":"ast-psi/ktast.ast.psi/-converter/convert-break.html","searchKeys":["convertBreak","open fun convertBreak(v: KtBreakExpression): Node.BreakExpression","ktast.ast.psi.Converter.convertBreak"]},{"name":"open fun convertCall(v: KtCallExpression): Node.CallExpression","description":"ktast.ast.psi.Converter.convertCall","location":"ast-psi/ktast.ast.psi/-converter/convert-call.html","searchKeys":["convertCall","open fun convertCall(v: KtCallExpression): Node.CallExpression","ktast.ast.psi.Converter.convertCall"]},{"name":"open fun convertCallLambdaArg(v: KtLambdaArgument): Node.CallExpression.LambdaArg","description":"ktast.ast.psi.Converter.convertCallLambdaArg","location":"ast-psi/ktast.ast.psi/-converter/convert-call-lambda-arg.html","searchKeys":["convertCallLambdaArg","open fun convertCallLambdaArg(v: KtLambdaArgument): Node.CallExpression.LambdaArg","ktast.ast.psi.Converter.convertCallLambdaArg"]},{"name":"open fun convertCallableReference(v: KtCallableReferenceExpression): Node.CallableReferenceExpression","description":"ktast.ast.psi.Converter.convertCallableReference","location":"ast-psi/ktast.ast.psi/-converter/convert-callable-reference.html","searchKeys":["convertCallableReference","open fun convertCallableReference(v: KtCallableReferenceExpression): Node.CallableReferenceExpression","ktast.ast.psi.Converter.convertCallableReference"]},{"name":"open fun convertClass(v: KtClassOrObject): Node.ClassDeclaration","description":"ktast.ast.psi.Converter.convertClass","location":"ast-psi/ktast.ast.psi/-converter/convert-class.html","searchKeys":["convertClass","open fun convertClass(v: KtClassOrObject): Node.ClassDeclaration","ktast.ast.psi.Converter.convertClass"]},{"name":"open fun convertClassBody(v: KtClassBody): Node.ClassDeclaration.ClassBody","description":"ktast.ast.psi.Converter.convertClassBody","location":"ast-psi/ktast.ast.psi/-converter/convert-class-body.html","searchKeys":["convertClassBody","open fun convertClassBody(v: KtClassBody): Node.ClassDeclaration.ClassBody","ktast.ast.psi.Converter.convertClassBody"]},{"name":"open fun convertClassLiteral(v: KtClassLiteralExpression): Node.ClassLiteralExpression","description":"ktast.ast.psi.Converter.convertClassLiteral","location":"ast-psi/ktast.ast.psi/-converter/convert-class-literal.html","searchKeys":["convertClassLiteral","open fun convertClassLiteral(v: KtClassLiteralExpression): Node.ClassLiteralExpression","ktast.ast.psi.Converter.convertClassLiteral"]},{"name":"open fun convertCollLit(v: KtCollectionLiteralExpression): Node.CollectionLiteralExpression","description":"ktast.ast.psi.Converter.convertCollLit","location":"ast-psi/ktast.ast.psi/-converter/convert-coll-lit.html","searchKeys":["convertCollLit","open fun convertCollLit(v: KtCollectionLiteralExpression): Node.CollectionLiteralExpression","ktast.ast.psi.Converter.convertCollLit"]},{"name":"open fun convertComma(v: PsiElement): Node.Keyword.Comma","description":"ktast.ast.psi.Converter.convertComma","location":"ast-psi/ktast.ast.psi/-converter/convert-comma.html","searchKeys":["convertComma","open fun convertComma(v: PsiElement): Node.Keyword.Comma","ktast.ast.psi.Converter.convertComma"]},{"name":"open fun convertConst(v: KtConstantExpression): Node.ConstantLiteralExpression","description":"ktast.ast.psi.Converter.convertConst","location":"ast-psi/ktast.ast.psi/-converter/convert-const.html","searchKeys":["convertConst","open fun convertConst(v: KtConstantExpression): Node.ConstantLiteralExpression","ktast.ast.psi.Converter.convertConst"]},{"name":"open fun convertContextReceiver(v: KtContextReceiver): Node.FunctionType.ContextReceiver","description":"ktast.ast.psi.Converter.convertContextReceiver","location":"ast-psi/ktast.ast.psi/-converter/convert-context-receiver.html","searchKeys":["convertContextReceiver","open fun convertContextReceiver(v: KtContextReceiver): Node.FunctionType.ContextReceiver","ktast.ast.psi.Converter.convertContextReceiver"]},{"name":"open fun convertContextReceivers(v: KtContextReceiverList): Node.FunctionType.ContextReceivers","description":"ktast.ast.psi.Converter.convertContextReceivers","location":"ast-psi/ktast.ast.psi/-converter/convert-context-receivers.html","searchKeys":["convertContextReceivers","open fun convertContextReceivers(v: KtContextReceiverList): Node.FunctionType.ContextReceivers","ktast.ast.psi.Converter.convertContextReceivers"]},{"name":"open fun convertContinue(v: KtContinueExpression): Node.ContinueExpression","description":"ktast.ast.psi.Converter.convertContinue","location":"ast-psi/ktast.ast.psi/-converter/convert-continue.html","searchKeys":["convertContinue","open fun convertContinue(v: KtContinueExpression): Node.ContinueExpression","ktast.ast.psi.Converter.convertContinue"]},{"name":"open fun convertContractEffect(v: KtContractEffect): Node.Contract.ContractEffect","description":"ktast.ast.psi.Converter.convertContractEffect","location":"ast-psi/ktast.ast.psi/-converter/convert-contract-effect.html","searchKeys":["convertContractEffect","open fun convertContractEffect(v: KtContractEffect): Node.Contract.ContractEffect","ktast.ast.psi.Converter.convertContractEffect"]},{"name":"open fun convertContractEffects(v: KtContractEffectList): Node.Contract.ContractEffects","description":"ktast.ast.psi.Converter.convertContractEffects","location":"ast-psi/ktast.ast.psi/-converter/convert-contract-effects.html","searchKeys":["convertContractEffects","open fun convertContractEffects(v: KtContractEffectList): Node.Contract.ContractEffects","ktast.ast.psi.Converter.convertContractEffects"]},{"name":"open fun convertDeclaration(v: KtDeclaration): Node.Declaration","description":"ktast.ast.psi.Converter.convertDeclaration","location":"ast-psi/ktast.ast.psi/-converter/convert-declaration.html","searchKeys":["convertDeclaration","open fun convertDeclaration(v: KtDeclaration): Node.Declaration","ktast.ast.psi.Converter.convertDeclaration"]},{"name":"open fun convertDeclarationKeyword(v: PsiElement): Node.ClassDeclaration.DeclarationKeyword","description":"ktast.ast.psi.Converter.convertDeclarationKeyword","location":"ast-psi/ktast.ast.psi/-converter/convert-declaration-keyword.html","searchKeys":["convertDeclarationKeyword","open fun convertDeclarationKeyword(v: PsiElement): Node.ClassDeclaration.DeclarationKeyword","ktast.ast.psi.Converter.convertDeclarationKeyword"]},{"name":"open fun convertDoubleColonReceiver(v: KtExpression, questionMarks: List<Node.Keyword.Question>): Node.DoubleColonExpression.Receiver","description":"ktast.ast.psi.Converter.convertDoubleColonReceiver","location":"ast-psi/ktast.ast.psi/-converter/convert-double-colon-receiver.html","searchKeys":["convertDoubleColonReceiver","open fun convertDoubleColonReceiver(v: KtExpression, questionMarks: List<Node.Keyword.Question>): Node.DoubleColonExpression.Receiver","ktast.ast.psi.Converter.convertDoubleColonReceiver"]},{"name":"open fun convertEnumEntry(v: KtEnumEntry): Node.ClassDeclaration.ClassBody.EnumEntry","description":"ktast.ast.psi.Converter.convertEnumEntry","location":"ast-psi/ktast.ast.psi/-converter/convert-enum-entry.html","searchKeys":["convertEnumEntry","open fun convertEnumEntry(v: KtEnumEntry): Node.ClassDeclaration.ClassBody.EnumEntry","ktast.ast.psi.Converter.convertEnumEntry"]},{"name":"open fun convertExpression(v: KtExpression): Node.Expression","description":"ktast.ast.psi.Converter.convertExpression","location":"ast-psi/ktast.ast.psi/-converter/convert-expression.html","searchKeys":["convertExpression","open fun convertExpression(v: KtExpression): Node.Expression","ktast.ast.psi.Converter.convertExpression"]},{"name":"open fun convertExpressionContainer(v: KtContainerNode): Node.ExpressionContainer","description":"ktast.ast.psi.Converter.convertExpressionContainer","location":"ast-psi/ktast.ast.psi/-converter/convert-expression-container.html","searchKeys":["convertExpressionContainer","open fun convertExpressionContainer(v: KtContainerNode): Node.ExpressionContainer","ktast.ast.psi.Converter.convertExpressionContainer"]},{"name":"open fun convertFor(v: KtForExpression): Node.ForExpression","description":"ktast.ast.psi.Converter.convertFor","location":"ast-psi/ktast.ast.psi/-converter/convert-for.html","searchKeys":["convertFor","open fun convertFor(v: KtForExpression): Node.ForExpression","ktast.ast.psi.Converter.convertFor"]},{"name":"open fun convertFuncParam(v: KtParameter): Node.FunctionParam","description":"ktast.ast.psi.Converter.convertFuncParam","location":"ast-psi/ktast.ast.psi/-converter/convert-func-param.html","searchKeys":["convertFuncParam","open fun convertFuncParam(v: KtParameter): Node.FunctionParam","ktast.ast.psi.Converter.convertFuncParam"]},{"name":"open fun convertFuncParams(v: KtParameterList): Node.FunctionParams","description":"ktast.ast.psi.Converter.convertFuncParams","location":"ast-psi/ktast.ast.psi/-converter/convert-func-params.html","searchKeys":["convertFuncParams","open fun convertFuncParams(v: KtParameterList): Node.FunctionParams","ktast.ast.psi.Converter.convertFuncParams"]},{"name":"open fun convertFunction(v: KtNamedFunction): Node.FunctionDeclaration","description":"ktast.ast.psi.Converter.convertFunction","location":"ast-psi/ktast.ast.psi/-converter/convert-function.html","searchKeys":["convertFunction","open fun convertFunction(v: KtNamedFunction): Node.FunctionDeclaration","ktast.ast.psi.Converter.convertFunction"]},{"name":"open fun convertIf(v: KtIfExpression): Node.IfExpression","description":"ktast.ast.psi.Converter.convertIf","location":"ast-psi/ktast.ast.psi/-converter/convert-if.html","searchKeys":["convertIf","open fun convertIf(v: KtIfExpression): Node.IfExpression","ktast.ast.psi.Converter.convertIf"]},{"name":"open fun convertImportAlias(v: KtImportAlias): Node.ImportDirective.ImportAlias","description":"ktast.ast.psi.Converter.convertImportAlias","location":"ast-psi/ktast.ast.psi/-converter/convert-import-alias.html","searchKeys":["convertImportAlias","open fun convertImportAlias(v: KtImportAlias): Node.ImportDirective.ImportAlias","ktast.ast.psi.Converter.convertImportAlias"]},{"name":"open fun convertImportDirective(v: KtImportDirective): Node.ImportDirective","description":"ktast.ast.psi.Converter.convertImportDirective","location":"ast-psi/ktast.ast.psi/-converter/convert-import-directive.html","searchKeys":["convertImportDirective","open fun convertImportDirective(v: KtImportDirective): Node.ImportDirective","ktast.ast.psi.Converter.convertImportDirective"]},{"name":"open fun convertImportDirectives(v: KtImportList): Node.ImportDirectives?","description":"ktast.ast.psi.Converter.convertImportDirectives","location":"ast-psi/ktast.ast.psi/-converter/convert-import-directives.html","searchKeys":["convertImportDirectives","open fun convertImportDirectives(v: KtImportList): Node.ImportDirectives?","ktast.ast.psi.Converter.convertImportDirectives"]},{"name":"open fun convertImportNames(v: KtExpression): List<Node.NameExpression>","description":"ktast.ast.psi.Converter.convertImportNames","location":"ast-psi/ktast.ast.psi/-converter/convert-import-names.html","searchKeys":["convertImportNames","open fun convertImportNames(v: KtExpression): List<Node.NameExpression>","ktast.ast.psi.Converter.convertImportNames"]},{"name":"open fun convertInit(v: KtAnonymousInitializer): Node.InitDeclaration","description":"ktast.ast.psi.Converter.convertInit","location":"ast-psi/ktast.ast.psi/-converter/convert-init.html","searchKeys":["convertInit","open fun convertInit(v: KtAnonymousInitializer): Node.InitDeclaration","ktast.ast.psi.Converter.convertInit"]},{"name":"open fun convertKeywordModifier(v: PsiElement): Node.KeywordModifier","description":"ktast.ast.psi.Converter.convertKeywordModifier","location":"ast-psi/ktast.ast.psi/-converter/convert-keyword-modifier.html","searchKeys":["convertKeywordModifier","open fun convertKeywordModifier(v: PsiElement): Node.KeywordModifier","ktast.ast.psi.Converter.convertKeywordModifier"]},{"name":"open fun convertKotlinFile(v: KtFile): Node.KotlinFile","description":"ktast.ast.psi.Converter.convertKotlinFile","location":"ast-psi/ktast.ast.psi/-converter/convert-kotlin-file.html","searchKeys":["convertKotlinFile","open fun convertKotlinFile(v: KtFile): Node.KotlinFile","ktast.ast.psi.Converter.convertKotlinFile"]},{"name":"open fun convertLabeled(v: KtLabeledExpression): Node.LabeledExpression","description":"ktast.ast.psi.Converter.convertLabeled","location":"ast-psi/ktast.ast.psi/-converter/convert-labeled.html","searchKeys":["convertLabeled","open fun convertLabeled(v: KtLabeledExpression): Node.LabeledExpression","ktast.ast.psi.Converter.convertLabeled"]},{"name":"open fun convertLambda(v: KtLambdaExpression): Node.LambdaExpression","description":"ktast.ast.psi.Converter.convertLambda","location":"ast-psi/ktast.ast.psi/-converter/convert-lambda.html","searchKeys":["convertLambda","open fun convertLambda(v: KtLambdaExpression): Node.LambdaExpression","ktast.ast.psi.Converter.convertLambda"]},{"name":"open fun convertLambdaBody(v: KtBlockExpression): Node.LambdaExpression.LambdaBody","description":"ktast.ast.psi.Converter.convertLambdaBody","location":"ast-psi/ktast.ast.psi/-converter/convert-lambda-body.html","searchKeys":["convertLambdaBody","open fun convertLambdaBody(v: KtBlockExpression): Node.LambdaExpression.LambdaBody","ktast.ast.psi.Converter.convertLambdaBody"]},{"name":"open fun convertLambdaParam(v: KtParameter): Node.LambdaParam","description":"ktast.ast.psi.Converter.convertLambdaParam","location":"ast-psi/ktast.ast.psi/-converter/convert-lambda-param.html","searchKeys":["convertLambdaParam","open fun convertLambdaParam(v: KtParameter): Node.LambdaParam","ktast.ast.psi.Converter.convertLambdaParam"]},{"name":"open fun convertLambdaParamVariable(v: KtDestructuringDeclarationEntry): Node.LambdaParam.Variable","description":"ktast.ast.psi.Converter.convertLambdaParamVariable","location":"ast-psi/ktast.ast.psi/-converter/convert-lambda-param-variable.html","searchKeys":["convertLambdaParamVariable","open fun convertLambdaParamVariable(v: KtDestructuringDeclarationEntry): Node.LambdaParam.Variable","ktast.ast.psi.Converter.convertLambdaParamVariable"]},{"name":"open fun convertLambdaParams(v: KtParameterList): Node.LambdaParams","description":"ktast.ast.psi.Converter.convertLambdaParams","location":"ast-psi/ktast.ast.psi/-converter/convert-lambda-params.html","searchKeys":["convertLambdaParams","open fun convertLambdaParams(v: KtParameterList): Node.LambdaParams","ktast.ast.psi.Converter.convertLambdaParams"]},{"name":"open fun convertModifiers(v: KtModifierList): Node.Modifiers","description":"ktast.ast.psi.Converter.convertModifiers","location":"ast-psi/ktast.ast.psi/-converter/convert-modifiers.html","searchKeys":["convertModifiers","open fun convertModifiers(v: KtModifierList): Node.Modifiers","ktast.ast.psi.Converter.convertModifiers"]},{"name":"open fun convertName(v: KtSimpleNameExpression): Node.NameExpression","description":"ktast.ast.psi.Converter.convertName","location":"ast-psi/ktast.ast.psi/-converter/convert-name.html","searchKeys":["convertName","open fun convertName(v: KtSimpleNameExpression): Node.NameExpression","ktast.ast.psi.Converter.convertName"]},{"name":"open fun convertName(v: PsiElement): Node.NameExpression","description":"ktast.ast.psi.Converter.convertName","location":"ast-psi/ktast.ast.psi/-converter/convert-name.html","searchKeys":["convertName","open fun convertName(v: PsiElement): Node.NameExpression","ktast.ast.psi.Converter.convertName"]},{"name":"open fun convertObject(v: KtObjectLiteralExpression): Node.ObjectLiteralExpression","description":"ktast.ast.psi.Converter.convertObject","location":"ast-psi/ktast.ast.psi/-converter/convert-object.html","searchKeys":["convertObject","open fun convertObject(v: KtObjectLiteralExpression): Node.ObjectLiteralExpression","ktast.ast.psi.Converter.convertObject"]},{"name":"open fun convertPackageDirective(v: KtPackageDirective): Node.PackageDirective","description":"ktast.ast.psi.Converter.convertPackageDirective","location":"ast-psi/ktast.ast.psi/-converter/convert-package-directive.html","searchKeys":["convertPackageDirective","open fun convertPackageDirective(v: KtPackageDirective): Node.PackageDirective","ktast.ast.psi.Converter.convertPackageDirective"]},{"name":"open fun convertParent(v: KtSuperTypeListEntry): Node.ClassDeclaration.ClassParent","description":"ktast.ast.psi.Converter.convertParent","location":"ast-psi/ktast.ast.psi/-converter/convert-parent.html","searchKeys":["convertParent","open fun convertParent(v: KtSuperTypeListEntry): Node.ClassDeclaration.ClassParent","ktast.ast.psi.Converter.convertParent"]},{"name":"open fun convertParenthesized(v: KtParenthesizedExpression): Node.ParenthesizedExpression","description":"ktast.ast.psi.Converter.convertParenthesized","location":"ast-psi/ktast.ast.psi/-converter/convert-parenthesized.html","searchKeys":["convertParenthesized","open fun convertParenthesized(v: KtParenthesizedExpression): Node.ParenthesizedExpression","ktast.ast.psi.Converter.convertParenthesized"]},{"name":"open fun convertParents(v: KtSuperTypeList): Node.ClassDeclaration.ClassParents","description":"ktast.ast.psi.Converter.convertParents","location":"ast-psi/ktast.ast.psi/-converter/convert-parents.html","searchKeys":["convertParents","open fun convertParents(v: KtSuperTypeList): Node.ClassDeclaration.ClassParents","ktast.ast.psi.Converter.convertParents"]},{"name":"open fun convertPostModifiers(v: KtElement): List<Node.PostModifier>","description":"ktast.ast.psi.Converter.convertPostModifiers","location":"ast-psi/ktast.ast.psi/-converter/convert-post-modifiers.html","searchKeys":["convertPostModifiers","open fun convertPostModifiers(v: KtElement): List<Node.PostModifier>","ktast.ast.psi.Converter.convertPostModifiers"]},{"name":"open fun convertPrimaryConstructor(v: KtPrimaryConstructor): Node.ClassDeclaration.PrimaryConstructor","description":"ktast.ast.psi.Converter.convertPrimaryConstructor","location":"ast-psi/ktast.ast.psi/-converter/convert-primary-constructor.html","searchKeys":["convertPrimaryConstructor","open fun convertPrimaryConstructor(v: KtPrimaryConstructor): Node.ClassDeclaration.PrimaryConstructor","ktast.ast.psi.Converter.convertPrimaryConstructor"]},{"name":"open fun convertProperty(v: KtDestructuringDeclaration): Node.PropertyDeclaration","description":"ktast.ast.psi.Converter.convertProperty","location":"ast-psi/ktast.ast.psi/-converter/convert-property.html","searchKeys":["convertProperty","open fun convertProperty(v: KtDestructuringDeclaration): Node.PropertyDeclaration","ktast.ast.psi.Converter.convertProperty"]},{"name":"open fun convertProperty(v: KtProperty): Node.PropertyDeclaration","description":"ktast.ast.psi.Converter.convertProperty","location":"ast-psi/ktast.ast.psi/-converter/convert-property.html","searchKeys":["convertProperty","open fun convertProperty(v: KtProperty): Node.PropertyDeclaration","ktast.ast.psi.Converter.convertProperty"]},{"name":"open fun convertPropertyAccessor(v: KtPropertyAccessor): Node.PropertyDeclaration.Accessor","description":"ktast.ast.psi.Converter.convertPropertyAccessor","location":"ast-psi/ktast.ast.psi/-converter/convert-property-accessor.html","searchKeys":["convertPropertyAccessor","open fun convertPropertyAccessor(v: KtPropertyAccessor): Node.PropertyDeclaration.Accessor","ktast.ast.psi.Converter.convertPropertyAccessor"]},{"name":"open fun convertPropertyDelegate(v: KtPropertyDelegate): Node.PropertyDeclaration.PropertyDelegate","description":"ktast.ast.psi.Converter.convertPropertyDelegate","location":"ast-psi/ktast.ast.psi/-converter/convert-property-delegate.html","searchKeys":["convertPropertyDelegate","open fun convertPropertyDelegate(v: KtPropertyDelegate): Node.PropertyDeclaration.PropertyDelegate","ktast.ast.psi.Converter.convertPropertyDelegate"]},{"name":"open fun convertPropertyExpr(v: KtDestructuringDeclaration): Node.PropertyExpression","description":"ktast.ast.psi.Converter.convertPropertyExpr","location":"ast-psi/ktast.ast.psi/-converter/convert-property-expr.html","searchKeys":["convertPropertyExpr","open fun convertPropertyExpr(v: KtDestructuringDeclaration): Node.PropertyExpression","ktast.ast.psi.Converter.convertPropertyExpr"]},{"name":"open fun convertPropertyExpr(v: KtProperty): Node.PropertyExpression","description":"ktast.ast.psi.Converter.convertPropertyExpr","location":"ast-psi/ktast.ast.psi/-converter/convert-property-expr.html","searchKeys":["convertPropertyExpr","open fun convertPropertyExpr(v: KtProperty): Node.PropertyExpression","ktast.ast.psi.Converter.convertPropertyExpr"]},{"name":"open fun convertPropertyVariable(v: KtDestructuringDeclarationEntry): Node.Variable","description":"ktast.ast.psi.Converter.convertPropertyVariable","location":"ast-psi/ktast.ast.psi/-converter/convert-property-variable.html","searchKeys":["convertPropertyVariable","open fun convertPropertyVariable(v: KtDestructuringDeclarationEntry): Node.Variable","ktast.ast.psi.Converter.convertPropertyVariable"]},{"name":"open fun convertReturn(v: KtReturnExpression): Node.ReturnExpression","description":"ktast.ast.psi.Converter.convertReturn","location":"ast-psi/ktast.ast.psi/-converter/convert-return.html","searchKeys":["convertReturn","open fun convertReturn(v: KtReturnExpression): Node.ReturnExpression","ktast.ast.psi.Converter.convertReturn"]},{"name":"open fun convertSecondaryConstructor(v: KtSecondaryConstructor): Node.SecondaryConstructorDeclaration","description":"ktast.ast.psi.Converter.convertSecondaryConstructor","location":"ast-psi/ktast.ast.psi/-converter/convert-secondary-constructor.html","searchKeys":["convertSecondaryConstructor","open fun convertSecondaryConstructor(v: KtSecondaryConstructor): Node.SecondaryConstructorDeclaration","ktast.ast.psi.Converter.convertSecondaryConstructor"]},{"name":"open fun convertSecondaryConstructorDelegationCall(v: KtConstructorDelegationCall): Node.SecondaryConstructorDeclaration.DelegationCall","description":"ktast.ast.psi.Converter.convertSecondaryConstructorDelegationCall","location":"ast-psi/ktast.ast.psi/-converter/convert-secondary-constructor-delegation-call.html","searchKeys":["convertSecondaryConstructorDelegationCall","open fun convertSecondaryConstructorDelegationCall(v: KtConstructorDelegationCall): Node.SecondaryConstructorDeclaration.DelegationCall","ktast.ast.psi.Converter.convertSecondaryConstructorDelegationCall"]},{"name":"open fun convertStatement(v: KtExpression): Node.Statement","description":"ktast.ast.psi.Converter.convertStatement","location":"ast-psi/ktast.ast.psi/-converter/convert-statement.html","searchKeys":["convertStatement","open fun convertStatement(v: KtExpression): Node.Statement","ktast.ast.psi.Converter.convertStatement"]},{"name":"open fun convertStringTemplate(v: KtStringTemplateExpression): Node.StringLiteralExpression","description":"ktast.ast.psi.Converter.convertStringTemplate","location":"ast-psi/ktast.ast.psi/-converter/convert-string-template.html","searchKeys":["convertStringTemplate","open fun convertStringTemplate(v: KtStringTemplateExpression): Node.StringLiteralExpression","ktast.ast.psi.Converter.convertStringTemplate"]},{"name":"open fun convertStringTemplateEntry(v: KtStringTemplateEntry): Node.StringLiteralExpression.Entry","description":"ktast.ast.psi.Converter.convertStringTemplateEntry","location":"ast-psi/ktast.ast.psi/-converter/convert-string-template-entry.html","searchKeys":["convertStringTemplateEntry","open fun convertStringTemplateEntry(v: KtStringTemplateEntry): Node.StringLiteralExpression.Entry","ktast.ast.psi.Converter.convertStringTemplateEntry"]},{"name":"open fun convertSuper(v: KtSuperExpression): Node.SuperExpression","description":"ktast.ast.psi.Converter.convertSuper","location":"ast-psi/ktast.ast.psi/-converter/convert-super.html","searchKeys":["convertSuper","open fun convertSuper(v: KtSuperExpression): Node.SuperExpression","ktast.ast.psi.Converter.convertSuper"]},{"name":"open fun convertThis(v: KtThisExpression): Node.ThisExpression","description":"ktast.ast.psi.Converter.convertThis","location":"ast-psi/ktast.ast.psi/-converter/convert-this.html","searchKeys":["convertThis","open fun convertThis(v: KtThisExpression): Node.ThisExpression","ktast.ast.psi.Converter.convertThis"]},{"name":"open fun convertThrow(v: KtThrowExpression): Node.ThrowExpression","description":"ktast.ast.psi.Converter.convertThrow","location":"ast-psi/ktast.ast.psi/-converter/convert-throw.html","searchKeys":["convertThrow","open fun convertThrow(v: KtThrowExpression): Node.ThrowExpression","ktast.ast.psi.Converter.convertThrow"]},{"name":"open fun convertTry(v: KtTryExpression): Node.TryExpression","description":"ktast.ast.psi.Converter.convertTry","location":"ast-psi/ktast.ast.psi/-converter/convert-try.html","searchKeys":["convertTry","open fun convertTry(v: KtTryExpression): Node.TryExpression","ktast.ast.psi.Converter.convertTry"]},{"name":"open fun convertTryCatch(v: KtCatchClause): Node.TryExpression.CatchClause","description":"ktast.ast.psi.Converter.convertTryCatch","location":"ast-psi/ktast.ast.psi/-converter/convert-try-catch.html","searchKeys":["convertTryCatch","open fun convertTryCatch(v: KtCatchClause): Node.TryExpression.CatchClause","ktast.ast.psi.Converter.convertTryCatch"]},{"name":"open fun convertType(v: KtTypeElement, lPar: PsiElement? = null, modifierList: KtModifierList? = null, rPar: PsiElement? = null): Node.Type","description":"ktast.ast.psi.Converter.convertType","location":"ast-psi/ktast.ast.psi/-converter/convert-type.html","searchKeys":["convertType","open fun convertType(v: KtTypeElement, lPar: PsiElement? = null, modifierList: KtModifierList? = null, rPar: PsiElement? = null): Node.Type","ktast.ast.psi.Converter.convertType"]},{"name":"open fun convertTypeAlias(v: KtTypeAlias): Node.TypeAliasDeclaration","description":"ktast.ast.psi.Converter.convertTypeAlias","location":"ast-psi/ktast.ast.psi/-converter/convert-type-alias.html","searchKeys":["convertTypeAlias","open fun convertTypeAlias(v: KtTypeAlias): Node.TypeAliasDeclaration","ktast.ast.psi.Converter.convertTypeAlias"]},{"name":"open fun convertTypeArg(v: KtTypeProjection): Node.TypeArg","description":"ktast.ast.psi.Converter.convertTypeArg","location":"ast-psi/ktast.ast.psi/-converter/convert-type-arg.html","searchKeys":["convertTypeArg","open fun convertTypeArg(v: KtTypeProjection): Node.TypeArg","ktast.ast.psi.Converter.convertTypeArg"]},{"name":"open fun convertTypeArgs(v: KtTypeArgumentList): Node.TypeArgs","description":"ktast.ast.psi.Converter.convertTypeArgs","location":"ast-psi/ktast.ast.psi/-converter/convert-type-args.html","searchKeys":["convertTypeArgs","open fun convertTypeArgs(v: KtTypeArgumentList): Node.TypeArgs","ktast.ast.psi.Converter.convertTypeArgs"]},{"name":"open fun convertTypeConstraint(v: KtTypeConstraint): Node.TypeConstraintSet.TypeConstraint","description":"ktast.ast.psi.Converter.convertTypeConstraint","location":"ast-psi/ktast.ast.psi/-converter/convert-type-constraint.html","searchKeys":["convertTypeConstraint","open fun convertTypeConstraint(v: KtTypeConstraint): Node.TypeConstraintSet.TypeConstraint","ktast.ast.psi.Converter.convertTypeConstraint"]},{"name":"open fun convertTypeConstraints(v: KtTypeConstraintList): Node.TypeConstraintSet.TypeConstraints","description":"ktast.ast.psi.Converter.convertTypeConstraints","location":"ast-psi/ktast.ast.psi/-converter/convert-type-constraints.html","searchKeys":["convertTypeConstraints","open fun convertTypeConstraints(v: KtTypeConstraintList): Node.TypeConstraintSet.TypeConstraints","ktast.ast.psi.Converter.convertTypeConstraints"]},{"name":"open fun convertTypeFunctionParam(v: KtParameter): Node.FunctionType.Param","description":"ktast.ast.psi.Converter.convertTypeFunctionParam","location":"ast-psi/ktast.ast.psi/-converter/convert-type-function-param.html","searchKeys":["convertTypeFunctionParam","open fun convertTypeFunctionParam(v: KtParameter): Node.FunctionType.Param","ktast.ast.psi.Converter.convertTypeFunctionParam"]},{"name":"open fun convertTypeFunctionParams(v: KtParameterList): Node.FunctionType.Params","description":"ktast.ast.psi.Converter.convertTypeFunctionParams","location":"ast-psi/ktast.ast.psi/-converter/convert-type-function-params.html","searchKeys":["convertTypeFunctionParams","open fun convertTypeFunctionParams(v: KtParameterList): Node.FunctionType.Params","ktast.ast.psi.Converter.convertTypeFunctionParams"]},{"name":"open fun convertTypeFunctionReceiver(v: KtFunctionTypeReceiver): Node.FunctionType.FunctionTypeReceiver","description":"ktast.ast.psi.Converter.convertTypeFunctionReceiver","location":"ast-psi/ktast.ast.psi/-converter/convert-type-function-receiver.html","searchKeys":["convertTypeFunctionReceiver","open fun convertTypeFunctionReceiver(v: KtFunctionTypeReceiver): Node.FunctionType.FunctionTypeReceiver","ktast.ast.psi.Converter.convertTypeFunctionReceiver"]},{"name":"open fun convertTypeParam(v: KtTypeParameter): Node.TypeParam","description":"ktast.ast.psi.Converter.convertTypeParam","location":"ast-psi/ktast.ast.psi/-converter/convert-type-param.html","searchKeys":["convertTypeParam","open fun convertTypeParam(v: KtTypeParameter): Node.TypeParam","ktast.ast.psi.Converter.convertTypeParam"]},{"name":"open fun convertTypeParams(v: KtTypeParameterList): Node.TypeParams","description":"ktast.ast.psi.Converter.convertTypeParams","location":"ast-psi/ktast.ast.psi/-converter/convert-type-params.html","searchKeys":["convertTypeParams","open fun convertTypeParams(v: KtTypeParameterList): Node.TypeParams","ktast.ast.psi.Converter.convertTypeParams"]},{"name":"open fun convertTypeRef(v: KtTypeReference): Node.TypeRef","description":"ktast.ast.psi.Converter.convertTypeRef","location":"ast-psi/ktast.ast.psi/-converter/convert-type-ref.html","searchKeys":["convertTypeRef","open fun convertTypeRef(v: KtTypeReference): Node.TypeRef","ktast.ast.psi.Converter.convertTypeRef"]},{"name":"open fun convertTypeSimpleQualifier(v: KtUserType): Node.SimpleType.Qualifier","description":"ktast.ast.psi.Converter.convertTypeSimpleQualifier","location":"ast-psi/ktast.ast.psi/-converter/convert-type-simple-qualifier.html","searchKeys":["convertTypeSimpleQualifier","open fun convertTypeSimpleQualifier(v: KtUserType): Node.SimpleType.Qualifier","ktast.ast.psi.Converter.convertTypeSimpleQualifier"]},{"name":"open fun convertUnary(v: KtUnaryExpression): Node.UnaryExpression","description":"ktast.ast.psi.Converter.convertUnary","location":"ast-psi/ktast.ast.psi/-converter/convert-unary.html","searchKeys":["convertUnary","open fun convertUnary(v: KtUnaryExpression): Node.UnaryExpression","ktast.ast.psi.Converter.convertUnary"]},{"name":"open fun convertUnaryOperator(v: PsiElement): Node.UnaryExpression.Operator","description":"ktast.ast.psi.Converter.convertUnaryOperator","location":"ast-psi/ktast.ast.psi/-converter/convert-unary-operator.html","searchKeys":["convertUnaryOperator","open fun convertUnaryOperator(v: PsiElement): Node.UnaryExpression.Operator","ktast.ast.psi.Converter.convertUnaryOperator"]},{"name":"open fun convertValOrVar(v: PsiElement): Node.PropertyDeclaration.ValOrVar","description":"ktast.ast.psi.Converter.convertValOrVar","location":"ast-psi/ktast.ast.psi/-converter/convert-val-or-var.html","searchKeys":["convertValOrVar","open fun convertValOrVar(v: PsiElement): Node.PropertyDeclaration.ValOrVar","ktast.ast.psi.Converter.convertValOrVar"]},{"name":"open fun convertValueArg(v: KtValueArgument): Node.ValueArg","description":"ktast.ast.psi.Converter.convertValueArg","location":"ast-psi/ktast.ast.psi/-converter/convert-value-arg.html","searchKeys":["convertValueArg","open fun convertValueArg(v: KtValueArgument): Node.ValueArg","ktast.ast.psi.Converter.convertValueArg"]},{"name":"open fun convertValueArgName(v: KtValueArgumentName): Node.NameExpression","description":"ktast.ast.psi.Converter.convertValueArgName","location":"ast-psi/ktast.ast.psi/-converter/convert-value-arg-name.html","searchKeys":["convertValueArgName","open fun convertValueArgName(v: KtValueArgumentName): Node.NameExpression","ktast.ast.psi.Converter.convertValueArgName"]},{"name":"open fun convertValueArgs(v: KtInitializerList): Node.ValueArgs","description":"ktast.ast.psi.Converter.convertValueArgs","location":"ast-psi/ktast.ast.psi/-converter/convert-value-args.html","searchKeys":["convertValueArgs","open fun convertValueArgs(v: KtInitializerList): Node.ValueArgs","ktast.ast.psi.Converter.convertValueArgs"]},{"name":"open fun convertValueArgs(v: KtValueArgumentList): Node.ValueArgs","description":"ktast.ast.psi.Converter.convertValueArgs","location":"ast-psi/ktast.ast.psi/-converter/convert-value-args.html","searchKeys":["convertValueArgs","open fun convertValueArgs(v: KtValueArgumentList): Node.ValueArgs","ktast.ast.psi.Converter.convertValueArgs"]},{"name":"open fun convertWhen(v: KtWhenExpression): Node.WhenExpression","description":"ktast.ast.psi.Converter.convertWhen","location":"ast-psi/ktast.ast.psi/-converter/convert-when.html","searchKeys":["convertWhen","open fun convertWhen(v: KtWhenExpression): Node.WhenExpression","ktast.ast.psi.Converter.convertWhen"]},{"name":"open fun convertWhenCondition(v: KtWhenCondition): Node.WhenExpression.WhenCondition","description":"ktast.ast.psi.Converter.convertWhenCondition","location":"ast-psi/ktast.ast.psi/-converter/convert-when-condition.html","searchKeys":["convertWhenCondition","open fun convertWhenCondition(v: KtWhenCondition): Node.WhenExpression.WhenCondition","ktast.ast.psi.Converter.convertWhenCondition"]},{"name":"open fun convertWhenEntry(v: KtWhenEntry): Node.WhenExpression.WhenBranch","description":"ktast.ast.psi.Converter.convertWhenEntry","location":"ast-psi/ktast.ast.psi/-converter/convert-when-entry.html","searchKeys":["convertWhenEntry","open fun convertWhenEntry(v: KtWhenEntry): Node.WhenExpression.WhenBranch","ktast.ast.psi.Converter.convertWhenEntry"]},{"name":"open fun convertWhile(v: KtWhileExpressionBase): Node.WhileExpression","description":"ktast.ast.psi.Converter.convertWhile","location":"ast-psi/ktast.ast.psi/-converter/convert-while.html","searchKeys":["convertWhile","open fun convertWhile(v: KtWhileExpressionBase): Node.WhileExpression","ktast.ast.psi.Converter.convertWhile"]},{"name":"open override fun extrasAfter(v: Node): List<Node.Extra>","description":"ktast.ast.psi.ConverterWithExtras.extrasAfter","location":"ast-psi/ktast.ast.psi/-converter-with-extras/extras-after.html","searchKeys":["extrasAfter","open override fun extrasAfter(v: Node): List<Node.Extra>","ktast.ast.psi.ConverterWithExtras.extrasAfter"]},{"name":"open override fun extrasBefore(v: Node): List<Node.Extra>","description":"ktast.ast.psi.ConverterWithExtras.extrasBefore","location":"ast-psi/ktast.ast.psi/-converter-with-extras/extras-before.html","searchKeys":["extrasBefore","open override fun extrasBefore(v: Node): List<Node.Extra>","ktast.ast.psi.ConverterWithExtras.extrasBefore"]},{"name":"open override fun extrasWithin(v: Node): List<Node.Extra>","description":"ktast.ast.psi.ConverterWithExtras.extrasWithin","location":"ast-psi/ktast.ast.psi/-converter-with-extras/extras-within.html","searchKeys":["extrasWithin","open override fun extrasWithin(v: Node): List<Node.Extra>","ktast.ast.psi.ConverterWithExtras.extrasWithin"]},{"name":"open override fun moveExtras(fromNode: Node, toNode: Node)","description":"ktast.ast.psi.ConverterWithMutableExtras.moveExtras","location":"ast-psi/ktast.ast.psi/-converter-with-mutable-extras/move-extras.html","searchKeys":["moveExtras","open override fun moveExtras(fromNode: Node, toNode: Node)","ktast.ast.psi.ConverterWithMutableExtras.moveExtras"]},{"name":"val converter: Converter","description":"ktast.ast.psi.Parser.converter","location":"ast-psi/ktast.ast.psi/-parser/converter.html","searchKeys":["converter","val converter: Converter","ktast.ast.psi.Parser.converter"]},{"name":"val errors: List<PsiErrorElement>","description":"ktast.ast.psi.Parser.ParseError.errors","location":"ast-psi/ktast.ast.psi/-parser/-parse-error/errors.html","searchKeys":["errors","val errors: List<PsiErrorElement>","ktast.ast.psi.Parser.ParseError.errors"]},{"name":"val file: KtFile","description":"ktast.ast.psi.Parser.ParseError.file","location":"ast-psi/ktast.ast.psi/-parser/-parse-error/file.html","searchKeys":["file","val file: KtFile","ktast.ast.psi.Parser.ParseError.file"]}]