[{"name":"AFTER","description":"ktast.ast.Dumper.ExtraType.AFTER","location":"ast/ktast.ast/-dumper/-extra-type/-a-f-t-e-r/index.html","searchKeys":["AFTER","AFTER","ktast.ast.Dumper.ExtraType.AFTER"]},{"name":"BEFORE","description":"ktast.ast.Dumper.ExtraType.BEFORE","location":"ast/ktast.ast/-dumper/-extra-type/-b-e-f-o-r-e/index.html","searchKeys":["BEFORE","BEFORE","ktast.ast.Dumper.ExtraType.BEFORE"]},{"name":"WITHIN","description":"ktast.ast.Dumper.ExtraType.WITHIN","location":"ast/ktast.ast/-dumper/-extra-type/-w-i-t-h-i-n/index.html","searchKeys":["WITHIN","WITHIN","ktast.ast.Dumper.ExtraType.WITHIN"]},{"name":"abstract class CommaSeparatedNodeList<out E : Node> : Node.NodeList<E> ","description":"ktast.ast.Node.CommaSeparatedNodeList","location":"ast/ktast.ast/-node/-comma-separated-node-list/index.html","searchKeys":["CommaSeparatedNodeList","abstract class CommaSeparatedNodeList<out E : Node> : Node.NodeList<E> ","ktast.ast.Node.CommaSeparatedNodeList"]},{"name":"abstract class NodeList<out E : Node> : Node","description":"ktast.ast.Node.NodeList","location":"ast/ktast.ast/-node/-node-list/index.html","searchKeys":["NodeList","abstract class NodeList<out E : Node> : Node","ktast.ast.Node.NodeList"]},{"name":"abstract fun extrasAfter(v: Node): List<Node.Extra>","description":"ktast.ast.ExtrasMap.extrasAfter","location":"ast/ktast.ast/-extras-map/extras-after.html","searchKeys":["extrasAfter","abstract fun extrasAfter(v: Node): List<Node.Extra>","ktast.ast.ExtrasMap.extrasAfter"]},{"name":"abstract fun extrasBefore(v: Node): List<Node.Extra>","description":"ktast.ast.ExtrasMap.extrasBefore","location":"ast/ktast.ast/-extras-map/extras-before.html","searchKeys":["extrasBefore","abstract fun extrasBefore(v: Node): List<Node.Extra>","ktast.ast.ExtrasMap.extrasBefore"]},{"name":"abstract fun extrasWithin(v: Node): List<Node.Extra>","description":"ktast.ast.ExtrasMap.extrasWithin","location":"ast/ktast.ast/-extras-map/extras-within.html","searchKeys":["extrasWithin","abstract fun extrasWithin(v: Node): List<Node.Extra>","ktast.ast.ExtrasMap.extrasWithin"]},{"name":"abstract fun moveExtras(fromNode: Node, toNode: Node)","description":"ktast.ast.MutableExtrasMap.moveExtras","location":"ast/ktast.ast/-mutable-extras-map/move-extras.html","searchKeys":["moveExtras","abstract fun moveExtras(fromNode: Node, toNode: Node)","ktast.ast.MutableExtrasMap.moveExtras"]},{"name":"abstract override val text: String","description":"ktast.ast.Node.Expression.ConstantLiteralExpression.text","location":"ast/ktast.ast/-node/-expression/-constant-literal-expression/text.html","searchKeys":["text","abstract override val text: String","ktast.ast.Node.Expression.ConstantLiteralExpression.text"]},{"name":"abstract val annotationSets: List<Node.Modifier.AnnotationSet>","description":"ktast.ast.Node.WithAnnotationSets.annotationSets","location":"ast/ktast.ast/-node/-with-annotation-sets/annotation-sets.html","searchKeys":["annotationSets","abstract val annotationSets: List<Node.Modifier.AnnotationSet>","ktast.ast.Node.WithAnnotationSets.annotationSets"]},{"name":"abstract val args: Node.ValueArgs?","description":"ktast.ast.Node.WithValueArgs.args","location":"ast/ktast.ast/-node/-with-value-args/args.html","searchKeys":["args","abstract val args: Node.ValueArgs?","ktast.ast.Node.WithValueArgs.args"]},{"name":"abstract val asterisk: Node.Keyword.Asterisk?","description":"ktast.ast.Node.TypeArg.asterisk","location":"ast/ktast.ast/-node/-type-arg/asterisk.html","searchKeys":["asterisk","abstract val asterisk: Node.Keyword.Asterisk?","ktast.ast.Node.TypeArg.asterisk"]},{"name":"abstract val body: Node.Expression","description":"ktast.ast.Node.Expression.WhenExpression.WhenBranch.body","location":"ast/ktast.ast/-node/-expression/-when-expression/-when-branch/body.html","searchKeys":["body","abstract val body: Node.Expression","ktast.ast.Node.Expression.WhenExpression.WhenBranch.body"]},{"name":"abstract val body: Node.Expression","description":"ktast.ast.Node.Statement.WhileStatementBase.body","location":"ast/ktast.ast/-node/-statement/-while-statement-base/body.html","searchKeys":["body","abstract val body: Node.Expression","ktast.ast.Node.Statement.WhileStatementBase.body"]},{"name":"abstract val body: Node.Expression?","description":"ktast.ast.Node.WithFunctionBody.body","location":"ast/ktast.ast/-node/-with-function-body/body.html","searchKeys":["body","abstract val body: Node.Expression?","ktast.ast.Node.WithFunctionBody.body"]},{"name":"abstract val byKeyword: Node.Keyword.By?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassParent.byKeyword","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-parent/by-keyword.html","searchKeys":["byKeyword","abstract val byKeyword: Node.Keyword.By?","ktast.ast.Node.Declaration.ClassDeclaration.ClassParent.byKeyword"]},{"name":"abstract val condition: Node.Expression","description":"ktast.ast.Node.Statement.WhileStatementBase.condition","location":"ast/ktast.ast/-node/-statement/-while-statement-base/condition.html","searchKeys":["condition","abstract val condition: Node.Expression","ktast.ast.Node.Statement.WhileStatementBase.condition"]},{"name":"abstract val declarations: List<Node.Declaration>","description":"ktast.ast.Node.DeclarationsContainer.declarations","location":"ast/ktast.ast/-node/-declarations-container/declarations.html","searchKeys":["declarations","abstract val declarations: List<Node.Declaration>","ktast.ast.Node.DeclarationsContainer.declarations"]},{"name":"abstract val elements: List<E>","description":"ktast.ast.Node.NodeList.elements","location":"ast/ktast.ast/-node/-node-list/elements.html","searchKeys":["elements","abstract val elements: List<E>","ktast.ast.Node.NodeList.elements"]},{"name":"abstract val elseKeyword: Node.Keyword.Else?","description":"ktast.ast.Node.Expression.WhenExpression.WhenBranch.elseKeyword","location":"ast/ktast.ast/-node/-expression/-when-expression/-when-branch/else-keyword.html","searchKeys":["elseKeyword","abstract val elseKeyword: Node.Keyword.Else?","ktast.ast.Node.Expression.WhenExpression.WhenBranch.elseKeyword"]},{"name":"abstract val equals: Node.Keyword.Equal?","description":"ktast.ast.Node.WithFunctionBody.equals","location":"ast/ktast.ast/-node/-with-function-body/equals.html","searchKeys":["equals","abstract val equals: Node.Keyword.Equal?","ktast.ast.Node.WithFunctionBody.equals"]},{"name":"abstract val expression: Node.Expression","description":"ktast.ast.Node.Expression.UnaryExpression.expression","location":"ast/ktast.ast/-node/-expression/-unary-expression/expression.html","searchKeys":["expression","abstract val expression: Node.Expression","ktast.ast.Node.Expression.UnaryExpression.expression"]},{"name":"abstract val expression: Node.Expression?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassParent.expression","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-parent/expression.html","searchKeys":["expression","abstract val expression: Node.Expression?","ktast.ast.Node.Declaration.ClassDeclaration.ClassParent.expression"]},{"name":"abstract val expression: Node.Expression?","description":"ktast.ast.Node.Expression.WhenExpression.WhenCondition.expression","location":"ast/ktast.ast/-node/-expression/-when-expression/-when-condition/expression.html","searchKeys":["expression","abstract val expression: Node.Expression?","ktast.ast.Node.Expression.WhenExpression.WhenCondition.expression"]},{"name":"abstract val importDirectives: List<Node.ImportDirective>","description":"ktast.ast.Node.KotlinEntry.importDirectives","location":"ast/ktast.ast/-node/-kotlin-entry/import-directives.html","searchKeys":["importDirectives","abstract val importDirectives: List<Node.ImportDirective>","ktast.ast.Node.KotlinEntry.importDirectives"]},{"name":"abstract val lAngle: Node.Keyword.Less?","description":"ktast.ast.Node.WithTypeArgs.lAngle","location":"ast/ktast.ast/-node/-with-type-args/l-angle.html","searchKeys":["lAngle","abstract val lAngle: Node.Keyword.Less?","ktast.ast.Node.WithTypeArgs.lAngle"]},{"name":"abstract val lAngle: Node.Keyword.Less?","description":"ktast.ast.Node.WithTypeParams.lAngle","location":"ast/ktast.ast/-node/-with-type-params/l-angle.html","searchKeys":["lAngle","abstract val lAngle: Node.Keyword.Less?","ktast.ast.Node.WithTypeParams.lAngle"]},{"name":"abstract val lPar: Node.Keyword.LPar","description":"ktast.ast.Node.Statement.WhileStatementBase.lPar","location":"ast/ktast.ast/-node/-statement/-while-statement-base/l-par.html","searchKeys":["lPar","abstract val lPar: Node.Keyword.LPar","ktast.ast.Node.Statement.WhileStatementBase.lPar"]},{"name":"abstract val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.WithFunctionParams.lPar","location":"ast/ktast.ast/-node/-with-function-params/l-par.html","searchKeys":["lPar","abstract val lPar: Node.Keyword.LPar?","ktast.ast.Node.WithFunctionParams.lPar"]},{"name":"abstract val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.WithValueArgs.lPar","location":"ast/ktast.ast/-node/-with-value-args/l-par.html","searchKeys":["lPar","abstract val lPar: Node.Keyword.LPar?","ktast.ast.Node.WithValueArgs.lPar"]},{"name":"abstract val label: Node.Expression.NameExpression?","description":"ktast.ast.Node.Expression.WithLabel.label","location":"ast/ktast.ast/-node/-expression/-with-label/label.html","searchKeys":["label","abstract val label: Node.Expression.NameExpression?","ktast.ast.Node.Expression.WithLabel.label"]},{"name":"abstract val lhs: Node.Expression?","description":"ktast.ast.Node.Expression.DoubleColonExpression.lhs","location":"ast/ktast.ast/-node/-expression/-double-colon-expression/lhs.html","searchKeys":["lhs","abstract val lhs: Node.Expression?","ktast.ast.Node.Expression.DoubleColonExpression.lhs"]},{"name":"abstract val modifiers: Node.Modifiers?","description":"ktast.ast.Node.WithModifiers.modifiers","location":"ast/ktast.ast/-node/-with-modifiers/modifiers.html","searchKeys":["modifiers","abstract val modifiers: Node.Modifiers?","ktast.ast.Node.WithModifiers.modifiers"]},{"name":"abstract val operator: Node.Expression.UnaryExpression.UnaryOperator","description":"ktast.ast.Node.Expression.UnaryExpression.operator","location":"ast/ktast.ast/-node/-expression/-unary-expression/operator.html","searchKeys":["operator","abstract val operator: Node.Expression.UnaryExpression.UnaryOperator","ktast.ast.Node.Expression.UnaryExpression.operator"]},{"name":"abstract val operator: Node.Expression.WhenExpression.WhenConditionOperator?","description":"ktast.ast.Node.Expression.WhenExpression.WhenCondition.operator","location":"ast/ktast.ast/-node/-expression/-when-expression/-when-condition/operator.html","searchKeys":["operator","abstract val operator: Node.Expression.WhenExpression.WhenConditionOperator?","ktast.ast.Node.Expression.WhenExpression.WhenCondition.operator"]},{"name":"abstract val packageDirective: Node.PackageDirective?","description":"ktast.ast.Node.KotlinEntry.packageDirective","location":"ast/ktast.ast/-node/-kotlin-entry/package-directive.html","searchKeys":["packageDirective","abstract val packageDirective: Node.PackageDirective?","ktast.ast.Node.KotlinEntry.packageDirective"]},{"name":"abstract val params: Node.FunctionParams?","description":"ktast.ast.Node.WithFunctionParams.params","location":"ast/ktast.ast/-node/-with-function-params/params.html","searchKeys":["params","abstract val params: Node.FunctionParams?","ktast.ast.Node.WithFunctionParams.params"]},{"name":"abstract val postModifiers: List<Node.PostModifier>","description":"ktast.ast.Node.WithPostModifiers.postModifiers","location":"ast/ktast.ast/-node/-with-post-modifiers/post-modifiers.html","searchKeys":["postModifiers","abstract val postModifiers: List<Node.PostModifier>","ktast.ast.Node.WithPostModifiers.postModifiers"]},{"name":"abstract val questionMarks: List<Node.Keyword.Question>","description":"ktast.ast.Node.Expression.DoubleColonExpression.questionMarks","location":"ast/ktast.ast/-node/-expression/-double-colon-expression/question-marks.html","searchKeys":["questionMarks","abstract val questionMarks: List<Node.Keyword.Question>","ktast.ast.Node.Expression.DoubleColonExpression.questionMarks"]},{"name":"abstract val rAngle: Node.Keyword.Greater?","description":"ktast.ast.Node.WithTypeArgs.rAngle","location":"ast/ktast.ast/-node/-with-type-args/r-angle.html","searchKeys":["rAngle","abstract val rAngle: Node.Keyword.Greater?","ktast.ast.Node.WithTypeArgs.rAngle"]},{"name":"abstract val rAngle: Node.Keyword.Greater?","description":"ktast.ast.Node.WithTypeParams.rAngle","location":"ast/ktast.ast/-node/-with-type-params/r-angle.html","searchKeys":["rAngle","abstract val rAngle: Node.Keyword.Greater?","ktast.ast.Node.WithTypeParams.rAngle"]},{"name":"abstract val rPar: Node.Keyword.RPar","description":"ktast.ast.Node.Statement.WhileStatementBase.rPar","location":"ast/ktast.ast/-node/-statement/-while-statement-base/r-par.html","searchKeys":["rPar","abstract val rPar: Node.Keyword.RPar","ktast.ast.Node.Statement.WhileStatementBase.rPar"]},{"name":"abstract val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.WithFunctionParams.rPar","location":"ast/ktast.ast/-node/-with-function-params/r-par.html","searchKeys":["rPar","abstract val rPar: Node.Keyword.RPar?","ktast.ast.Node.WithFunctionParams.rPar"]},{"name":"abstract val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.WithValueArgs.rPar","location":"ast/ktast.ast/-node/-with-value-args/r-par.html","searchKeys":["rPar","abstract val rPar: Node.Keyword.RPar?","ktast.ast.Node.WithValueArgs.rPar"]},{"name":"abstract val statements: List<Node.Statement>","description":"ktast.ast.Node.StatementsContainer.statements","location":"ast/ktast.ast/-node/-statements-container/statements.html","searchKeys":["statements","abstract val statements: List<Node.Statement>","ktast.ast.Node.StatementsContainer.statements"]},{"name":"abstract val text: String","description":"ktast.ast.Node.SimpleTextNode.text","location":"ast/ktast.ast/-node/-simple-text-node/text.html","searchKeys":["text","abstract val text: String","ktast.ast.Node.SimpleTextNode.text"]},{"name":"abstract val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.CommaSeparatedNodeList.trailingComma","location":"ast/ktast.ast/-node/-comma-separated-node-list/trailing-comma.html","searchKeys":["trailingComma","abstract val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.CommaSeparatedNodeList.trailingComma"]},{"name":"abstract val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.Expression.WhenExpression.WhenBranch.trailingComma","location":"ast/ktast.ast/-node/-expression/-when-expression/-when-branch/trailing-comma.html","searchKeys":["trailingComma","abstract val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.Expression.WhenExpression.WhenBranch.trailingComma"]},{"name":"abstract val type: Node.Type","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassParent.type","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-parent/type.html","searchKeys":["type","abstract val type: Node.Type","ktast.ast.Node.Declaration.ClassDeclaration.ClassParent.type"]},{"name":"abstract val type: Node.Type?","description":"ktast.ast.Node.Expression.WhenExpression.WhenCondition.type","location":"ast/ktast.ast/-node/-expression/-when-expression/-when-condition/type.html","searchKeys":["type","abstract val type: Node.Type?","ktast.ast.Node.Expression.WhenExpression.WhenCondition.type"]},{"name":"abstract val type: Node.Type?","description":"ktast.ast.Node.TypeArg.type","location":"ast/ktast.ast/-node/-type-arg/type.html","searchKeys":["type","abstract val type: Node.Type?","ktast.ast.Node.TypeArg.type"]},{"name":"abstract val typeArgs: Node.TypeArgs?","description":"ktast.ast.Node.WithTypeArgs.typeArgs","location":"ast/ktast.ast/-node/-with-type-args/type-args.html","searchKeys":["typeArgs","abstract val typeArgs: Node.TypeArgs?","ktast.ast.Node.WithTypeArgs.typeArgs"]},{"name":"abstract val typeParams: Node.TypeParams?","description":"ktast.ast.Node.WithTypeParams.typeParams","location":"ast/ktast.ast/-node/-with-type-params/type-params.html","searchKeys":["typeParams","abstract val typeParams: Node.TypeParams?","ktast.ast.Node.WithTypeParams.typeParams"]},{"name":"abstract val whenConditions: List<Node.Expression.WhenExpression.WhenCondition>","description":"ktast.ast.Node.Expression.WhenExpression.WhenBranch.whenConditions","location":"ast/ktast.ast/-node/-expression/-when-expression/-when-branch/when-conditions.html","searchKeys":["whenConditions","abstract val whenConditions: List<Node.Expression.WhenExpression.WhenCondition>","ktast.ast.Node.Expression.WhenExpression.WhenBranch.whenConditions"]},{"name":"abstract val whileKeyword: Node.Keyword.While","description":"ktast.ast.Node.Statement.WhileStatementBase.whileKeyword","location":"ast/ktast.ast/-node/-statement/-while-statement-base/while-keyword.html","searchKeys":["whileKeyword","abstract val whileKeyword: Node.Keyword.While","ktast.ast.Node.Statement.WhileStatementBase.whileKeyword"]},{"name":"abstract var tag: Any?","description":"ktast.ast.Node.tag","location":"ast/ktast.ast/-node/tag.html","searchKeys":["tag","abstract var tag: Any?","ktast.ast.Node.tag"]},{"name":"class Dumper(app: Appendable = StringBuilder(), extrasMap: ExtrasMap? = null, verbose: Boolean = true) : Visitor","description":"ktast.ast.Dumper","location":"ast/ktast.ast/-dumper/index.html","searchKeys":["Dumper","class Dumper(app: Appendable = StringBuilder(), extrasMap: ExtrasMap? = null, verbose: Boolean = true) : Visitor","ktast.ast.Dumper"]},{"name":"constructor()","description":"ktast.ast.Node.CommaSeparatedNodeList.CommaSeparatedNodeList","location":"ast/ktast.ast/-node/-comma-separated-node-list/-comma-separated-node-list.html","searchKeys":["CommaSeparatedNodeList","constructor()","ktast.ast.Node.CommaSeparatedNodeList.CommaSeparatedNodeList"]},{"name":"constructor()","description":"ktast.ast.Node.NodeList.NodeList","location":"ast/ktast.ast/-node/-node-list/-node-list.html","searchKeys":["NodeList","constructor()","ktast.ast.Node.NodeList.NodeList"]},{"name":"constructor()","description":"ktast.ast.Visitor.Visitor","location":"ast/ktast.ast/-visitor/-visitor.html","searchKeys":["Visitor","constructor()","ktast.ast.Visitor.Visitor"]},{"name":"constructor(annotationSets: List<Node.Modifier.AnnotationSet>, label: Node.Expression.NameExpression?, expression: Node.Expression.LambdaExpression, tag: Any? = null)","description":"ktast.ast.Node.Expression.CallExpression.LambdaArg.LambdaArg","location":"ast/ktast.ast/-node/-expression/-call-expression/-lambda-arg/-lambda-arg.html","searchKeys":["LambdaArg","constructor(annotationSets: List<Node.Modifier.AnnotationSet>, label: Node.Expression.NameExpression?, expression: Node.Expression.LambdaExpression, tag: Any? = null)","ktast.ast.Node.Expression.CallExpression.LambdaArg.LambdaArg"]},{"name":"constructor(annotationSets: List<Node.Modifier.AnnotationSet>, name: Node.Expression.NameExpression, type: Node.Type, tag: Any? = null)","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraint.TypeConstraint","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/-type-constraint/-type-constraint.html","searchKeys":["TypeConstraint","constructor(annotationSets: List<Node.Modifier.AnnotationSet>, name: Node.Expression.NameExpression, type: Node.Type, tag: Any? = null)","ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraint.TypeConstraint"]},{"name":"constructor(annotationSets: List<Node.Modifier.AnnotationSet>, packageDirective: Node.PackageDirective?, importDirectives: List<Node.ImportDirective>, declarations: List<Node.Declaration>, tag: Any? = null)","description":"ktast.ast.Node.KotlinFile.KotlinFile","location":"ast/ktast.ast/-node/-kotlin-file/-kotlin-file.html","searchKeys":["KotlinFile","constructor(annotationSets: List<Node.Modifier.AnnotationSet>, packageDirective: Node.PackageDirective?, importDirectives: List<Node.ImportDirective>, declarations: List<Node.Declaration>, tag: Any? = null)","ktast.ast.Node.KotlinFile.KotlinFile"]},{"name":"constructor(annotationSets: List<Node.Modifier.AnnotationSet>, packageDirective: Node.PackageDirective?, importDirectives: List<Node.ImportDirective>, expressions: List<Node.Expression>, tag: Any? = null)","description":"ktast.ast.Node.KotlinScript.KotlinScript","location":"ast/ktast.ast/-node/-kotlin-script/-kotlin-script.html","searchKeys":["KotlinScript","constructor(annotationSets: List<Node.Modifier.AnnotationSet>, packageDirective: Node.PackageDirective?, importDirectives: List<Node.ImportDirective>, expressions: List<Node.Expression>, tag: Any? = null)","ktast.ast.Node.KotlinScript.KotlinScript"]},{"name":"constructor(annotationSets: List<Node.Modifier.AnnotationSet>, statement: Node.Statement, tag: Any? = null)","description":"ktast.ast.Node.Expression.AnnotatedExpression.AnnotatedExpression","location":"ast/ktast.ast/-node/-expression/-annotated-expression/-annotated-expression.html","searchKeys":["AnnotatedExpression","constructor(annotationSets: List<Node.Modifier.AnnotationSet>, statement: Node.Statement, tag: Any? = null)","ktast.ast.Node.Expression.AnnotatedExpression.AnnotatedExpression"]},{"name":"constructor(app: Appendable = StringBuilder(), extrasMap: ExtrasMap? = null)","description":"ktast.ast.Writer.Writer","location":"ast/ktast.ast/-writer/-writer.html","searchKeys":["Writer","constructor(app: Appendable = StringBuilder(), extrasMap: ExtrasMap? = null)","ktast.ast.Writer.Writer"]},{"name":"constructor(app: Appendable = StringBuilder(), extrasMap: ExtrasMap? = null, verbose: Boolean = true)","description":"ktast.ast.Dumper.Dumper","location":"ast/ktast.ast/-dumper/-dumper.html","searchKeys":["Dumper","constructor(app: Appendable = StringBuilder(), extrasMap: ExtrasMap? = null, verbose: Boolean = true)","ktast.ast.Dumper.Dumper"]},{"name":"constructor(asterisk: Node.Keyword.Asterisk, tag: Any? = null)","description":"ktast.ast.Node.TypeArg.StarProjection.StarProjection","location":"ast/ktast.ast/-node/-type-arg/-star-projection/-star-projection.html","searchKeys":["StarProjection","constructor(asterisk: Node.Keyword.Asterisk, tag: Any? = null)","ktast.ast.Node.TypeArg.StarProjection.StarProjection"]},{"name":"constructor(atSymbol: Node.Keyword.At?, target: Node.Modifier.AnnotationSet.AnnotationTarget?, colon: Node.Keyword.Colon?, lBracket: Node.Keyword.LBracket?, annotations: List<Node.Modifier.AnnotationSet.Annotation>, rBracket: Node.Keyword.RBracket?, tag: Any? = null)","description":"ktast.ast.Node.Modifier.AnnotationSet.AnnotationSet","location":"ast/ktast.ast/-node/-modifier/-annotation-set/-annotation-set.html","searchKeys":["AnnotationSet","constructor(atSymbol: Node.Keyword.At?, target: Node.Modifier.AnnotationSet.AnnotationTarget?, colon: Node.Keyword.Colon?, lBracket: Node.Keyword.LBracket?, annotations: List<Node.Modifier.AnnotationSet.Annotation>, rBracket: Node.Keyword.RBracket?, tag: Any? = null)","ktast.ast.Node.Modifier.AnnotationSet.AnnotationSet"]},{"name":"constructor(block: Node.Expression.BlockExpression, catchClauses: List<Node.Expression.TryExpression.CatchClause>, finallyBlock: Node.Expression.BlockExpression?, tag: Any? = null)","description":"ktast.ast.Node.Expression.TryExpression.TryExpression","location":"ast/ktast.ast/-node/-expression/-try-expression/-try-expression.html","searchKeys":["TryExpression","constructor(block: Node.Expression.BlockExpression, catchClauses: List<Node.Expression.TryExpression.CatchClause>, finallyBlock: Node.Expression.BlockExpression?, tag: Any? = null)","ktast.ast.Node.Expression.TryExpression.TryExpression"]},{"name":"constructor(byKeyword: Node.Keyword.By, expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.Declaration.PropertyDeclaration.PropertyDelegate.PropertyDelegate","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-property-delegate/-property-delegate.html","searchKeys":["PropertyDelegate","constructor(byKeyword: Node.Keyword.By, expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.Declaration.PropertyDeclaration.PropertyDelegate.PropertyDelegate"]},{"name":"constructor(calleeExpression: Node.Expression, lAngle: Node.Keyword.Less?, typeArgs: Node.TypeArgs?, rAngle: Node.Keyword.Greater?, lPar: Node.Keyword.LPar?, args: Node.ValueArgs?, rPar: Node.Keyword.RPar?, lambdaArg: Node.Expression.CallExpression.LambdaArg?, tag: Any? = null)","description":"ktast.ast.Node.Expression.CallExpression.CallExpression","location":"ast/ktast.ast/-node/-expression/-call-expression/-call-expression.html","searchKeys":["CallExpression","constructor(calleeExpression: Node.Expression, lAngle: Node.Keyword.Less?, typeArgs: Node.TypeArgs?, rAngle: Node.Keyword.Greater?, lPar: Node.Keyword.LPar?, args: Node.ValueArgs?, rPar: Node.Keyword.RPar?, lambdaArg: Node.Expression.CallExpression.LambdaArg?, tag: Any? = null)","ktast.ast.Node.Expression.CallExpression.CallExpression"]},{"name":"constructor(catchKeyword: Node.Keyword.Catch, lPar: Node.Keyword.LPar, params: Node.FunctionParams, rPar: Node.Keyword.RPar, block: Node.Expression.BlockExpression, tag: Any? = null)","description":"ktast.ast.Node.Expression.TryExpression.CatchClause.CatchClause","location":"ast/ktast.ast/-node/-expression/-try-expression/-catch-clause/-catch-clause.html","searchKeys":["CatchClause","constructor(catchKeyword: Node.Keyword.Catch, lPar: Node.Keyword.LPar, params: Node.FunctionParams, rPar: Node.Keyword.RPar, block: Node.Expression.BlockExpression, tag: Any? = null)","ktast.ast.Node.Expression.TryExpression.CatchClause.CatchClause"]},{"name":"constructor(changed: Boolean)","description":"ktast.ast.MutableVisitor.ChangedRef.ChangedRef","location":"ast/ktast.ast/-mutable-visitor/-changed-ref/-changed-ref.html","searchKeys":["ChangedRef","constructor(changed: Boolean)","ktast.ast.MutableVisitor.ChangedRef.ChangedRef"]},{"name":"constructor(contractKeyword: Node.Keyword.Contract, lBracket: Node.Keyword.LBracket, contractEffects: Node.PostModifier.Contract.ContractEffects, rBracket: Node.Keyword.RBracket, tag: Any? = null)","description":"ktast.ast.Node.PostModifier.Contract.Contract","location":"ast/ktast.ast/-node/-post-modifier/-contract/-contract.html","searchKeys":["Contract","constructor(contractKeyword: Node.Keyword.Contract, lBracket: Node.Keyword.LBracket, contractEffects: Node.PostModifier.Contract.ContractEffects, rBracket: Node.Keyword.RBracket, tag: Any? = null)","ktast.ast.Node.PostModifier.Contract.Contract"]},{"name":"constructor(declaration: Node.Declaration.ClassDeclaration, tag: Any? = null)","description":"ktast.ast.Node.Expression.ObjectLiteralExpression.ObjectLiteralExpression","location":"ast/ktast.ast/-node/-expression/-object-literal-expression/-object-literal-expression.html","searchKeys":["ObjectLiteralExpression","constructor(declaration: Node.Declaration.ClassDeclaration, tag: Any? = null)","ktast.ast.Node.Expression.ObjectLiteralExpression.ObjectLiteralExpression"]},{"name":"constructor(doKeyword: Node.Keyword.Do, body: Node.Expression, whileKeyword: Node.Keyword.While, lPar: Node.Keyword.LPar, condition: Node.Expression, rPar: Node.Keyword.RPar, tag: Any? = null)","description":"ktast.ast.Node.Statement.DoWhileStatement.DoWhileStatement","location":"ast/ktast.ast/-node/-statement/-do-while-statement/-do-while-statement.html","searchKeys":["DoWhileStatement","constructor(doKeyword: Node.Keyword.Do, body: Node.Expression, whileKeyword: Node.Keyword.While, lPar: Node.Keyword.LPar, condition: Node.Expression, rPar: Node.Keyword.RPar, tag: Any? = null)","ktast.ast.Node.Statement.DoWhileStatement.DoWhileStatement"]},{"name":"constructor(elements: List<Node.Declaration.ClassDeclaration.ClassParent>, tag: Any? = null)","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassParents.ClassParents","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-parents/-class-parents.html","searchKeys":["ClassParents","constructor(elements: List<Node.Declaration.ClassDeclaration.ClassParent>, tag: Any? = null)","ktast.ast.Node.Declaration.ClassDeclaration.ClassParents.ClassParents"]},{"name":"constructor(elements: List<Node.Expression>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.PostModifier.Contract.ContractEffects.ContractEffects","location":"ast/ktast.ast/-node/-post-modifier/-contract/-contract-effects/-contract-effects.html","searchKeys":["ContractEffects","constructor(elements: List<Node.Expression>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.PostModifier.Contract.ContractEffects.ContractEffects"]},{"name":"constructor(elements: List<Node.FunctionParam>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.FunctionParams.FunctionParams","location":"ast/ktast.ast/-node/-function-params/-function-params.html","searchKeys":["FunctionParams","constructor(elements: List<Node.FunctionParam>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.FunctionParams.FunctionParams"]},{"name":"constructor(elements: List<Node.LambdaParam>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.LambdaParams.LambdaParams","location":"ast/ktast.ast/-node/-lambda-params/-lambda-params.html","searchKeys":["LambdaParams","constructor(elements: List<Node.LambdaParam>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.LambdaParams.LambdaParams"]},{"name":"constructor(elements: List<Node.Modifier>, tag: Any? = null)","description":"ktast.ast.Node.Modifiers.Modifiers","location":"ast/ktast.ast/-node/-modifiers/-modifiers.html","searchKeys":["Modifiers","constructor(elements: List<Node.Modifier>, tag: Any? = null)","ktast.ast.Node.Modifiers.Modifiers"]},{"name":"constructor(elements: List<Node.PostModifier.TypeConstraintSet.TypeConstraint>, tag: Any? = null)","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraints.TypeConstraints","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/-type-constraints/-type-constraints.html","searchKeys":["TypeConstraints","constructor(elements: List<Node.PostModifier.TypeConstraintSet.TypeConstraint>, tag: Any? = null)","ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraints.TypeConstraints"]},{"name":"constructor(elements: List<Node.Type.FunctionType.FunctionTypeParam>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.Type.FunctionType.FunctionTypeParams.FunctionTypeParams","location":"ast/ktast.ast/-node/-type/-function-type/-function-type-params/-function-type-params.html","searchKeys":["FunctionTypeParams","constructor(elements: List<Node.Type.FunctionType.FunctionTypeParam>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.Type.FunctionType.FunctionTypeParams.FunctionTypeParams"]},{"name":"constructor(elements: List<Node.Type>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.ContextReceiverTypes.ContextReceiverTypes","location":"ast/ktast.ast/-node/-context-receiver-types/-context-receiver-types.html","searchKeys":["ContextReceiverTypes","constructor(elements: List<Node.Type>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.ContextReceiverTypes.ContextReceiverTypes"]},{"name":"constructor(elements: List<Node.TypeArg>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.TypeArgs.TypeArgs","location":"ast/ktast.ast/-node/-type-args/-type-args.html","searchKeys":["TypeArgs","constructor(elements: List<Node.TypeArg>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.TypeArgs.TypeArgs"]},{"name":"constructor(elements: List<Node.TypeParam>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.TypeParams.TypeParams","location":"ast/ktast.ast/-node/-type-params/-type-params.html","searchKeys":["TypeParams","constructor(elements: List<Node.TypeParam>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.TypeParams.TypeParams"]},{"name":"constructor(elements: List<Node.ValueArg>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.ValueArgs.ValueArgs","location":"ast/ktast.ast/-node/-value-args/-value-args.html","searchKeys":["ValueArgs","constructor(elements: List<Node.ValueArg>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.ValueArgs.ValueArgs"]},{"name":"constructor(elseKeyword: Node.Keyword.Else, body: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.Expression.WhenExpression.ElseWhenBranch.ElseWhenBranch","location":"ast/ktast.ast/-node/-expression/-when-expression/-else-when-branch/-else-when-branch.html","searchKeys":["ElseWhenBranch","constructor(elseKeyword: Node.Keyword.Else, body: Node.Expression, tag: Any? = null)","ktast.ast.Node.Expression.WhenExpression.ElseWhenBranch.ElseWhenBranch"]},{"name":"constructor(entries: List<Node.Expression.StringLiteralExpression.StringEntry>, raw: Boolean, tag: Any? = null)","description":"ktast.ast.Node.Expression.StringLiteralExpression.StringLiteralExpression","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-string-literal-expression.html","searchKeys":["StringLiteralExpression","constructor(entries: List<Node.Expression.StringLiteralExpression.StringEntry>, raw: Boolean, tag: Any? = null)","ktast.ast.Node.Expression.StringLiteralExpression.StringLiteralExpression"]},{"name":"constructor(expression: Node.Expression, indices: List<Node.Expression>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.Expression.IndexedAccessExpression.IndexedAccessExpression","location":"ast/ktast.ast/-node/-expression/-indexed-access-expression/-indexed-access-expression.html","searchKeys":["IndexedAccessExpression","constructor(expression: Node.Expression, indices: List<Node.Expression>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.Expression.IndexedAccessExpression.IndexedAccessExpression"]},{"name":"constructor(expression: Node.Expression, operator: Node.Expression.UnaryExpression.UnaryOperator, tag: Any? = null)","description":"ktast.ast.Node.Expression.PostfixUnaryExpression.PostfixUnaryExpression","location":"ast/ktast.ast/-node/-expression/-postfix-unary-expression/-postfix-unary-expression.html","searchKeys":["PostfixUnaryExpression","constructor(expression: Node.Expression, operator: Node.Expression.UnaryExpression.UnaryOperator, tag: Any? = null)","ktast.ast.Node.Expression.PostfixUnaryExpression.PostfixUnaryExpression"]},{"name":"constructor(expression: Node.Expression, short: Boolean, tag: Any? = null)","description":"ktast.ast.Node.Expression.StringLiteralExpression.TemplateStringEntry.TemplateStringEntry","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-template-string-entry/-template-string-entry.html","searchKeys":["TemplateStringEntry","constructor(expression: Node.Expression, short: Boolean, tag: Any? = null)","ktast.ast.Node.Expression.StringLiteralExpression.TemplateStringEntry.TemplateStringEntry"]},{"name":"constructor(expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.Expression.ParenthesizedExpression.ParenthesizedExpression","location":"ast/ktast.ast/-node/-expression/-parenthesized-expression/-parenthesized-expression.html","searchKeys":["ParenthesizedExpression","constructor(expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.Expression.ParenthesizedExpression.ParenthesizedExpression"]},{"name":"constructor(expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.Expression.ThrowExpression.ThrowExpression","location":"ast/ktast.ast/-node/-expression/-throw-expression/-throw-expression.html","searchKeys":["ThrowExpression","constructor(expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.Expression.ThrowExpression.ThrowExpression"]},{"name":"constructor(expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.Expression.WhenExpression.ExpressionWhenCondition.ExpressionWhenCondition","location":"ast/ktast.ast/-node/-expression/-when-expression/-expression-when-condition/-expression-when-condition.html","searchKeys":["ExpressionWhenCondition","constructor(expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.Expression.WhenExpression.ExpressionWhenCondition.ExpressionWhenCondition"]},{"name":"constructor(expressions: List<Node.Expression>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","description":"ktast.ast.Node.Expression.CollectionLiteralExpression.CollectionLiteralExpression","location":"ast/ktast.ast/-node/-expression/-collection-literal-expression/-collection-literal-expression.html","searchKeys":["CollectionLiteralExpression","constructor(expressions: List<Node.Expression>, trailingComma: Node.Keyword.Comma?, tag: Any? = null)","ktast.ast.Node.Expression.CollectionLiteralExpression.CollectionLiteralExpression"]},{"name":"constructor(extrasMap: MutableExtrasMap? = null)","description":"ktast.ast.MutableVisitor.MutableVisitor","location":"ast/ktast.ast/-mutable-visitor/-mutable-visitor.html","searchKeys":["MutableVisitor","constructor(extrasMap: MutableExtrasMap? = null)","ktast.ast.MutableVisitor.MutableVisitor"]},{"name":"constructor(forKeyword: Node.Keyword.For, lPar: Node.Keyword.LPar, loopParam: Node.LambdaParam, inKeyword: Node.Keyword.In, loopRange: Node.Expression, rPar: Node.Keyword.RPar, body: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.Statement.ForStatement.ForStatement","location":"ast/ktast.ast/-node/-statement/-for-statement/-for-statement.html","searchKeys":["ForStatement","constructor(forKeyword: Node.Keyword.For, lPar: Node.Keyword.LPar, loopParam: Node.LambdaParam, inKeyword: Node.Keyword.In, loopRange: Node.Expression, rPar: Node.Keyword.RPar, body: Node.Expression, tag: Any? = null)","ktast.ast.Node.Statement.ForStatement.ForStatement"]},{"name":"constructor(function: Node.Declaration.FunctionDeclaration, tag: Any? = null)","description":"ktast.ast.Node.Expression.AnonymousFunctionExpression.AnonymousFunctionExpression","location":"ast/ktast.ast/-node/-expression/-anonymous-function-expression/-anonymous-function-expression.html","searchKeys":["AnonymousFunctionExpression","constructor(function: Node.Declaration.FunctionDeclaration, tag: Any? = null)","ktast.ast.Node.Expression.AnonymousFunctionExpression.AnonymousFunctionExpression"]},{"name":"constructor(ifKeyword: Node.Keyword.If, lPar: Node.Keyword.LPar, condition: Node.Expression, rPar: Node.Keyword.RPar, body: Node.Expression, elseKeyword: Node.Keyword.Else?, elseBody: Node.Expression?, tag: Any? = null)","description":"ktast.ast.Node.Expression.IfExpression.IfExpression","location":"ast/ktast.ast/-node/-expression/-if-expression/-if-expression.html","searchKeys":["IfExpression","constructor(ifKeyword: Node.Keyword.If, lPar: Node.Keyword.LPar, condition: Node.Expression, rPar: Node.Keyword.RPar, body: Node.Expression, elseKeyword: Node.Keyword.Else?, elseBody: Node.Expression?, tag: Any? = null)","ktast.ast.Node.Expression.IfExpression.IfExpression"]},{"name":"constructor(importKeyword: Node.Keyword.Import, names: List<Node.Expression.NameExpression>, importAlias: Node.ImportDirective.ImportAlias?, tag: Any? = null)","description":"ktast.ast.Node.ImportDirective.ImportDirective","location":"ast/ktast.ast/-node/-import-directive/-import-directive.html","searchKeys":["ImportDirective","constructor(importKeyword: Node.Keyword.Import, names: List<Node.Expression.NameExpression>, importAlias: Node.ImportDirective.ImportAlias?, tag: Any? = null)","ktast.ast.Node.ImportDirective.ImportDirective"]},{"name":"constructor(lBrace: Node.Keyword.LBrace, enumEntries: List<Node.Declaration.ClassDeclaration.ClassBody.EnumEntry>, hasTrailingCommaInEnumEntries: Boolean, declarations: List<Node.Declaration>, rBrace: Node.Keyword.RBrace, tag: Any? = null)","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.ClassBody","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-class-body.html","searchKeys":["ClassBody","constructor(lBrace: Node.Keyword.LBrace, enumEntries: List<Node.Declaration.ClassDeclaration.ClassBody.EnumEntry>, hasTrailingCommaInEnumEntries: Boolean, declarations: List<Node.Declaration>, rBrace: Node.Keyword.RBrace, tag: Any? = null)","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.ClassBody"]},{"name":"constructor(lBrace: Node.Keyword.LBrace, statements: List<Node.Statement>, rBrace: Node.Keyword.RBrace, tag: Any? = null)","description":"ktast.ast.Node.Expression.BlockExpression.BlockExpression","location":"ast/ktast.ast/-node/-expression/-block-expression/-block-expression.html","searchKeys":["BlockExpression","constructor(lBrace: Node.Keyword.LBrace, statements: List<Node.Statement>, rBrace: Node.Keyword.RBrace, tag: Any? = null)","ktast.ast.Node.Expression.BlockExpression.BlockExpression"]},{"name":"constructor(lPar: Node.Keyword.LPar, receiverTypes: Node.ContextReceiverTypes, rPar: Node.Keyword.RPar, tag: Any? = null)","description":"ktast.ast.Node.ContextReceiver.ContextReceiver","location":"ast/ktast.ast/-node/-context-receiver/-context-receiver.html","searchKeys":["ContextReceiver","constructor(lPar: Node.Keyword.LPar, receiverTypes: Node.ContextReceiverTypes, rPar: Node.Keyword.RPar, tag: Any? = null)","ktast.ast.Node.ContextReceiver.ContextReceiver"]},{"name":"constructor(lPar: Node.Keyword.LPar?, variables: List<Node.Variable>, trailingComma: Node.Keyword.Comma?, rPar: Node.Keyword.RPar?, colon: Node.Keyword.Colon?, destructType: Node.Type?, tag: Any? = null)","description":"ktast.ast.Node.LambdaParam.LambdaParam","location":"ast/ktast.ast/-node/-lambda-param/-lambda-param.html","searchKeys":["LambdaParam","constructor(lPar: Node.Keyword.LPar?, variables: List<Node.Variable>, trailingComma: Node.Keyword.Comma?, rPar: Node.Keyword.RPar?, colon: Node.Keyword.Colon?, destructType: Node.Type?, tag: Any? = null)","ktast.ast.Node.LambdaParam.LambdaParam"]},{"name":"constructor(label: Node.Expression.NameExpression, statement: Node.Statement, tag: Any? = null)","description":"ktast.ast.Node.Expression.LabeledExpression.LabeledExpression","location":"ast/ktast.ast/-node/-expression/-labeled-expression/-labeled-expression.html","searchKeys":["LabeledExpression","constructor(label: Node.Expression.NameExpression, statement: Node.Statement, tag: Any? = null)","ktast.ast.Node.Expression.LabeledExpression.LabeledExpression"]},{"name":"constructor(label: Node.Expression.NameExpression?, expression: Node.Expression?, tag: Any? = null)","description":"ktast.ast.Node.Expression.ReturnExpression.ReturnExpression","location":"ast/ktast.ast/-node/-expression/-return-expression/-return-expression.html","searchKeys":["ReturnExpression","constructor(label: Node.Expression.NameExpression?, expression: Node.Expression?, tag: Any? = null)","ktast.ast.Node.Expression.ReturnExpression.ReturnExpression"]},{"name":"constructor(label: Node.Expression.NameExpression?, tag: Any? = null)","description":"ktast.ast.Node.Expression.BreakExpression.BreakExpression","location":"ast/ktast.ast/-node/-expression/-break-expression/-break-expression.html","searchKeys":["BreakExpression","constructor(label: Node.Expression.NameExpression?, tag: Any? = null)","ktast.ast.Node.Expression.BreakExpression.BreakExpression"]},{"name":"constructor(label: Node.Expression.NameExpression?, tag: Any? = null)","description":"ktast.ast.Node.Expression.ContinueExpression.ContinueExpression","location":"ast/ktast.ast/-node/-expression/-continue-expression/-continue-expression.html","searchKeys":["ContinueExpression","constructor(label: Node.Expression.NameExpression?, tag: Any? = null)","ktast.ast.Node.Expression.ContinueExpression.ContinueExpression"]},{"name":"constructor(label: Node.Expression.NameExpression?, tag: Any? = null)","description":"ktast.ast.Node.Expression.ThisExpression.ThisExpression","location":"ast/ktast.ast/-node/-expression/-this-expression/-this-expression.html","searchKeys":["ThisExpression","constructor(label: Node.Expression.NameExpression?, tag: Any? = null)","ktast.ast.Node.Expression.ThisExpression.ThisExpression"]},{"name":"constructor(lhs: Node.Expression, operator: Node.Expression.BinaryExpression.BinaryOperator, rhs: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.Expression.BinaryExpression.BinaryExpression","location":"ast/ktast.ast/-node/-expression/-binary-expression/-binary-expression.html","searchKeys":["BinaryExpression","constructor(lhs: Node.Expression, operator: Node.Expression.BinaryExpression.BinaryOperator, rhs: Node.Expression, tag: Any? = null)","ktast.ast.Node.Expression.BinaryExpression.BinaryExpression"]},{"name":"constructor(lhs: Node.Expression, operator: Node.Expression.BinaryTypeExpression.BinaryTypeOperator, rhs: Node.Type, tag: Any? = null)","description":"ktast.ast.Node.Expression.BinaryTypeExpression.BinaryTypeExpression","location":"ast/ktast.ast/-node/-expression/-binary-type-expression/-binary-type-expression.html","searchKeys":["BinaryTypeExpression","constructor(lhs: Node.Expression, operator: Node.Expression.BinaryTypeExpression.BinaryTypeOperator, rhs: Node.Type, tag: Any? = null)","ktast.ast.Node.Expression.BinaryTypeExpression.BinaryTypeExpression"]},{"name":"constructor(lhs: Node.Expression?, questionMarks: List<Node.Keyword.Question>, rhs: Node.Expression.NameExpression, tag: Any? = null)","description":"ktast.ast.Node.Expression.CallableReferenceExpression.CallableReferenceExpression","location":"ast/ktast.ast/-node/-expression/-callable-reference-expression/-callable-reference-expression.html","searchKeys":["CallableReferenceExpression","constructor(lhs: Node.Expression?, questionMarks: List<Node.Keyword.Question>, rhs: Node.Expression.NameExpression, tag: Any? = null)","ktast.ast.Node.Expression.CallableReferenceExpression.CallableReferenceExpression"]},{"name":"constructor(lhs: Node.Expression?, questionMarks: List<Node.Keyword.Question>, tag: Any? = null)","description":"ktast.ast.Node.Expression.ClassLiteralExpression.ClassLiteralExpression","location":"ast/ktast.ast/-node/-expression/-class-literal-expression/-class-literal-expression.html","searchKeys":["ClassLiteralExpression","constructor(lhs: Node.Expression?, questionMarks: List<Node.Keyword.Question>, tag: Any? = null)","ktast.ast.Node.Expression.ClassLiteralExpression.ClassLiteralExpression"]},{"name":"constructor(modifiers: Node.Modifiers?, block: Node.Expression.BlockExpression, tag: Any? = null)","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.Initializer.Initializer","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-initializer/-initializer.html","searchKeys":["Initializer","constructor(modifiers: Node.Modifiers?, block: Node.Expression.BlockExpression, tag: Any? = null)","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.Initializer.Initializer"]},{"name":"constructor(modifiers: Node.Modifiers?, classDeclarationKeyword: Node.Declaration.ClassDeclaration.ClassDeclarationKeyword, name: Node.Expression.NameExpression?, lAngle: Node.Keyword.Less?, typeParams: Node.TypeParams?, rAngle: Node.Keyword.Greater?, primaryConstructor: Node.Declaration.ClassDeclaration.PrimaryConstructor?, classParents: Node.Declaration.ClassDeclaration.ClassParents?, typeConstraintSet: Node.PostModifier.TypeConstraintSet?, classBody: Node.Declaration.ClassDeclaration.ClassBody?, tag: Any? = null)","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassDeclaration","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-declaration.html","searchKeys":["ClassDeclaration","constructor(modifiers: Node.Modifiers?, classDeclarationKeyword: Node.Declaration.ClassDeclaration.ClassDeclarationKeyword, name: Node.Expression.NameExpression?, lAngle: Node.Keyword.Less?, typeParams: Node.TypeParams?, rAngle: Node.Keyword.Greater?, primaryConstructor: Node.Declaration.ClassDeclaration.PrimaryConstructor?, classParents: Node.Declaration.ClassDeclaration.ClassParents?, typeConstraintSet: Node.PostModifier.TypeConstraintSet?, classBody: Node.Declaration.ClassDeclaration.ClassBody?, tag: Any? = null)","ktast.ast.Node.Declaration.ClassDeclaration.ClassDeclaration"]},{"name":"constructor(modifiers: Node.Modifiers?, constructorKeyword: Node.Keyword.Constructor, lPar: Node.Keyword.LPar?, params: Node.FunctionParams?, rPar: Node.Keyword.RPar?, delegationCall: Node.Expression.CallExpression?, block: Node.Expression.BlockExpression?, tag: Any? = null)","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.SecondaryConstructor","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-secondary-constructor/-secondary-constructor.html","searchKeys":["SecondaryConstructor","constructor(modifiers: Node.Modifiers?, constructorKeyword: Node.Keyword.Constructor, lPar: Node.Keyword.LPar?, params: Node.FunctionParams?, rPar: Node.Keyword.RPar?, delegationCall: Node.Expression.CallExpression?, block: Node.Expression.BlockExpression?, tag: Any? = null)","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.SecondaryConstructor"]},{"name":"constructor(modifiers: Node.Modifiers?, constructorKeyword: Node.Keyword.Constructor?, lPar: Node.Keyword.LPar?, params: Node.FunctionParams?, rPar: Node.Keyword.RPar?, tag: Any? = null)","description":"ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor.PrimaryConstructor","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-primary-constructor/-primary-constructor.html","searchKeys":["PrimaryConstructor","constructor(modifiers: Node.Modifiers?, constructorKeyword: Node.Keyword.Constructor?, lPar: Node.Keyword.LPar?, params: Node.FunctionParams?, rPar: Node.Keyword.RPar?, tag: Any? = null)","ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor.PrimaryConstructor"]},{"name":"constructor(modifiers: Node.Modifiers?, contextReceiver: Node.ContextReceiver?, receiverType: Node.Type?, dotSymbol: Node.Keyword.Dot?, lPar: Node.Keyword.LPar?, params: Node.Type.FunctionType.FunctionTypeParams?, rPar: Node.Keyword.RPar?, returnType: Node.Type, tag: Any? = null)","description":"ktast.ast.Node.Type.FunctionType.FunctionType","location":"ast/ktast.ast/-node/-type/-function-type/-function-type.html","searchKeys":["FunctionType","constructor(modifiers: Node.Modifiers?, contextReceiver: Node.ContextReceiver?, receiverType: Node.Type?, dotSymbol: Node.Keyword.Dot?, lPar: Node.Keyword.LPar?, params: Node.Type.FunctionType.FunctionTypeParams?, rPar: Node.Keyword.RPar?, returnType: Node.Type, tag: Any? = null)","ktast.ast.Node.Type.FunctionType.FunctionType"]},{"name":"constructor(modifiers: Node.Modifiers?, funKeyword: Node.Keyword.Fun, lAngle: Node.Keyword.Less?, typeParams: Node.TypeParams?, rAngle: Node.Keyword.Greater?, receiverType: Node.Type?, name: Node.Expression.NameExpression?, lPar: Node.Keyword.LPar?, params: Node.FunctionParams?, rPar: Node.Keyword.RPar?, returnType: Node.Type?, postModifiers: List<Node.PostModifier>, equals: Node.Keyword.Equal?, body: Node.Expression?, tag: Any? = null)","description":"ktast.ast.Node.Declaration.FunctionDeclaration.FunctionDeclaration","location":"ast/ktast.ast/-node/-declaration/-function-declaration/-function-declaration.html","searchKeys":["FunctionDeclaration","constructor(modifiers: Node.Modifiers?, funKeyword: Node.Keyword.Fun, lAngle: Node.Keyword.Less?, typeParams: Node.TypeParams?, rAngle: Node.Keyword.Greater?, receiverType: Node.Type?, name: Node.Expression.NameExpression?, lPar: Node.Keyword.LPar?, params: Node.FunctionParams?, rPar: Node.Keyword.RPar?, returnType: Node.Type?, postModifiers: List<Node.PostModifier>, equals: Node.Keyword.Equal?, body: Node.Expression?, tag: Any? = null)","ktast.ast.Node.Declaration.FunctionDeclaration.FunctionDeclaration"]},{"name":"constructor(modifiers: Node.Modifiers?, getKeyword: Node.Keyword.Get, type: Node.Type?, postModifiers: List<Node.PostModifier>, equals: Node.Keyword.Equal?, body: Node.Expression?, tag: Any? = null)","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Getter.Getter","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-getter/-getter.html","searchKeys":["Getter","constructor(modifiers: Node.Modifiers?, getKeyword: Node.Keyword.Get, type: Node.Type?, postModifiers: List<Node.PostModifier>, equals: Node.Keyword.Equal?, body: Node.Expression?, tag: Any? = null)","ktast.ast.Node.Declaration.PropertyDeclaration.Getter.Getter"]},{"name":"constructor(modifiers: Node.Modifiers?, lPar: Node.Keyword.LPar, type: Node.Type, rPar: Node.Keyword.RPar, tag: Any? = null)","description":"ktast.ast.Node.Type.ParenthesizedType.ParenthesizedType","location":"ast/ktast.ast/-node/-type/-parenthesized-type/-parenthesized-type.html","searchKeys":["ParenthesizedType","constructor(modifiers: Node.Modifiers?, lPar: Node.Keyword.LPar, type: Node.Type, rPar: Node.Keyword.RPar, tag: Any? = null)","ktast.ast.Node.Type.ParenthesizedType.ParenthesizedType"]},{"name":"constructor(modifiers: Node.Modifiers?, name: Node.Expression.NameExpression, lAngle: Node.Keyword.Less?, typeParams: Node.TypeParams?, rAngle: Node.Keyword.Greater?, equals: Node.Keyword.Equal, type: Node.Type, tag: Any? = null)","description":"ktast.ast.Node.Declaration.TypeAliasDeclaration.TypeAliasDeclaration","location":"ast/ktast.ast/-node/-declaration/-type-alias-declaration/-type-alias-declaration.html","searchKeys":["TypeAliasDeclaration","constructor(modifiers: Node.Modifiers?, name: Node.Expression.NameExpression, lAngle: Node.Keyword.Less?, typeParams: Node.TypeParams?, rAngle: Node.Keyword.Greater?, equals: Node.Keyword.Equal, type: Node.Type, tag: Any? = null)","ktast.ast.Node.Declaration.TypeAliasDeclaration.TypeAliasDeclaration"]},{"name":"constructor(modifiers: Node.Modifiers?, name: Node.Expression.NameExpression, lPar: Node.Keyword.LPar?, args: Node.ValueArgs?, rPar: Node.Keyword.RPar?, classBody: Node.Declaration.ClassDeclaration.ClassBody?, tag: Any? = null)","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.EnumEntry","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-enum-entry/-enum-entry.html","searchKeys":["EnumEntry","constructor(modifiers: Node.Modifiers?, name: Node.Expression.NameExpression, lPar: Node.Keyword.LPar?, args: Node.ValueArgs?, rPar: Node.Keyword.RPar?, classBody: Node.Declaration.ClassDeclaration.ClassBody?, tag: Any? = null)","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.EnumEntry"]},{"name":"constructor(modifiers: Node.Modifiers?, name: Node.Expression.NameExpression, type: Node.Type?, tag: Any? = null)","description":"ktast.ast.Node.TypeParam.TypeParam","location":"ast/ktast.ast/-node/-type-param/-type-param.html","searchKeys":["TypeParam","constructor(modifiers: Node.Modifiers?, name: Node.Expression.NameExpression, type: Node.Type?, tag: Any? = null)","ktast.ast.Node.TypeParam.TypeParam"]},{"name":"constructor(modifiers: Node.Modifiers?, name: Node.Expression.NameExpression, type: Node.Type?, tag: Any? = null)","description":"ktast.ast.Node.Variable.Variable","location":"ast/ktast.ast/-node/-variable/-variable.html","searchKeys":["Variable","constructor(modifiers: Node.Modifiers?, name: Node.Expression.NameExpression, type: Node.Type?, tag: Any? = null)","ktast.ast.Node.Variable.Variable"]},{"name":"constructor(modifiers: Node.Modifiers?, packageKeyword: Node.Keyword.Package, names: List<Node.Expression.NameExpression>, tag: Any? = null)","description":"ktast.ast.Node.PackageDirective.PackageDirective","location":"ast/ktast.ast/-node/-package-directive/-package-directive.html","searchKeys":["PackageDirective","constructor(modifiers: Node.Modifiers?, packageKeyword: Node.Keyword.Package, names: List<Node.Expression.NameExpression>, tag: Any? = null)","ktast.ast.Node.PackageDirective.PackageDirective"]},{"name":"constructor(modifiers: Node.Modifiers?, qualifiers: List<Node.Type.SimpleType.SimpleTypeQualifier>, name: Node.Expression.NameExpression, lAngle: Node.Keyword.Less?, typeArgs: Node.TypeArgs?, rAngle: Node.Keyword.Greater?, tag: Any? = null)","description":"ktast.ast.Node.Type.SimpleType.SimpleType","location":"ast/ktast.ast/-node/-type/-simple-type/-simple-type.html","searchKeys":["SimpleType","constructor(modifiers: Node.Modifiers?, qualifiers: List<Node.Type.SimpleType.SimpleTypeQualifier>, name: Node.Expression.NameExpression, lAngle: Node.Keyword.Less?, typeArgs: Node.TypeArgs?, rAngle: Node.Keyword.Greater?, tag: Any? = null)","ktast.ast.Node.Type.SimpleType.SimpleType"]},{"name":"constructor(modifiers: Node.Modifiers?, setKeyword: Node.Keyword.Set, params: Node.LambdaParams?, postModifiers: List<Node.PostModifier>, equals: Node.Keyword.Equal?, body: Node.Expression?, tag: Any? = null)","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Setter.Setter","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-setter/-setter.html","searchKeys":["Setter","constructor(modifiers: Node.Modifiers?, setKeyword: Node.Keyword.Set, params: Node.LambdaParams?, postModifiers: List<Node.PostModifier>, equals: Node.Keyword.Equal?, body: Node.Expression?, tag: Any? = null)","ktast.ast.Node.Declaration.PropertyDeclaration.Setter.Setter"]},{"name":"constructor(modifiers: Node.Modifiers?, tag: Any? = null)","description":"ktast.ast.Node.Type.DynamicType.DynamicType","location":"ast/ktast.ast/-node/-type/-dynamic-type/-dynamic-type.html","searchKeys":["DynamicType","constructor(modifiers: Node.Modifiers?, tag: Any? = null)","ktast.ast.Node.Type.DynamicType.DynamicType"]},{"name":"constructor(modifiers: Node.Modifiers?, type: Node.Type, questionMark: Node.Keyword.Question, tag: Any? = null)","description":"ktast.ast.Node.Type.NullableType.NullableType","location":"ast/ktast.ast/-node/-type/-nullable-type/-nullable-type.html","searchKeys":["NullableType","constructor(modifiers: Node.Modifiers?, type: Node.Type, questionMark: Node.Keyword.Question, tag: Any? = null)","ktast.ast.Node.Type.NullableType.NullableType"]},{"name":"constructor(modifiers: Node.Modifiers?, type: Node.Type, tag: Any? = null)","description":"ktast.ast.Node.TypeArg.TypeProjection.TypeProjection","location":"ast/ktast.ast/-node/-type-arg/-type-projection/-type-projection.html","searchKeys":["TypeProjection","constructor(modifiers: Node.Modifiers?, type: Node.Type, tag: Any? = null)","ktast.ast.Node.TypeArg.TypeProjection.TypeProjection"]},{"name":"constructor(modifiers: Node.Modifiers?, valOrVarKeyword: Node.Keyword.ValOrVarKeyword, lAngle: Node.Keyword.Less?, typeParams: Node.TypeParams?, rAngle: Node.Keyword.Greater?, receiverType: Node.Type?, lPar: Node.Keyword.LPar?, variables: List<Node.Variable>, trailingComma: Node.Keyword.Comma?, rPar: Node.Keyword.RPar?, typeConstraintSet: Node.PostModifier.TypeConstraintSet?, equals: Node.Keyword.Equal?, initializer: Node.Expression?, propertyDelegate: Node.Declaration.PropertyDeclaration.PropertyDelegate?, accessors: List<Node.Declaration.PropertyDeclaration.Accessor>, tag: Any? = null)","description":"ktast.ast.Node.Declaration.PropertyDeclaration.PropertyDeclaration","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-property-declaration.html","searchKeys":["PropertyDeclaration","constructor(modifiers: Node.Modifiers?, valOrVarKeyword: Node.Keyword.ValOrVarKeyword, lAngle: Node.Keyword.Less?, typeParams: Node.TypeParams?, rAngle: Node.Keyword.Greater?, receiverType: Node.Type?, lPar: Node.Keyword.LPar?, variables: List<Node.Variable>, trailingComma: Node.Keyword.Comma?, rPar: Node.Keyword.RPar?, typeConstraintSet: Node.PostModifier.TypeConstraintSet?, equals: Node.Keyword.Equal?, initializer: Node.Expression?, propertyDelegate: Node.Declaration.PropertyDeclaration.PropertyDelegate?, accessors: List<Node.Declaration.PropertyDeclaration.Accessor>, tag: Any? = null)","ktast.ast.Node.Declaration.PropertyDeclaration.PropertyDeclaration"]},{"name":"constructor(modifiers: Node.Modifiers?, valOrVarKeyword: Node.Keyword.ValOrVarKeyword?, name: Node.Expression.NameExpression, type: Node.Type?, equals: Node.Keyword.Equal?, defaultValue: Node.Expression?, tag: Any? = null)","description":"ktast.ast.Node.FunctionParam.FunctionParam","location":"ast/ktast.ast/-node/-function-param/-function-param.html","searchKeys":["FunctionParam","constructor(modifiers: Node.Modifiers?, valOrVarKeyword: Node.Keyword.ValOrVarKeyword?, name: Node.Expression.NameExpression, type: Node.Type?, equals: Node.Keyword.Equal?, defaultValue: Node.Expression?, tag: Any? = null)","ktast.ast.Node.FunctionParam.FunctionParam"]},{"name":"constructor(name: Node.Expression.NameExpression, lAngle: Node.Keyword.Less?, typeArgs: Node.TypeArgs?, rAngle: Node.Keyword.Greater?, tag: Any? = null)","description":"ktast.ast.Node.Type.SimpleType.SimpleTypeQualifier.SimpleTypeQualifier","location":"ast/ktast.ast/-node/-type/-simple-type/-simple-type-qualifier/-simple-type-qualifier.html","searchKeys":["SimpleTypeQualifier","constructor(name: Node.Expression.NameExpression, lAngle: Node.Keyword.Less?, typeArgs: Node.TypeArgs?, rAngle: Node.Keyword.Greater?, tag: Any? = null)","ktast.ast.Node.Type.SimpleType.SimpleTypeQualifier.SimpleTypeQualifier"]},{"name":"constructor(name: Node.Expression.NameExpression, tag: Any? = null)","description":"ktast.ast.Node.ImportDirective.ImportAlias.ImportAlias","location":"ast/ktast.ast/-node/-import-directive/-import-alias/-import-alias.html","searchKeys":["ImportAlias","constructor(name: Node.Expression.NameExpression, tag: Any? = null)","ktast.ast.Node.ImportDirective.ImportAlias.ImportAlias"]},{"name":"constructor(name: Node.Expression.NameExpression?, asterisk: Node.Keyword.Asterisk?, expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.ValueArg.ValueArg","location":"ast/ktast.ast/-node/-value-arg/-value-arg.html","searchKeys":["ValueArg","constructor(name: Node.Expression.NameExpression?, asterisk: Node.Keyword.Asterisk?, expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.ValueArg.ValueArg"]},{"name":"constructor(name: Node.Expression.NameExpression?, type: Node.Type, tag: Any? = null)","description":"ktast.ast.Node.Type.FunctionType.FunctionTypeParam.FunctionTypeParam","location":"ast/ktast.ast/-node/-type/-function-type/-function-type-param/-function-type-param.html","searchKeys":["FunctionTypeParam","constructor(name: Node.Expression.NameExpression?, type: Node.Type, tag: Any? = null)","ktast.ast.Node.Type.FunctionType.FunctionTypeParam.FunctionTypeParam"]},{"name":"constructor(operator: Node.Expression.UnaryExpression.UnaryOperator, expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.Expression.PrefixUnaryExpression.PrefixUnaryExpression","location":"ast/ktast.ast/-node/-expression/-prefix-unary-expression/-prefix-unary-expression.html","searchKeys":["PrefixUnaryExpression","constructor(operator: Node.Expression.UnaryExpression.UnaryOperator, expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.Expression.PrefixUnaryExpression.PrefixUnaryExpression"]},{"name":"constructor(operator: Node.Expression.WhenExpression.WhenConditionRangeOperator, expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.Expression.WhenExpression.RangeWhenCondition.RangeWhenCondition","location":"ast/ktast.ast/-node/-expression/-when-expression/-range-when-condition/-range-when-condition.html","searchKeys":["RangeWhenCondition","constructor(operator: Node.Expression.WhenExpression.WhenConditionRangeOperator, expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.Expression.WhenExpression.RangeWhenCondition.RangeWhenCondition"]},{"name":"constructor(operator: Node.Expression.WhenExpression.WhenConditionTypeOperator, type: Node.Type, tag: Any? = null)","description":"ktast.ast.Node.Expression.WhenExpression.TypeWhenCondition.TypeWhenCondition","location":"ast/ktast.ast/-node/-expression/-when-expression/-type-when-condition/-type-when-condition.html","searchKeys":["TypeWhenCondition","constructor(operator: Node.Expression.WhenExpression.WhenConditionTypeOperator, type: Node.Type, tag: Any? = null)","ktast.ast.Node.Expression.WhenExpression.TypeWhenCondition.TypeWhenCondition"]},{"name":"constructor(params: Node.LambdaParams?, lBrace: Node.Keyword.LBrace, lambdaBody: Node.Expression.LambdaExpression.LambdaBody?, rBrace: Node.Keyword.RBrace, tag: Any? = null)","description":"ktast.ast.Node.Expression.LambdaExpression.LambdaExpression","location":"ast/ktast.ast/-node/-expression/-lambda-expression/-lambda-expression.html","searchKeys":["LambdaExpression","constructor(params: Node.LambdaParams?, lBrace: Node.Keyword.LBrace, lambdaBody: Node.Expression.LambdaExpression.LambdaBody?, rBrace: Node.Keyword.RBrace, tag: Any? = null)","ktast.ast.Node.Expression.LambdaExpression.LambdaExpression"]},{"name":"constructor(property: Node.Declaration.PropertyDeclaration, tag: Any? = null)","description":"ktast.ast.Node.Expression.PropertyExpression.PropertyExpression","location":"ast/ktast.ast/-node/-expression/-property-expression/-property-expression.html","searchKeys":["PropertyExpression","constructor(property: Node.Declaration.PropertyDeclaration, tag: Any? = null)","ktast.ast.Node.Expression.PropertyExpression.PropertyExpression"]},{"name":"constructor(statements: List<Node.Statement>, tag: Any? = null)","description":"ktast.ast.Node.Expression.LambdaExpression.LambdaBody.LambdaBody","location":"ast/ktast.ast/-node/-expression/-lambda-expression/-lambda-body/-lambda-body.html","searchKeys":["LambdaBody","constructor(statements: List<Node.Statement>, tag: Any? = null)","ktast.ast.Node.Expression.LambdaExpression.LambdaBody.LambdaBody"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Expression.NullLiteralExpression.NullLiteralExpression","location":"ast/ktast.ast/-node/-expression/-null-literal-expression/-null-literal-expression.html","searchKeys":["NullLiteralExpression","constructor(tag: Any? = null)","ktast.ast.Node.Expression.NullLiteralExpression.NullLiteralExpression"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Extra.Semicolon.Semicolon","location":"ast/ktast.ast/-node/-extra/-semicolon/-semicolon.html","searchKeys":["Semicolon","constructor(tag: Any? = null)","ktast.ast.Node.Extra.Semicolon.Semicolon"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Abstract.Abstract","location":"ast/ktast.ast/-node/-keyword/-abstract/-abstract.html","searchKeys":["Abstract","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Abstract.Abstract"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Actual.Actual","location":"ast/ktast.ast/-node/-keyword/-actual/-actual.html","searchKeys":["Actual","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Actual.Actual"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.AndAnd.AndAnd","location":"ast/ktast.ast/-node/-keyword/-and-and/-and-and.html","searchKeys":["AndAnd","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.AndAnd.AndAnd"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Annotation.Annotation","location":"ast/ktast.ast/-node/-keyword/-annotation/-annotation.html","searchKeys":["Annotation","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Annotation.Annotation"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.As.As","location":"ast/ktast.ast/-node/-keyword/-as/-as.html","searchKeys":["As","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.As.As"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.AsQuestion.AsQuestion","location":"ast/ktast.ast/-node/-keyword/-as-question/-as-question.html","searchKeys":["AsQuestion","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.AsQuestion.AsQuestion"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Asterisk.Asterisk","location":"ast/ktast.ast/-node/-keyword/-asterisk/-asterisk.html","searchKeys":["Asterisk","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Asterisk.Asterisk"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.AsteriskEqual.AsteriskEqual","location":"ast/ktast.ast/-node/-keyword/-asterisk-equal/-asterisk-equal.html","searchKeys":["AsteriskEqual","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.AsteriskEqual.AsteriskEqual"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.At.At","location":"ast/ktast.ast/-node/-keyword/-at/-at.html","searchKeys":["At","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.At.At"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.By.By","location":"ast/ktast.ast/-node/-keyword/-by/-by.html","searchKeys":["By","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.By.By"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Catch.Catch","location":"ast/ktast.ast/-node/-keyword/-catch/-catch.html","searchKeys":["Catch","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Catch.Catch"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Class.Class","location":"ast/ktast.ast/-node/-keyword/-class/-class.html","searchKeys":["Class","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Class.Class"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Colon.Colon","location":"ast/ktast.ast/-node/-keyword/-colon/-colon.html","searchKeys":["Colon","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Colon.Colon"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Comma.Comma","location":"ast/ktast.ast/-node/-keyword/-comma/-comma.html","searchKeys":["Comma","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Comma.Comma"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Companion.Companion","location":"ast/ktast.ast/-node/-keyword/-companion/-companion.html","searchKeys":["Companion","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Companion.Companion"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Const.Const","location":"ast/ktast.ast/-node/-keyword/-const/-const.html","searchKeys":["Const","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Const.Const"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Constructor.Constructor","location":"ast/ktast.ast/-node/-keyword/-constructor/-constructor.html","searchKeys":["Constructor","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Constructor.Constructor"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Contract.Contract","location":"ast/ktast.ast/-node/-keyword/-contract/-contract.html","searchKeys":["Contract","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Contract.Contract"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.CrossInline.CrossInline","location":"ast/ktast.ast/-node/-keyword/-cross-inline/-cross-inline.html","searchKeys":["CrossInline","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.CrossInline.CrossInline"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Data.Data","location":"ast/ktast.ast/-node/-keyword/-data/-data.html","searchKeys":["Data","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Data.Data"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Delegate.Delegate","location":"ast/ktast.ast/-node/-keyword/-delegate/-delegate.html","searchKeys":["Delegate","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Delegate.Delegate"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Do.Do","location":"ast/ktast.ast/-node/-keyword/-do/-do.html","searchKeys":["Do","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Do.Do"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Dot.Dot","location":"ast/ktast.ast/-node/-keyword/-dot/-dot.html","searchKeys":["Dot","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Dot.Dot"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.DotDot.DotDot","location":"ast/ktast.ast/-node/-keyword/-dot-dot/-dot-dot.html","searchKeys":["DotDot","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.DotDot.DotDot"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.DotDotLess.DotDotLess","location":"ast/ktast.ast/-node/-keyword/-dot-dot-less/-dot-dot-less.html","searchKeys":["DotDotLess","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.DotDotLess.DotDotLess"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Else.Else","location":"ast/ktast.ast/-node/-keyword/-else/-else.html","searchKeys":["Else","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Else.Else"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Enum.Enum","location":"ast/ktast.ast/-node/-keyword/-enum/-enum.html","searchKeys":["Enum","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Enum.Enum"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Equal.Equal","location":"ast/ktast.ast/-node/-keyword/-equal/-equal.html","searchKeys":["Equal","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Equal.Equal"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.EqualEqual.EqualEqual","location":"ast/ktast.ast/-node/-keyword/-equal-equal/-equal-equal.html","searchKeys":["EqualEqual","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.EqualEqual.EqualEqual"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Expect.Expect","location":"ast/ktast.ast/-node/-keyword/-expect/-expect.html","searchKeys":["Expect","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Expect.Expect"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.External.External","location":"ast/ktast.ast/-node/-keyword/-external/-external.html","searchKeys":["External","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.External.External"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Field.Field","location":"ast/ktast.ast/-node/-keyword/-field/-field.html","searchKeys":["Field","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Field.Field"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.File.File","location":"ast/ktast.ast/-node/-keyword/-file/-file.html","searchKeys":["File","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.File.File"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Final.Final","location":"ast/ktast.ast/-node/-keyword/-final/-final.html","searchKeys":["Final","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Final.Final"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.For.For","location":"ast/ktast.ast/-node/-keyword/-for/-for.html","searchKeys":["For","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.For.For"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Fun.Fun","location":"ast/ktast.ast/-node/-keyword/-fun/-fun.html","searchKeys":["Fun","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Fun.Fun"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Get.Get","location":"ast/ktast.ast/-node/-keyword/-get/-get.html","searchKeys":["Get","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Get.Get"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Greater.Greater","location":"ast/ktast.ast/-node/-keyword/-greater/-greater.html","searchKeys":["Greater","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Greater.Greater"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.GreaterEqual.GreaterEqual","location":"ast/ktast.ast/-node/-keyword/-greater-equal/-greater-equal.html","searchKeys":["GreaterEqual","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.GreaterEqual.GreaterEqual"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.If.If","location":"ast/ktast.ast/-node/-keyword/-if/-if.html","searchKeys":["If","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.If.If"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Import.Import","location":"ast/ktast.ast/-node/-keyword/-import/-import.html","searchKeys":["Import","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Import.Import"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.In.In","location":"ast/ktast.ast/-node/-keyword/-in/-in.html","searchKeys":["In","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.In.In"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Infix.Infix","location":"ast/ktast.ast/-node/-keyword/-infix/-infix.html","searchKeys":["Infix","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Infix.Infix"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Inline.Inline","location":"ast/ktast.ast/-node/-keyword/-inline/-inline.html","searchKeys":["Inline","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Inline.Inline"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Inner.Inner","location":"ast/ktast.ast/-node/-keyword/-inner/-inner.html","searchKeys":["Inner","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Inner.Inner"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Interface.Interface","location":"ast/ktast.ast/-node/-keyword/-interface/-interface.html","searchKeys":["Interface","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Interface.Interface"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Internal.Internal","location":"ast/ktast.ast/-node/-keyword/-internal/-internal.html","searchKeys":["Internal","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Internal.Internal"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Is.Is","location":"ast/ktast.ast/-node/-keyword/-is/-is.html","searchKeys":["Is","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Is.Is"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.LBrace.LBrace","location":"ast/ktast.ast/-node/-keyword/-l-brace/-l-brace.html","searchKeys":["LBrace","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.LBrace.LBrace"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.LBracket.LBracket","location":"ast/ktast.ast/-node/-keyword/-l-bracket/-l-bracket.html","searchKeys":["LBracket","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.LBracket.LBracket"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.LPar.LPar","location":"ast/ktast.ast/-node/-keyword/-l-par/-l-par.html","searchKeys":["LPar","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.LPar.LPar"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.LateInit.LateInit","location":"ast/ktast.ast/-node/-keyword/-late-init/-late-init.html","searchKeys":["LateInit","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.LateInit.LateInit"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Less.Less","location":"ast/ktast.ast/-node/-keyword/-less/-less.html","searchKeys":["Less","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Less.Less"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.LessEqual.LessEqual","location":"ast/ktast.ast/-node/-keyword/-less-equal/-less-equal.html","searchKeys":["LessEqual","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.LessEqual.LessEqual"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Minus.Minus","location":"ast/ktast.ast/-node/-keyword/-minus/-minus.html","searchKeys":["Minus","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Minus.Minus"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.MinusEqual.MinusEqual","location":"ast/ktast.ast/-node/-keyword/-minus-equal/-minus-equal.html","searchKeys":["MinusEqual","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.MinusEqual.MinusEqual"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.MinusMinus.MinusMinus","location":"ast/ktast.ast/-node/-keyword/-minus-minus/-minus-minus.html","searchKeys":["MinusMinus","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.MinusMinus.MinusMinus"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Noinline.Noinline","location":"ast/ktast.ast/-node/-keyword/-noinline/-noinline.html","searchKeys":["Noinline","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Noinline.Noinline"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Not.Not","location":"ast/ktast.ast/-node/-keyword/-not/-not.html","searchKeys":["Not","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Not.Not"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.NotEqual.NotEqual","location":"ast/ktast.ast/-node/-keyword/-not-equal/-not-equal.html","searchKeys":["NotEqual","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.NotEqual.NotEqual"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.NotIn.NotIn","location":"ast/ktast.ast/-node/-keyword/-not-in/-not-in.html","searchKeys":["NotIn","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.NotIn.NotIn"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.NotIs.NotIs","location":"ast/ktast.ast/-node/-keyword/-not-is/-not-is.html","searchKeys":["NotIs","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.NotIs.NotIs"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.NotNot.NotNot","location":"ast/ktast.ast/-node/-keyword/-not-not/-not-not.html","searchKeys":["NotNot","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.NotNot.NotNot"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Object.Object","location":"ast/ktast.ast/-node/-keyword/-object/-object.html","searchKeys":["Object","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Object.Object"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Open.Open","location":"ast/ktast.ast/-node/-keyword/-open/-open.html","searchKeys":["Open","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Open.Open"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Operator.Operator","location":"ast/ktast.ast/-node/-keyword/-operator/-operator.html","searchKeys":["Operator","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Operator.Operator"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.OrOr.OrOr","location":"ast/ktast.ast/-node/-keyword/-or-or/-or-or.html","searchKeys":["OrOr","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.OrOr.OrOr"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Out.Out","location":"ast/ktast.ast/-node/-keyword/-out/-out.html","searchKeys":["Out","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Out.Out"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Override.Override","location":"ast/ktast.ast/-node/-keyword/-override/-override.html","searchKeys":["Override","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Override.Override"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Package.Package","location":"ast/ktast.ast/-node/-keyword/-package/-package.html","searchKeys":["Package","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Package.Package"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Param.Param","location":"ast/ktast.ast/-node/-keyword/-param/-param.html","searchKeys":["Param","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Param.Param"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Percent.Percent","location":"ast/ktast.ast/-node/-keyword/-percent/-percent.html","searchKeys":["Percent","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Percent.Percent"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.PercentEqual.PercentEqual","location":"ast/ktast.ast/-node/-keyword/-percent-equal/-percent-equal.html","searchKeys":["PercentEqual","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.PercentEqual.PercentEqual"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Plus.Plus","location":"ast/ktast.ast/-node/-keyword/-plus/-plus.html","searchKeys":["Plus","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Plus.Plus"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.PlusEqual.PlusEqual","location":"ast/ktast.ast/-node/-keyword/-plus-equal/-plus-equal.html","searchKeys":["PlusEqual","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.PlusEqual.PlusEqual"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.PlusPlus.PlusPlus","location":"ast/ktast.ast/-node/-keyword/-plus-plus/-plus-plus.html","searchKeys":["PlusPlus","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.PlusPlus.PlusPlus"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Private.Private","location":"ast/ktast.ast/-node/-keyword/-private/-private.html","searchKeys":["Private","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Private.Private"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Property.Property","location":"ast/ktast.ast/-node/-keyword/-property/-property.html","searchKeys":["Property","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Property.Property"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Protected.Protected","location":"ast/ktast.ast/-node/-keyword/-protected/-protected.html","searchKeys":["Protected","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Protected.Protected"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Public.Public","location":"ast/ktast.ast/-node/-keyword/-public/-public.html","searchKeys":["Public","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Public.Public"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Question.Question","location":"ast/ktast.ast/-node/-keyword/-question/-question.html","searchKeys":["Question","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Question.Question"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.QuestionColon.QuestionColon","location":"ast/ktast.ast/-node/-keyword/-question-colon/-question-colon.html","searchKeys":["QuestionColon","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.QuestionColon.QuestionColon"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.QuestionDot.QuestionDot","location":"ast/ktast.ast/-node/-keyword/-question-dot/-question-dot.html","searchKeys":["QuestionDot","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.QuestionDot.QuestionDot"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.RBrace.RBrace","location":"ast/ktast.ast/-node/-keyword/-r-brace/-r-brace.html","searchKeys":["RBrace","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.RBrace.RBrace"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.RBracket.RBracket","location":"ast/ktast.ast/-node/-keyword/-r-bracket/-r-bracket.html","searchKeys":["RBracket","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.RBracket.RBracket"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.RPar.RPar","location":"ast/ktast.ast/-node/-keyword/-r-par/-r-par.html","searchKeys":["RPar","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.RPar.RPar"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Receiver.Receiver","location":"ast/ktast.ast/-node/-keyword/-receiver/-receiver.html","searchKeys":["Receiver","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Receiver.Receiver"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Reified.Reified","location":"ast/ktast.ast/-node/-keyword/-reified/-reified.html","searchKeys":["Reified","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Reified.Reified"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Sealed.Sealed","location":"ast/ktast.ast/-node/-keyword/-sealed/-sealed.html","searchKeys":["Sealed","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Sealed.Sealed"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Set.Set","location":"ast/ktast.ast/-node/-keyword/-set/-set.html","searchKeys":["Set","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Set.Set"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.SetParam.SetParam","location":"ast/ktast.ast/-node/-keyword/-set-param/-set-param.html","searchKeys":["SetParam","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.SetParam.SetParam"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Slash.Slash","location":"ast/ktast.ast/-node/-keyword/-slash/-slash.html","searchKeys":["Slash","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Slash.Slash"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.SlashEqual.SlashEqual","location":"ast/ktast.ast/-node/-keyword/-slash-equal/-slash-equal.html","searchKeys":["SlashEqual","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.SlashEqual.SlashEqual"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Suspend.Suspend","location":"ast/ktast.ast/-node/-keyword/-suspend/-suspend.html","searchKeys":["Suspend","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Suspend.Suspend"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.TailRec.TailRec","location":"ast/ktast.ast/-node/-keyword/-tail-rec/-tail-rec.html","searchKeys":["TailRec","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.TailRec.TailRec"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Val.Val","location":"ast/ktast.ast/-node/-keyword/-val/-val.html","searchKeys":["Val","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Val.Val"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Value.Value","location":"ast/ktast.ast/-node/-keyword/-value/-value.html","searchKeys":["Value","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Value.Value"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Var.Var","location":"ast/ktast.ast/-node/-keyword/-var/-var.html","searchKeys":["Var","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Var.Var"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Vararg.Vararg","location":"ast/ktast.ast/-node/-keyword/-vararg/-vararg.html","searchKeys":["Vararg","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Vararg.Vararg"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.When.When","location":"ast/ktast.ast/-node/-keyword/-when/-when.html","searchKeys":["When","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.When.When"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.Where.Where","location":"ast/ktast.ast/-node/-keyword/-where/-where.html","searchKeys":["Where","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.Where.Where"]},{"name":"constructor(tag: Any? = null)","description":"ktast.ast.Node.Keyword.While.While","location":"ast/ktast.ast/-node/-keyword/-while/-while.html","searchKeys":["While","constructor(tag: Any? = null)","ktast.ast.Node.Keyword.While.While"]},{"name":"constructor(text: String, tag: Any? = null)","description":"ktast.ast.Node.Expression.BooleanLiteralExpression.BooleanLiteralExpression","location":"ast/ktast.ast/-node/-expression/-boolean-literal-expression/-boolean-literal-expression.html","searchKeys":["BooleanLiteralExpression","constructor(text: String, tag: Any? = null)","ktast.ast.Node.Expression.BooleanLiteralExpression.BooleanLiteralExpression"]},{"name":"constructor(text: String, tag: Any? = null)","description":"ktast.ast.Node.Expression.CharacterLiteralExpression.CharacterLiteralExpression","location":"ast/ktast.ast/-node/-expression/-character-literal-expression/-character-literal-expression.html","searchKeys":["CharacterLiteralExpression","constructor(text: String, tag: Any? = null)","ktast.ast.Node.Expression.CharacterLiteralExpression.CharacterLiteralExpression"]},{"name":"constructor(text: String, tag: Any? = null)","description":"ktast.ast.Node.Expression.IntegerLiteralExpression.IntegerLiteralExpression","location":"ast/ktast.ast/-node/-expression/-integer-literal-expression/-integer-literal-expression.html","searchKeys":["IntegerLiteralExpression","constructor(text: String, tag: Any? = null)","ktast.ast.Node.Expression.IntegerLiteralExpression.IntegerLiteralExpression"]},{"name":"constructor(text: String, tag: Any? = null)","description":"ktast.ast.Node.Expression.NameExpression.NameExpression","location":"ast/ktast.ast/-node/-expression/-name-expression/-name-expression.html","searchKeys":["NameExpression","constructor(text: String, tag: Any? = null)","ktast.ast.Node.Expression.NameExpression.NameExpression"]},{"name":"constructor(text: String, tag: Any? = null)","description":"ktast.ast.Node.Expression.RealLiteralExpression.RealLiteralExpression","location":"ast/ktast.ast/-node/-expression/-real-literal-expression/-real-literal-expression.html","searchKeys":["RealLiteralExpression","constructor(text: String, tag: Any? = null)","ktast.ast.Node.Expression.RealLiteralExpression.RealLiteralExpression"]},{"name":"constructor(text: String, tag: Any? = null)","description":"ktast.ast.Node.Expression.StringLiteralExpression.EscapeStringEntry.EscapeStringEntry","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-escape-string-entry/-escape-string-entry.html","searchKeys":["EscapeStringEntry","constructor(text: String, tag: Any? = null)","ktast.ast.Node.Expression.StringLiteralExpression.EscapeStringEntry.EscapeStringEntry"]},{"name":"constructor(text: String, tag: Any? = null)","description":"ktast.ast.Node.Expression.StringLiteralExpression.LiteralStringEntry.LiteralStringEntry","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-literal-string-entry/-literal-string-entry.html","searchKeys":["LiteralStringEntry","constructor(text: String, tag: Any? = null)","ktast.ast.Node.Expression.StringLiteralExpression.LiteralStringEntry.LiteralStringEntry"]},{"name":"constructor(text: String, tag: Any? = null)","description":"ktast.ast.Node.Extra.Comment.Comment","location":"ast/ktast.ast/-node/-extra/-comment/-comment.html","searchKeys":["Comment","constructor(text: String, tag: Any? = null)","ktast.ast.Node.Extra.Comment.Comment"]},{"name":"constructor(text: String, tag: Any? = null)","description":"ktast.ast.Node.Extra.Whitespace.Whitespace","location":"ast/ktast.ast/-node/-extra/-whitespace/-whitespace.html","searchKeys":["Whitespace","constructor(text: String, tag: Any? = null)","ktast.ast.Node.Extra.Whitespace.Whitespace"]},{"name":"constructor(type: Node.Type, byKeyword: Node.Keyword.By, expression: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.DelegationClassParent","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-delegation-class-parent/-delegation-class-parent.html","searchKeys":["DelegationClassParent","constructor(type: Node.Type, byKeyword: Node.Keyword.By, expression: Node.Expression, tag: Any? = null)","ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.DelegationClassParent"]},{"name":"constructor(type: Node.Type, tag: Any? = null)","description":"ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.TypeClassParent","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-type-class-parent/-type-class-parent.html","searchKeys":["TypeClassParent","constructor(type: Node.Type, tag: Any? = null)","ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.TypeClassParent"]},{"name":"constructor(type: Node.Type.SimpleType, lPar: Node.Keyword.LPar, args: Node.ValueArgs, rPar: Node.Keyword.RPar, tag: Any? = null)","description":"ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.ConstructorClassParent","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-constructor-class-parent/-constructor-class-parent.html","searchKeys":["ConstructorClassParent","constructor(type: Node.Type.SimpleType, lPar: Node.Keyword.LPar, args: Node.ValueArgs, rPar: Node.Keyword.RPar, tag: Any? = null)","ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.ConstructorClassParent"]},{"name":"constructor(type: Node.Type.SimpleType, lPar: Node.Keyword.LPar?, args: Node.ValueArgs?, rPar: Node.Keyword.RPar?, tag: Any? = null)","description":"ktast.ast.Node.Modifier.AnnotationSet.Annotation.Annotation","location":"ast/ktast.ast/-node/-modifier/-annotation-set/-annotation/-annotation.html","searchKeys":["Annotation","constructor(type: Node.Type.SimpleType, lPar: Node.Keyword.LPar?, args: Node.ValueArgs?, rPar: Node.Keyword.RPar?, tag: Any? = null)","ktast.ast.Node.Modifier.AnnotationSet.Annotation.Annotation"]},{"name":"constructor(typeArgType: Node.Type?, label: Node.Expression.NameExpression?, tag: Any? = null)","description":"ktast.ast.Node.Expression.SuperExpression.SuperExpression","location":"ast/ktast.ast/-node/-expression/-super-expression/-super-expression.html","searchKeys":["SuperExpression","constructor(typeArgType: Node.Type?, label: Node.Expression.NameExpression?, tag: Any? = null)","ktast.ast.Node.Expression.SuperExpression.SuperExpression"]},{"name":"constructor(whenConditions: List<Node.Expression.WhenExpression.WhenCondition>, trailingComma: Node.Keyword.Comma?, body: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.Expression.WhenExpression.ConditionalWhenBranch.ConditionalWhenBranch","location":"ast/ktast.ast/-node/-expression/-when-expression/-conditional-when-branch/-conditional-when-branch.html","searchKeys":["ConditionalWhenBranch","constructor(whenConditions: List<Node.Expression.WhenExpression.WhenCondition>, trailingComma: Node.Keyword.Comma?, body: Node.Expression, tag: Any? = null)","ktast.ast.Node.Expression.WhenExpression.ConditionalWhenBranch.ConditionalWhenBranch"]},{"name":"constructor(whenKeyword: Node.Keyword.When, lPar: Node.Keyword.LPar?, expression: Node.Expression?, rPar: Node.Keyword.RPar?, whenBranches: List<Node.Expression.WhenExpression.WhenBranch>, tag: Any? = null)","description":"ktast.ast.Node.Expression.WhenExpression.WhenExpression","location":"ast/ktast.ast/-node/-expression/-when-expression/-when-expression.html","searchKeys":["WhenExpression","constructor(whenKeyword: Node.Keyword.When, lPar: Node.Keyword.LPar?, expression: Node.Expression?, rPar: Node.Keyword.RPar?, whenBranches: List<Node.Expression.WhenExpression.WhenBranch>, tag: Any? = null)","ktast.ast.Node.Expression.WhenExpression.WhenExpression"]},{"name":"constructor(whereKeyword: Node.Keyword.Where, constraints: Node.PostModifier.TypeConstraintSet.TypeConstraints, tag: Any? = null)","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraintSet","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/-type-constraint-set.html","searchKeys":["TypeConstraintSet","constructor(whereKeyword: Node.Keyword.Where, constraints: Node.PostModifier.TypeConstraintSet.TypeConstraints, tag: Any? = null)","ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraintSet"]},{"name":"constructor(whileKeyword: Node.Keyword.While, lPar: Node.Keyword.LPar, condition: Node.Expression, rPar: Node.Keyword.RPar, body: Node.Expression, tag: Any? = null)","description":"ktast.ast.Node.Statement.WhileStatement.WhileStatement","location":"ast/ktast.ast/-node/-statement/-while-statement/-while-statement.html","searchKeys":["WhileStatement","constructor(whileKeyword: Node.Keyword.While, lPar: Node.Keyword.LPar, condition: Node.Expression, rPar: Node.Keyword.RPar, body: Node.Expression, tag: Any? = null)","ktast.ast.Node.Statement.WhileStatement.WhileStatement"]},{"name":"data class Abstract(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Abstract","location":"ast/ktast.ast/-node/-keyword/-abstract/index.html","searchKeys":["Abstract","data class Abstract(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Abstract"]},{"name":"data class Actual(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Actual","location":"ast/ktast.ast/-node/-keyword/-actual/index.html","searchKeys":["Actual","data class Actual(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Actual"]},{"name":"data class AndAnd(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.AndAnd","location":"ast/ktast.ast/-node/-keyword/-and-and/index.html","searchKeys":["AndAnd","data class AndAnd(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.AndAnd"]},{"name":"data class AnnotatedExpression(val annotationSets: List<Node.Modifier.AnnotationSet>, val statement: Node.Statement, var tag: Any? = null) : Node.Expression, Node.WithAnnotationSets","description":"ktast.ast.Node.Expression.AnnotatedExpression","location":"ast/ktast.ast/-node/-expression/-annotated-expression/index.html","searchKeys":["AnnotatedExpression","data class AnnotatedExpression(val annotationSets: List<Node.Modifier.AnnotationSet>, val statement: Node.Statement, var tag: Any? = null) : Node.Expression, Node.WithAnnotationSets","ktast.ast.Node.Expression.AnnotatedExpression"]},{"name":"data class Annotation(val type: Node.Type.SimpleType, val lPar: Node.Keyword.LPar?, val args: Node.ValueArgs?, val rPar: Node.Keyword.RPar?, var tag: Any? = null) : Node, Node.WithValueArgs","description":"ktast.ast.Node.Modifier.AnnotationSet.Annotation","location":"ast/ktast.ast/-node/-modifier/-annotation-set/-annotation/index.html","searchKeys":["Annotation","data class Annotation(val type: Node.Type.SimpleType, val lPar: Node.Keyword.LPar?, val args: Node.ValueArgs?, val rPar: Node.Keyword.RPar?, var tag: Any? = null) : Node, Node.WithValueArgs","ktast.ast.Node.Modifier.AnnotationSet.Annotation"]},{"name":"data class Annotation(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Annotation","location":"ast/ktast.ast/-node/-keyword/-annotation/index.html","searchKeys":["Annotation","data class Annotation(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Annotation"]},{"name":"data class AnnotationSet(val atSymbol: Node.Keyword.At?, val target: Node.Modifier.AnnotationSet.AnnotationTarget?, val colon: Node.Keyword.Colon?, val lBracket: Node.Keyword.LBracket?, val annotations: List<Node.Modifier.AnnotationSet.Annotation>, val rBracket: Node.Keyword.RBracket?, var tag: Any? = null) : Node.Modifier","description":"ktast.ast.Node.Modifier.AnnotationSet","location":"ast/ktast.ast/-node/-modifier/-annotation-set/index.html","searchKeys":["AnnotationSet","data class AnnotationSet(val atSymbol: Node.Keyword.At?, val target: Node.Modifier.AnnotationSet.AnnotationTarget?, val colon: Node.Keyword.Colon?, val lBracket: Node.Keyword.LBracket?, val annotations: List<Node.Modifier.AnnotationSet.Annotation>, val rBracket: Node.Keyword.RBracket?, var tag: Any? = null) : Node.Modifier","ktast.ast.Node.Modifier.AnnotationSet"]},{"name":"data class AnonymousFunctionExpression(val function: Node.Declaration.FunctionDeclaration, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.AnonymousFunctionExpression","location":"ast/ktast.ast/-node/-expression/-anonymous-function-expression/index.html","searchKeys":["AnonymousFunctionExpression","data class AnonymousFunctionExpression(val function: Node.Declaration.FunctionDeclaration, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.AnonymousFunctionExpression"]},{"name":"data class As(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryTypeExpression.BinaryTypeOperator","description":"ktast.ast.Node.Keyword.As","location":"ast/ktast.ast/-node/-keyword/-as/index.html","searchKeys":["As","data class As(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryTypeExpression.BinaryTypeOperator","ktast.ast.Node.Keyword.As"]},{"name":"data class AsQuestion(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryTypeExpression.BinaryTypeOperator","description":"ktast.ast.Node.Keyword.AsQuestion","location":"ast/ktast.ast/-node/-keyword/-as-question/index.html","searchKeys":["AsQuestion","data class AsQuestion(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryTypeExpression.BinaryTypeOperator","ktast.ast.Node.Keyword.AsQuestion"]},{"name":"data class Asterisk(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.Asterisk","location":"ast/ktast.ast/-node/-keyword/-asterisk/index.html","searchKeys":["Asterisk","data class Asterisk(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.Asterisk"]},{"name":"data class AsteriskEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.AsteriskEqual","location":"ast/ktast.ast/-node/-keyword/-asterisk-equal/index.html","searchKeys":["AsteriskEqual","data class AsteriskEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.AsteriskEqual"]},{"name":"data class At(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.At","location":"ast/ktast.ast/-node/-keyword/-at/index.html","searchKeys":["At","data class At(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.At"]},{"name":"data class BinaryExpression(val lhs: Node.Expression, val operator: Node.Expression.BinaryExpression.BinaryOperator, val rhs: Node.Expression, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.BinaryExpression","location":"ast/ktast.ast/-node/-expression/-binary-expression/index.html","searchKeys":["BinaryExpression","data class BinaryExpression(val lhs: Node.Expression, val operator: Node.Expression.BinaryExpression.BinaryOperator, val rhs: Node.Expression, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.BinaryExpression"]},{"name":"data class BinaryTypeExpression(val lhs: Node.Expression, val operator: Node.Expression.BinaryTypeExpression.BinaryTypeOperator, val rhs: Node.Type, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.BinaryTypeExpression","location":"ast/ktast.ast/-node/-expression/-binary-type-expression/index.html","searchKeys":["BinaryTypeExpression","data class BinaryTypeExpression(val lhs: Node.Expression, val operator: Node.Expression.BinaryTypeExpression.BinaryTypeOperator, val rhs: Node.Type, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.BinaryTypeExpression"]},{"name":"data class BlockExpression(val lBrace: Node.Keyword.LBrace, val statements: List<Node.Statement>, val rBrace: Node.Keyword.RBrace, var tag: Any? = null) : Node.Expression, Node.StatementsContainer","description":"ktast.ast.Node.Expression.BlockExpression","location":"ast/ktast.ast/-node/-expression/-block-expression/index.html","searchKeys":["BlockExpression","data class BlockExpression(val lBrace: Node.Keyword.LBrace, val statements: List<Node.Statement>, val rBrace: Node.Keyword.RBrace, var tag: Any? = null) : Node.Expression, Node.StatementsContainer","ktast.ast.Node.Expression.BlockExpression"]},{"name":"data class BooleanLiteralExpression(val text: String, var tag: Any? = null) : Node.Expression.ConstantLiteralExpression","description":"ktast.ast.Node.Expression.BooleanLiteralExpression","location":"ast/ktast.ast/-node/-expression/-boolean-literal-expression/index.html","searchKeys":["BooleanLiteralExpression","data class BooleanLiteralExpression(val text: String, var tag: Any? = null) : Node.Expression.ConstantLiteralExpression","ktast.ast.Node.Expression.BooleanLiteralExpression"]},{"name":"data class BreakExpression(val label: Node.Expression.NameExpression?, var tag: Any? = null) : Node.Expression, Node.Expression.WithLabel","description":"ktast.ast.Node.Expression.BreakExpression","location":"ast/ktast.ast/-node/-expression/-break-expression/index.html","searchKeys":["BreakExpression","data class BreakExpression(val label: Node.Expression.NameExpression?, var tag: Any? = null) : Node.Expression, Node.Expression.WithLabel","ktast.ast.Node.Expression.BreakExpression"]},{"name":"data class By(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.By","location":"ast/ktast.ast/-node/-keyword/-by/index.html","searchKeys":["By","data class By(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.By"]},{"name":"data class CallExpression(val calleeExpression: Node.Expression, val lAngle: Node.Keyword.Less?, val typeArgs: Node.TypeArgs?, val rAngle: Node.Keyword.Greater?, val lPar: Node.Keyword.LPar?, val args: Node.ValueArgs?, val rPar: Node.Keyword.RPar?, val lambdaArg: Node.Expression.CallExpression.LambdaArg?, var tag: Any? = null) : Node.Expression, Node.WithTypeArgs, Node.WithValueArgs","description":"ktast.ast.Node.Expression.CallExpression","location":"ast/ktast.ast/-node/-expression/-call-expression/index.html","searchKeys":["CallExpression","data class CallExpression(val calleeExpression: Node.Expression, val lAngle: Node.Keyword.Less?, val typeArgs: Node.TypeArgs?, val rAngle: Node.Keyword.Greater?, val lPar: Node.Keyword.LPar?, val args: Node.ValueArgs?, val rPar: Node.Keyword.RPar?, val lambdaArg: Node.Expression.CallExpression.LambdaArg?, var tag: Any? = null) : Node.Expression, Node.WithTypeArgs, Node.WithValueArgs","ktast.ast.Node.Expression.CallExpression"]},{"name":"data class CallableReferenceExpression(val lhs: Node.Expression?, val questionMarks: List<Node.Keyword.Question>, val rhs: Node.Expression.NameExpression, var tag: Any? = null) : Node.Expression.DoubleColonExpression","description":"ktast.ast.Node.Expression.CallableReferenceExpression","location":"ast/ktast.ast/-node/-expression/-callable-reference-expression/index.html","searchKeys":["CallableReferenceExpression","data class CallableReferenceExpression(val lhs: Node.Expression?, val questionMarks: List<Node.Keyword.Question>, val rhs: Node.Expression.NameExpression, var tag: Any? = null) : Node.Expression.DoubleColonExpression","ktast.ast.Node.Expression.CallableReferenceExpression"]},{"name":"data class Catch(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Catch","location":"ast/ktast.ast/-node/-keyword/-catch/index.html","searchKeys":["Catch","data class Catch(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Catch"]},{"name":"data class CatchClause(val catchKeyword: Node.Keyword.Catch, val lPar: Node.Keyword.LPar, val params: Node.FunctionParams, val rPar: Node.Keyword.RPar, val block: Node.Expression.BlockExpression, var tag: Any? = null) : Node, Node.WithFunctionParams","description":"ktast.ast.Node.Expression.TryExpression.CatchClause","location":"ast/ktast.ast/-node/-expression/-try-expression/-catch-clause/index.html","searchKeys":["CatchClause","data class CatchClause(val catchKeyword: Node.Keyword.Catch, val lPar: Node.Keyword.LPar, val params: Node.FunctionParams, val rPar: Node.Keyword.RPar, val block: Node.Expression.BlockExpression, var tag: Any? = null) : Node, Node.WithFunctionParams","ktast.ast.Node.Expression.TryExpression.CatchClause"]},{"name":"data class CharacterLiteralExpression(val text: String, var tag: Any? = null) : Node.Expression.ConstantLiteralExpression","description":"ktast.ast.Node.Expression.CharacterLiteralExpression","location":"ast/ktast.ast/-node/-expression/-character-literal-expression/index.html","searchKeys":["CharacterLiteralExpression","data class CharacterLiteralExpression(val text: String, var tag: Any? = null) : Node.Expression.ConstantLiteralExpression","ktast.ast.Node.Expression.CharacterLiteralExpression"]},{"name":"data class Class(var tag: Any? = null) : Node.Keyword, Node.Declaration.ClassDeclaration.ClassDeclarationKeyword","description":"ktast.ast.Node.Keyword.Class","location":"ast/ktast.ast/-node/-keyword/-class/index.html","searchKeys":["Class","data class Class(var tag: Any? = null) : Node.Keyword, Node.Declaration.ClassDeclaration.ClassDeclarationKeyword","ktast.ast.Node.Keyword.Class"]},{"name":"data class ClassBody(val lBrace: Node.Keyword.LBrace, val enumEntries: List<Node.Declaration.ClassDeclaration.ClassBody.EnumEntry>, val hasTrailingCommaInEnumEntries: Boolean, val declarations: List<Node.Declaration>, val rBrace: Node.Keyword.RBrace, var tag: Any? = null) : Node, Node.DeclarationsContainer","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/index.html","searchKeys":["ClassBody","data class ClassBody(val lBrace: Node.Keyword.LBrace, val enumEntries: List<Node.Declaration.ClassDeclaration.ClassBody.EnumEntry>, val hasTrailingCommaInEnumEntries: Boolean, val declarations: List<Node.Declaration>, val rBrace: Node.Keyword.RBrace, var tag: Any? = null) : Node, Node.DeclarationsContainer","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody"]},{"name":"data class ClassDeclaration(val modifiers: Node.Modifiers?, val classDeclarationKeyword: Node.Declaration.ClassDeclaration.ClassDeclarationKeyword, val name: Node.Expression.NameExpression?, val lAngle: Node.Keyword.Less?, val typeParams: Node.TypeParams?, val rAngle: Node.Keyword.Greater?, val primaryConstructor: Node.Declaration.ClassDeclaration.PrimaryConstructor?, val classParents: Node.Declaration.ClassDeclaration.ClassParents?, val typeConstraintSet: Node.PostModifier.TypeConstraintSet?, val classBody: Node.Declaration.ClassDeclaration.ClassBody?, var tag: Any? = null) : Node.Declaration, Node.WithModifiers, Node.WithTypeParams","description":"ktast.ast.Node.Declaration.ClassDeclaration","location":"ast/ktast.ast/-node/-declaration/-class-declaration/index.html","searchKeys":["ClassDeclaration","data class ClassDeclaration(val modifiers: Node.Modifiers?, val classDeclarationKeyword: Node.Declaration.ClassDeclaration.ClassDeclarationKeyword, val name: Node.Expression.NameExpression?, val lAngle: Node.Keyword.Less?, val typeParams: Node.TypeParams?, val rAngle: Node.Keyword.Greater?, val primaryConstructor: Node.Declaration.ClassDeclaration.PrimaryConstructor?, val classParents: Node.Declaration.ClassDeclaration.ClassParents?, val typeConstraintSet: Node.PostModifier.TypeConstraintSet?, val classBody: Node.Declaration.ClassDeclaration.ClassBody?, var tag: Any? = null) : Node.Declaration, Node.WithModifiers, Node.WithTypeParams","ktast.ast.Node.Declaration.ClassDeclaration"]},{"name":"data class ClassLiteralExpression(val lhs: Node.Expression?, val questionMarks: List<Node.Keyword.Question>, var tag: Any? = null) : Node.Expression.DoubleColonExpression","description":"ktast.ast.Node.Expression.ClassLiteralExpression","location":"ast/ktast.ast/-node/-expression/-class-literal-expression/index.html","searchKeys":["ClassLiteralExpression","data class ClassLiteralExpression(val lhs: Node.Expression?, val questionMarks: List<Node.Keyword.Question>, var tag: Any? = null) : Node.Expression.DoubleColonExpression","ktast.ast.Node.Expression.ClassLiteralExpression"]},{"name":"data class ClassParents(val elements: List<Node.Declaration.ClassDeclaration.ClassParent>, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.Declaration.ClassDeclaration.ClassParent> ","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassParents","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-parents/index.html","searchKeys":["ClassParents","data class ClassParents(val elements: List<Node.Declaration.ClassDeclaration.ClassParent>, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.Declaration.ClassDeclaration.ClassParent> ","ktast.ast.Node.Declaration.ClassDeclaration.ClassParents"]},{"name":"data class CollectionLiteralExpression(val expressions: List<Node.Expression>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.CollectionLiteralExpression","location":"ast/ktast.ast/-node/-expression/-collection-literal-expression/index.html","searchKeys":["CollectionLiteralExpression","data class CollectionLiteralExpression(val expressions: List<Node.Expression>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.CollectionLiteralExpression"]},{"name":"data class Colon(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryTypeExpression.BinaryTypeOperator","description":"ktast.ast.Node.Keyword.Colon","location":"ast/ktast.ast/-node/-keyword/-colon/index.html","searchKeys":["Colon","data class Colon(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryTypeExpression.BinaryTypeOperator","ktast.ast.Node.Keyword.Colon"]},{"name":"data class Comma(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Comma","location":"ast/ktast.ast/-node/-keyword/-comma/index.html","searchKeys":["Comma","data class Comma(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Comma"]},{"name":"data class Comment(val text: String, var tag: Any? = null) : Node.Extra","description":"ktast.ast.Node.Extra.Comment","location":"ast/ktast.ast/-node/-extra/-comment/index.html","searchKeys":["Comment","data class Comment(val text: String, var tag: Any? = null) : Node.Extra","ktast.ast.Node.Extra.Comment"]},{"name":"data class Companion(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Companion","location":"ast/ktast.ast/-node/-keyword/-companion/index.html","searchKeys":["Companion","data class Companion(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Companion"]},{"name":"data class ConditionalWhenBranch(val whenConditions: List<Node.Expression.WhenExpression.WhenCondition>, val trailingComma: Node.Keyword.Comma?, val body: Node.Expression, var tag: Any? = null) : Node.Expression.WhenExpression.WhenBranch","description":"ktast.ast.Node.Expression.WhenExpression.ConditionalWhenBranch","location":"ast/ktast.ast/-node/-expression/-when-expression/-conditional-when-branch/index.html","searchKeys":["ConditionalWhenBranch","data class ConditionalWhenBranch(val whenConditions: List<Node.Expression.WhenExpression.WhenCondition>, val trailingComma: Node.Keyword.Comma?, val body: Node.Expression, var tag: Any? = null) : Node.Expression.WhenExpression.WhenBranch","ktast.ast.Node.Expression.WhenExpression.ConditionalWhenBranch"]},{"name":"data class Const(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Const","location":"ast/ktast.ast/-node/-keyword/-const/index.html","searchKeys":["Const","data class Const(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Const"]},{"name":"data class Constructor(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Constructor","location":"ast/ktast.ast/-node/-keyword/-constructor/index.html","searchKeys":["Constructor","data class Constructor(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Constructor"]},{"name":"data class ConstructorClassParent(val type: Node.Type.SimpleType, val lPar: Node.Keyword.LPar, val args: Node.ValueArgs, val rPar: Node.Keyword.RPar, var tag: Any? = null) : Node.Declaration.ClassDeclaration.ClassParent","description":"ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-constructor-class-parent/index.html","searchKeys":["ConstructorClassParent","data class ConstructorClassParent(val type: Node.Type.SimpleType, val lPar: Node.Keyword.LPar, val args: Node.ValueArgs, val rPar: Node.Keyword.RPar, var tag: Any? = null) : Node.Declaration.ClassDeclaration.ClassParent","ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent"]},{"name":"data class ContextReceiver(val lPar: Node.Keyword.LPar, val receiverTypes: Node.ContextReceiverTypes, val rPar: Node.Keyword.RPar, var tag: Any? = null) : Node","description":"ktast.ast.Node.ContextReceiver","location":"ast/ktast.ast/-node/-context-receiver/index.html","searchKeys":["ContextReceiver","data class ContextReceiver(val lPar: Node.Keyword.LPar, val receiverTypes: Node.ContextReceiverTypes, val rPar: Node.Keyword.RPar, var tag: Any? = null) : Node","ktast.ast.Node.ContextReceiver"]},{"name":"data class ContextReceiverTypes(val elements: List<Node.Type>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.Type> ","description":"ktast.ast.Node.ContextReceiverTypes","location":"ast/ktast.ast/-node/-context-receiver-types/index.html","searchKeys":["ContextReceiverTypes","data class ContextReceiverTypes(val elements: List<Node.Type>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.Type> ","ktast.ast.Node.ContextReceiverTypes"]},{"name":"data class ContinueExpression(val label: Node.Expression.NameExpression?, var tag: Any? = null) : Node.Expression, Node.Expression.WithLabel","description":"ktast.ast.Node.Expression.ContinueExpression","location":"ast/ktast.ast/-node/-expression/-continue-expression/index.html","searchKeys":["ContinueExpression","data class ContinueExpression(val label: Node.Expression.NameExpression?, var tag: Any? = null) : Node.Expression, Node.Expression.WithLabel","ktast.ast.Node.Expression.ContinueExpression"]},{"name":"data class Contract(val contractKeyword: Node.Keyword.Contract, val lBracket: Node.Keyword.LBracket, val contractEffects: Node.PostModifier.Contract.ContractEffects, val rBracket: Node.Keyword.RBracket, var tag: Any? = null) : Node.PostModifier","description":"ktast.ast.Node.PostModifier.Contract","location":"ast/ktast.ast/-node/-post-modifier/-contract/index.html","searchKeys":["Contract","data class Contract(val contractKeyword: Node.Keyword.Contract, val lBracket: Node.Keyword.LBracket, val contractEffects: Node.PostModifier.Contract.ContractEffects, val rBracket: Node.Keyword.RBracket, var tag: Any? = null) : Node.PostModifier","ktast.ast.Node.PostModifier.Contract"]},{"name":"data class Contract(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Contract","location":"ast/ktast.ast/-node/-keyword/-contract/index.html","searchKeys":["Contract","data class Contract(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Contract"]},{"name":"data class ContractEffects(val elements: List<Node.Expression>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.Expression> ","description":"ktast.ast.Node.PostModifier.Contract.ContractEffects","location":"ast/ktast.ast/-node/-post-modifier/-contract/-contract-effects/index.html","searchKeys":["ContractEffects","data class ContractEffects(val elements: List<Node.Expression>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.Expression> ","ktast.ast.Node.PostModifier.Contract.ContractEffects"]},{"name":"data class CrossInline(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.CrossInline","location":"ast/ktast.ast/-node/-keyword/-cross-inline/index.html","searchKeys":["CrossInline","data class CrossInline(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.CrossInline"]},{"name":"data class Data(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Data","location":"ast/ktast.ast/-node/-keyword/-data/index.html","searchKeys":["Data","data class Data(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Data"]},{"name":"data class Delegate(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","description":"ktast.ast.Node.Keyword.Delegate","location":"ast/ktast.ast/-node/-keyword/-delegate/index.html","searchKeys":["Delegate","data class Delegate(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","ktast.ast.Node.Keyword.Delegate"]},{"name":"data class DelegationClassParent(val type: Node.Type, val byKeyword: Node.Keyword.By, val expression: Node.Expression, var tag: Any? = null) : Node.Declaration.ClassDeclaration.ClassParent","description":"ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-delegation-class-parent/index.html","searchKeys":["DelegationClassParent","data class DelegationClassParent(val type: Node.Type, val byKeyword: Node.Keyword.By, val expression: Node.Expression, var tag: Any? = null) : Node.Declaration.ClassDeclaration.ClassParent","ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent"]},{"name":"data class Do(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Do","location":"ast/ktast.ast/-node/-keyword/-do/index.html","searchKeys":["Do","data class Do(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Do"]},{"name":"data class DoWhileStatement(val doKeyword: Node.Keyword.Do, val body: Node.Expression, val whileKeyword: Node.Keyword.While, val lPar: Node.Keyword.LPar, val condition: Node.Expression, val rPar: Node.Keyword.RPar, var tag: Any? = null) : Node.Statement.WhileStatementBase","description":"ktast.ast.Node.Statement.DoWhileStatement","location":"ast/ktast.ast/-node/-statement/-do-while-statement/index.html","searchKeys":["DoWhileStatement","data class DoWhileStatement(val doKeyword: Node.Keyword.Do, val body: Node.Expression, val whileKeyword: Node.Keyword.While, val lPar: Node.Keyword.LPar, val condition: Node.Expression, val rPar: Node.Keyword.RPar, var tag: Any? = null) : Node.Statement.WhileStatementBase","ktast.ast.Node.Statement.DoWhileStatement"]},{"name":"data class Dot(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.Dot","location":"ast/ktast.ast/-node/-keyword/-dot/index.html","searchKeys":["Dot","data class Dot(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.Dot"]},{"name":"data class DotDot(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.DotDot","location":"ast/ktast.ast/-node/-keyword/-dot-dot/index.html","searchKeys":["DotDot","data class DotDot(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.DotDot"]},{"name":"data class DotDotLess(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.DotDotLess","location":"ast/ktast.ast/-node/-keyword/-dot-dot-less/index.html","searchKeys":["DotDotLess","data class DotDotLess(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.DotDotLess"]},{"name":"data class DynamicType(val modifiers: Node.Modifiers?, var tag: Any? = null) : Node.Type","description":"ktast.ast.Node.Type.DynamicType","location":"ast/ktast.ast/-node/-type/-dynamic-type/index.html","searchKeys":["DynamicType","data class DynamicType(val modifiers: Node.Modifiers?, var tag: Any? = null) : Node.Type","ktast.ast.Node.Type.DynamicType"]},{"name":"data class Else(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Else","location":"ast/ktast.ast/-node/-keyword/-else/index.html","searchKeys":["Else","data class Else(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Else"]},{"name":"data class ElseWhenBranch(val elseKeyword: Node.Keyword.Else, val body: Node.Expression, var tag: Any? = null) : Node.Expression.WhenExpression.WhenBranch","description":"ktast.ast.Node.Expression.WhenExpression.ElseWhenBranch","location":"ast/ktast.ast/-node/-expression/-when-expression/-else-when-branch/index.html","searchKeys":["ElseWhenBranch","data class ElseWhenBranch(val elseKeyword: Node.Keyword.Else, val body: Node.Expression, var tag: Any? = null) : Node.Expression.WhenExpression.WhenBranch","ktast.ast.Node.Expression.WhenExpression.ElseWhenBranch"]},{"name":"data class Enum(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Enum","location":"ast/ktast.ast/-node/-keyword/-enum/index.html","searchKeys":["Enum","data class Enum(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Enum"]},{"name":"data class EnumEntry(val modifiers: Node.Modifiers?, val name: Node.Expression.NameExpression, val lPar: Node.Keyword.LPar?, val args: Node.ValueArgs?, val rPar: Node.Keyword.RPar?, val classBody: Node.Declaration.ClassDeclaration.ClassBody?, var tag: Any? = null) : Node, Node.WithModifiers, Node.WithValueArgs","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-enum-entry/index.html","searchKeys":["EnumEntry","data class EnumEntry(val modifiers: Node.Modifiers?, val name: Node.Expression.NameExpression, val lPar: Node.Keyword.LPar?, val args: Node.ValueArgs?, val rPar: Node.Keyword.RPar?, val classBody: Node.Declaration.ClassDeclaration.ClassBody?, var tag: Any? = null) : Node, Node.WithModifiers, Node.WithValueArgs","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry"]},{"name":"data class Equal(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Equal","location":"ast/ktast.ast/-node/-keyword/-equal/index.html","searchKeys":["Equal","data class Equal(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Equal"]},{"name":"data class EqualEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.EqualEqual","location":"ast/ktast.ast/-node/-keyword/-equal-equal/index.html","searchKeys":["EqualEqual","data class EqualEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.EqualEqual"]},{"name":"data class EscapeStringEntry(val text: String, var tag: Any? = null) : Node.Expression.StringLiteralExpression.StringEntry, Node.SimpleTextNode","description":"ktast.ast.Node.Expression.StringLiteralExpression.EscapeStringEntry","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-escape-string-entry/index.html","searchKeys":["EscapeStringEntry","data class EscapeStringEntry(val text: String, var tag: Any? = null) : Node.Expression.StringLiteralExpression.StringEntry, Node.SimpleTextNode","ktast.ast.Node.Expression.StringLiteralExpression.EscapeStringEntry"]},{"name":"data class Expect(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Expect","location":"ast/ktast.ast/-node/-keyword/-expect/index.html","searchKeys":["Expect","data class Expect(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Expect"]},{"name":"data class ExpressionWhenCondition(val expression: Node.Expression, var tag: Any? = null) : Node.Expression.WhenExpression.WhenCondition","description":"ktast.ast.Node.Expression.WhenExpression.ExpressionWhenCondition","location":"ast/ktast.ast/-node/-expression/-when-expression/-expression-when-condition/index.html","searchKeys":["ExpressionWhenCondition","data class ExpressionWhenCondition(val expression: Node.Expression, var tag: Any? = null) : Node.Expression.WhenExpression.WhenCondition","ktast.ast.Node.Expression.WhenExpression.ExpressionWhenCondition"]},{"name":"data class External(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.External","location":"ast/ktast.ast/-node/-keyword/-external/index.html","searchKeys":["External","data class External(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.External"]},{"name":"data class Field(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","description":"ktast.ast.Node.Keyword.Field","location":"ast/ktast.ast/-node/-keyword/-field/index.html","searchKeys":["Field","data class Field(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","ktast.ast.Node.Keyword.Field"]},{"name":"data class File(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","description":"ktast.ast.Node.Keyword.File","location":"ast/ktast.ast/-node/-keyword/-file/index.html","searchKeys":["File","data class File(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","ktast.ast.Node.Keyword.File"]},{"name":"data class Final(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Final","location":"ast/ktast.ast/-node/-keyword/-final/index.html","searchKeys":["Final","data class Final(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Final"]},{"name":"data class For(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.For","location":"ast/ktast.ast/-node/-keyword/-for/index.html","searchKeys":["For","data class For(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.For"]},{"name":"data class ForStatement(val forKeyword: Node.Keyword.For, val lPar: Node.Keyword.LPar, val loopParam: Node.LambdaParam, val inKeyword: Node.Keyword.In, val loopRange: Node.Expression, val rPar: Node.Keyword.RPar, val body: Node.Expression, var tag: Any? = null) : Node.Statement","description":"ktast.ast.Node.Statement.ForStatement","location":"ast/ktast.ast/-node/-statement/-for-statement/index.html","searchKeys":["ForStatement","data class ForStatement(val forKeyword: Node.Keyword.For, val lPar: Node.Keyword.LPar, val loopParam: Node.LambdaParam, val inKeyword: Node.Keyword.In, val loopRange: Node.Expression, val rPar: Node.Keyword.RPar, val body: Node.Expression, var tag: Any? = null) : Node.Statement","ktast.ast.Node.Statement.ForStatement"]},{"name":"data class Fun(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Fun","location":"ast/ktast.ast/-node/-keyword/-fun/index.html","searchKeys":["Fun","data class Fun(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Fun"]},{"name":"data class FunctionDeclaration(val modifiers: Node.Modifiers?, val funKeyword: Node.Keyword.Fun, val lAngle: Node.Keyword.Less?, val typeParams: Node.TypeParams?, val rAngle: Node.Keyword.Greater?, val receiverType: Node.Type?, val name: Node.Expression.NameExpression?, val lPar: Node.Keyword.LPar?, val params: Node.FunctionParams?, val rPar: Node.Keyword.RPar?, val returnType: Node.Type?, val postModifiers: List<Node.PostModifier>, val equals: Node.Keyword.Equal?, val body: Node.Expression?, var tag: Any? = null) : Node.Declaration, Node.WithModifiers, Node.WithTypeParams, Node.WithFunctionParams, Node.WithPostModifiers, Node.WithFunctionBody","description":"ktast.ast.Node.Declaration.FunctionDeclaration","location":"ast/ktast.ast/-node/-declaration/-function-declaration/index.html","searchKeys":["FunctionDeclaration","data class FunctionDeclaration(val modifiers: Node.Modifiers?, val funKeyword: Node.Keyword.Fun, val lAngle: Node.Keyword.Less?, val typeParams: Node.TypeParams?, val rAngle: Node.Keyword.Greater?, val receiverType: Node.Type?, val name: Node.Expression.NameExpression?, val lPar: Node.Keyword.LPar?, val params: Node.FunctionParams?, val rPar: Node.Keyword.RPar?, val returnType: Node.Type?, val postModifiers: List<Node.PostModifier>, val equals: Node.Keyword.Equal?, val body: Node.Expression?, var tag: Any? = null) : Node.Declaration, Node.WithModifiers, Node.WithTypeParams, Node.WithFunctionParams, Node.WithPostModifiers, Node.WithFunctionBody","ktast.ast.Node.Declaration.FunctionDeclaration"]},{"name":"data class FunctionParam(val modifiers: Node.Modifiers?, val valOrVarKeyword: Node.Keyword.ValOrVarKeyword?, val name: Node.Expression.NameExpression, val type: Node.Type?, val equals: Node.Keyword.Equal?, val defaultValue: Node.Expression?, var tag: Any? = null) : Node, Node.WithModifiers","description":"ktast.ast.Node.FunctionParam","location":"ast/ktast.ast/-node/-function-param/index.html","searchKeys":["FunctionParam","data class FunctionParam(val modifiers: Node.Modifiers?, val valOrVarKeyword: Node.Keyword.ValOrVarKeyword?, val name: Node.Expression.NameExpression, val type: Node.Type?, val equals: Node.Keyword.Equal?, val defaultValue: Node.Expression?, var tag: Any? = null) : Node, Node.WithModifiers","ktast.ast.Node.FunctionParam"]},{"name":"data class FunctionParams(val elements: List<Node.FunctionParam>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.FunctionParam> ","description":"ktast.ast.Node.FunctionParams","location":"ast/ktast.ast/-node/-function-params/index.html","searchKeys":["FunctionParams","data class FunctionParams(val elements: List<Node.FunctionParam>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.FunctionParam> ","ktast.ast.Node.FunctionParams"]},{"name":"data class FunctionType(val modifiers: Node.Modifiers?, val contextReceiver: Node.ContextReceiver?, val receiverType: Node.Type?, val dotSymbol: Node.Keyword.Dot?, val lPar: Node.Keyword.LPar?, val params: Node.Type.FunctionType.FunctionTypeParams?, val rPar: Node.Keyword.RPar?, val returnType: Node.Type, var tag: Any? = null) : Node.Type","description":"ktast.ast.Node.Type.FunctionType","location":"ast/ktast.ast/-node/-type/-function-type/index.html","searchKeys":["FunctionType","data class FunctionType(val modifiers: Node.Modifiers?, val contextReceiver: Node.ContextReceiver?, val receiverType: Node.Type?, val dotSymbol: Node.Keyword.Dot?, val lPar: Node.Keyword.LPar?, val params: Node.Type.FunctionType.FunctionTypeParams?, val rPar: Node.Keyword.RPar?, val returnType: Node.Type, var tag: Any? = null) : Node.Type","ktast.ast.Node.Type.FunctionType"]},{"name":"data class FunctionTypeParam(val name: Node.Expression.NameExpression?, val type: Node.Type, var tag: Any? = null) : Node","description":"ktast.ast.Node.Type.FunctionType.FunctionTypeParam","location":"ast/ktast.ast/-node/-type/-function-type/-function-type-param/index.html","searchKeys":["FunctionTypeParam","data class FunctionTypeParam(val name: Node.Expression.NameExpression?, val type: Node.Type, var tag: Any? = null) : Node","ktast.ast.Node.Type.FunctionType.FunctionTypeParam"]},{"name":"data class FunctionTypeParams(val elements: List<Node.Type.FunctionType.FunctionTypeParam>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.Type.FunctionType.FunctionTypeParam> ","description":"ktast.ast.Node.Type.FunctionType.FunctionTypeParams","location":"ast/ktast.ast/-node/-type/-function-type/-function-type-params/index.html","searchKeys":["FunctionTypeParams","data class FunctionTypeParams(val elements: List<Node.Type.FunctionType.FunctionTypeParam>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.Type.FunctionType.FunctionTypeParam> ","ktast.ast.Node.Type.FunctionType.FunctionTypeParams"]},{"name":"data class Get(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","description":"ktast.ast.Node.Keyword.Get","location":"ast/ktast.ast/-node/-keyword/-get/index.html","searchKeys":["Get","data class Get(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","ktast.ast.Node.Keyword.Get"]},{"name":"data class Getter(val modifiers: Node.Modifiers?, val getKeyword: Node.Keyword.Get, val type: Node.Type?, val postModifiers: List<Node.PostModifier>, val equals: Node.Keyword.Equal?, val body: Node.Expression?, var tag: Any? = null) : Node.Declaration.PropertyDeclaration.Accessor","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Getter","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-getter/index.html","searchKeys":["Getter","data class Getter(val modifiers: Node.Modifiers?, val getKeyword: Node.Keyword.Get, val type: Node.Type?, val postModifiers: List<Node.PostModifier>, val equals: Node.Keyword.Equal?, val body: Node.Expression?, var tag: Any? = null) : Node.Declaration.PropertyDeclaration.Accessor","ktast.ast.Node.Declaration.PropertyDeclaration.Getter"]},{"name":"data class Greater(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.Greater","location":"ast/ktast.ast/-node/-keyword/-greater/index.html","searchKeys":["Greater","data class Greater(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.Greater"]},{"name":"data class GreaterEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.GreaterEqual","location":"ast/ktast.ast/-node/-keyword/-greater-equal/index.html","searchKeys":["GreaterEqual","data class GreaterEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.GreaterEqual"]},{"name":"data class If(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.If","location":"ast/ktast.ast/-node/-keyword/-if/index.html","searchKeys":["If","data class If(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.If"]},{"name":"data class IfExpression(val ifKeyword: Node.Keyword.If, val lPar: Node.Keyword.LPar, val condition: Node.Expression, val rPar: Node.Keyword.RPar, val body: Node.Expression, val elseKeyword: Node.Keyword.Else?, val elseBody: Node.Expression?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.IfExpression","location":"ast/ktast.ast/-node/-expression/-if-expression/index.html","searchKeys":["IfExpression","data class IfExpression(val ifKeyword: Node.Keyword.If, val lPar: Node.Keyword.LPar, val condition: Node.Expression, val rPar: Node.Keyword.RPar, val body: Node.Expression, val elseKeyword: Node.Keyword.Else?, val elseBody: Node.Expression?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.IfExpression"]},{"name":"data class Import(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Import","location":"ast/ktast.ast/-node/-keyword/-import/index.html","searchKeys":["Import","data class Import(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Import"]},{"name":"data class ImportAlias(val name: Node.Expression.NameExpression, var tag: Any? = null) : Node","description":"ktast.ast.Node.ImportDirective.ImportAlias","location":"ast/ktast.ast/-node/-import-directive/-import-alias/index.html","searchKeys":["ImportAlias","data class ImportAlias(val name: Node.Expression.NameExpression, var tag: Any? = null) : Node","ktast.ast.Node.ImportDirective.ImportAlias"]},{"name":"data class ImportDirective(val importKeyword: Node.Keyword.Import, val names: List<Node.Expression.NameExpression>, val importAlias: Node.ImportDirective.ImportAlias?, var tag: Any? = null) : Node","description":"ktast.ast.Node.ImportDirective","location":"ast/ktast.ast/-node/-import-directive/index.html","searchKeys":["ImportDirective","data class ImportDirective(val importKeyword: Node.Keyword.Import, val names: List<Node.Expression.NameExpression>, val importAlias: Node.ImportDirective.ImportAlias?, var tag: Any? = null) : Node","ktast.ast.Node.ImportDirective"]},{"name":"data class In(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator, Node.Modifier.KeywordModifier, Node.Expression.WhenExpression.WhenConditionRangeOperator","description":"ktast.ast.Node.Keyword.In","location":"ast/ktast.ast/-node/-keyword/-in/index.html","searchKeys":["In","data class In(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator, Node.Modifier.KeywordModifier, Node.Expression.WhenExpression.WhenConditionRangeOperator","ktast.ast.Node.Keyword.In"]},{"name":"data class IndexedAccessExpression(val expression: Node.Expression, val indices: List<Node.Expression>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.IndexedAccessExpression","location":"ast/ktast.ast/-node/-expression/-indexed-access-expression/index.html","searchKeys":["IndexedAccessExpression","data class IndexedAccessExpression(val expression: Node.Expression, val indices: List<Node.Expression>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.IndexedAccessExpression"]},{"name":"data class Infix(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Infix","location":"ast/ktast.ast/-node/-keyword/-infix/index.html","searchKeys":["Infix","data class Infix(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Infix"]},{"name":"data class Initializer(val modifiers: Node.Modifiers?, val block: Node.Expression.BlockExpression, var tag: Any? = null) : Node.Declaration, Node.WithModifiers","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.Initializer","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-initializer/index.html","searchKeys":["Initializer","data class Initializer(val modifiers: Node.Modifiers?, val block: Node.Expression.BlockExpression, var tag: Any? = null) : Node.Declaration, Node.WithModifiers","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.Initializer"]},{"name":"data class Inline(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Inline","location":"ast/ktast.ast/-node/-keyword/-inline/index.html","searchKeys":["Inline","data class Inline(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Inline"]},{"name":"data class Inner(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Inner","location":"ast/ktast.ast/-node/-keyword/-inner/index.html","searchKeys":["Inner","data class Inner(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Inner"]},{"name":"data class IntegerLiteralExpression(val text: String, var tag: Any? = null) : Node.Expression.ConstantLiteralExpression","description":"ktast.ast.Node.Expression.IntegerLiteralExpression","location":"ast/ktast.ast/-node/-expression/-integer-literal-expression/index.html","searchKeys":["IntegerLiteralExpression","data class IntegerLiteralExpression(val text: String, var tag: Any? = null) : Node.Expression.ConstantLiteralExpression","ktast.ast.Node.Expression.IntegerLiteralExpression"]},{"name":"data class Interface(var tag: Any? = null) : Node.Keyword, Node.Declaration.ClassDeclaration.ClassDeclarationKeyword","description":"ktast.ast.Node.Keyword.Interface","location":"ast/ktast.ast/-node/-keyword/-interface/index.html","searchKeys":["Interface","data class Interface(var tag: Any? = null) : Node.Keyword, Node.Declaration.ClassDeclaration.ClassDeclarationKeyword","ktast.ast.Node.Keyword.Interface"]},{"name":"data class Internal(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Internal","location":"ast/ktast.ast/-node/-keyword/-internal/index.html","searchKeys":["Internal","data class Internal(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Internal"]},{"name":"data class Is(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryTypeExpression.BinaryTypeOperator, Node.Expression.WhenExpression.WhenConditionTypeOperator","description":"ktast.ast.Node.Keyword.Is","location":"ast/ktast.ast/-node/-keyword/-is/index.html","searchKeys":["Is","data class Is(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryTypeExpression.BinaryTypeOperator, Node.Expression.WhenExpression.WhenConditionTypeOperator","ktast.ast.Node.Keyword.Is"]},{"name":"data class KotlinFile(val annotationSets: List<Node.Modifier.AnnotationSet>, val packageDirective: Node.PackageDirective?, val importDirectives: List<Node.ImportDirective>, val declarations: List<Node.Declaration>, var tag: Any? = null) : Node, Node.KotlinEntry, Node.DeclarationsContainer","description":"ktast.ast.Node.KotlinFile","location":"ast/ktast.ast/-node/-kotlin-file/index.html","searchKeys":["KotlinFile","data class KotlinFile(val annotationSets: List<Node.Modifier.AnnotationSet>, val packageDirective: Node.PackageDirective?, val importDirectives: List<Node.ImportDirective>, val declarations: List<Node.Declaration>, var tag: Any? = null) : Node, Node.KotlinEntry, Node.DeclarationsContainer","ktast.ast.Node.KotlinFile"]},{"name":"data class KotlinScript(val annotationSets: List<Node.Modifier.AnnotationSet>, val packageDirective: Node.PackageDirective?, val importDirectives: List<Node.ImportDirective>, val expressions: List<Node.Expression>, var tag: Any? = null) : Node, Node.KotlinEntry","description":"ktast.ast.Node.KotlinScript","location":"ast/ktast.ast/-node/-kotlin-script/index.html","searchKeys":["KotlinScript","data class KotlinScript(val annotationSets: List<Node.Modifier.AnnotationSet>, val packageDirective: Node.PackageDirective?, val importDirectives: List<Node.ImportDirective>, val expressions: List<Node.Expression>, var tag: Any? = null) : Node, Node.KotlinEntry","ktast.ast.Node.KotlinScript"]},{"name":"data class LBrace(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.LBrace","location":"ast/ktast.ast/-node/-keyword/-l-brace/index.html","searchKeys":["LBrace","data class LBrace(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.LBrace"]},{"name":"data class LBracket(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.LBracket","location":"ast/ktast.ast/-node/-keyword/-l-bracket/index.html","searchKeys":["LBracket","data class LBracket(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.LBracket"]},{"name":"data class LPar(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.LPar","location":"ast/ktast.ast/-node/-keyword/-l-par/index.html","searchKeys":["LPar","data class LPar(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.LPar"]},{"name":"data class LabeledExpression(val label: Node.Expression.NameExpression, val statement: Node.Statement, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.LabeledExpression","location":"ast/ktast.ast/-node/-expression/-labeled-expression/index.html","searchKeys":["LabeledExpression","data class LabeledExpression(val label: Node.Expression.NameExpression, val statement: Node.Statement, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.LabeledExpression"]},{"name":"data class LambdaArg(val annotationSets: List<Node.Modifier.AnnotationSet>, val label: Node.Expression.NameExpression?, val expression: Node.Expression.LambdaExpression, var tag: Any? = null) : Node, Node.WithAnnotationSets, Node.Expression.WithLabel","description":"ktast.ast.Node.Expression.CallExpression.LambdaArg","location":"ast/ktast.ast/-node/-expression/-call-expression/-lambda-arg/index.html","searchKeys":["LambdaArg","data class LambdaArg(val annotationSets: List<Node.Modifier.AnnotationSet>, val label: Node.Expression.NameExpression?, val expression: Node.Expression.LambdaExpression, var tag: Any? = null) : Node, Node.WithAnnotationSets, Node.Expression.WithLabel","ktast.ast.Node.Expression.CallExpression.LambdaArg"]},{"name":"data class LambdaBody(val statements: List<Node.Statement>, var tag: Any? = null) : Node.Expression, Node.StatementsContainer","description":"ktast.ast.Node.Expression.LambdaExpression.LambdaBody","location":"ast/ktast.ast/-node/-expression/-lambda-expression/-lambda-body/index.html","searchKeys":["LambdaBody","data class LambdaBody(val statements: List<Node.Statement>, var tag: Any? = null) : Node.Expression, Node.StatementsContainer","ktast.ast.Node.Expression.LambdaExpression.LambdaBody"]},{"name":"data class LambdaExpression(val params: Node.LambdaParams?, val lBrace: Node.Keyword.LBrace, val lambdaBody: Node.Expression.LambdaExpression.LambdaBody?, val rBrace: Node.Keyword.RBrace, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.LambdaExpression","location":"ast/ktast.ast/-node/-expression/-lambda-expression/index.html","searchKeys":["LambdaExpression","data class LambdaExpression(val params: Node.LambdaParams?, val lBrace: Node.Keyword.LBrace, val lambdaBody: Node.Expression.LambdaExpression.LambdaBody?, val rBrace: Node.Keyword.RBrace, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.LambdaExpression"]},{"name":"data class LambdaParam(val lPar: Node.Keyword.LPar?, val variables: List<Node.Variable>, val trailingComma: Node.Keyword.Comma?, val rPar: Node.Keyword.RPar?, val colon: Node.Keyword.Colon?, val destructType: Node.Type?, var tag: Any? = null) : Node","description":"ktast.ast.Node.LambdaParam","location":"ast/ktast.ast/-node/-lambda-param/index.html","searchKeys":["LambdaParam","data class LambdaParam(val lPar: Node.Keyword.LPar?, val variables: List<Node.Variable>, val trailingComma: Node.Keyword.Comma?, val rPar: Node.Keyword.RPar?, val colon: Node.Keyword.Colon?, val destructType: Node.Type?, var tag: Any? = null) : Node","ktast.ast.Node.LambdaParam"]},{"name":"data class LambdaParams(val elements: List<Node.LambdaParam>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.LambdaParam> ","description":"ktast.ast.Node.LambdaParams","location":"ast/ktast.ast/-node/-lambda-params/index.html","searchKeys":["LambdaParams","data class LambdaParams(val elements: List<Node.LambdaParam>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.LambdaParam> ","ktast.ast.Node.LambdaParams"]},{"name":"data class LateInit(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.LateInit","location":"ast/ktast.ast/-node/-keyword/-late-init/index.html","searchKeys":["LateInit","data class LateInit(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.LateInit"]},{"name":"data class Less(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.Less","location":"ast/ktast.ast/-node/-keyword/-less/index.html","searchKeys":["Less","data class Less(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.Less"]},{"name":"data class LessEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.LessEqual","location":"ast/ktast.ast/-node/-keyword/-less-equal/index.html","searchKeys":["LessEqual","data class LessEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.LessEqual"]},{"name":"data class LiteralStringEntry(val text: String, var tag: Any? = null) : Node.Expression.StringLiteralExpression.StringEntry, Node.SimpleTextNode","description":"ktast.ast.Node.Expression.StringLiteralExpression.LiteralStringEntry","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-literal-string-entry/index.html","searchKeys":["LiteralStringEntry","data class LiteralStringEntry(val text: String, var tag: Any? = null) : Node.Expression.StringLiteralExpression.StringEntry, Node.SimpleTextNode","ktast.ast.Node.Expression.StringLiteralExpression.LiteralStringEntry"]},{"name":"data class Minus(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator, Node.Expression.UnaryExpression.UnaryOperator","description":"ktast.ast.Node.Keyword.Minus","location":"ast/ktast.ast/-node/-keyword/-minus/index.html","searchKeys":["Minus","data class Minus(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator, Node.Expression.UnaryExpression.UnaryOperator","ktast.ast.Node.Keyword.Minus"]},{"name":"data class MinusEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.MinusEqual","location":"ast/ktast.ast/-node/-keyword/-minus-equal/index.html","searchKeys":["MinusEqual","data class MinusEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.MinusEqual"]},{"name":"data class MinusMinus(var tag: Any? = null) : Node.Keyword, Node.Expression.UnaryExpression.UnaryOperator","description":"ktast.ast.Node.Keyword.MinusMinus","location":"ast/ktast.ast/-node/-keyword/-minus-minus/index.html","searchKeys":["MinusMinus","data class MinusMinus(var tag: Any? = null) : Node.Keyword, Node.Expression.UnaryExpression.UnaryOperator","ktast.ast.Node.Keyword.MinusMinus"]},{"name":"data class Modifiers(val elements: List<Node.Modifier>, var tag: Any? = null) : Node.NodeList<Node.Modifier> ","description":"ktast.ast.Node.Modifiers","location":"ast/ktast.ast/-node/-modifiers/index.html","searchKeys":["Modifiers","data class Modifiers(val elements: List<Node.Modifier>, var tag: Any? = null) : Node.NodeList<Node.Modifier> ","ktast.ast.Node.Modifiers"]},{"name":"data class NameExpression(val text: String, var tag: Any? = null) : Node.Expression, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Expression.NameExpression","location":"ast/ktast.ast/-node/-expression/-name-expression/index.html","searchKeys":["NameExpression","data class NameExpression(val text: String, var tag: Any? = null) : Node.Expression, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Expression.NameExpression"]},{"name":"data class Noinline(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Noinline","location":"ast/ktast.ast/-node/-keyword/-noinline/index.html","searchKeys":["Noinline","data class Noinline(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Noinline"]},{"name":"data class Not(var tag: Any? = null) : Node.Keyword, Node.Expression.UnaryExpression.UnaryOperator","description":"ktast.ast.Node.Keyword.Not","location":"ast/ktast.ast/-node/-keyword/-not/index.html","searchKeys":["Not","data class Not(var tag: Any? = null) : Node.Keyword, Node.Expression.UnaryExpression.UnaryOperator","ktast.ast.Node.Keyword.Not"]},{"name":"data class NotEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.NotEqual","location":"ast/ktast.ast/-node/-keyword/-not-equal/index.html","searchKeys":["NotEqual","data class NotEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.NotEqual"]},{"name":"data class NotIn(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator, Node.Expression.WhenExpression.WhenConditionRangeOperator","description":"ktast.ast.Node.Keyword.NotIn","location":"ast/ktast.ast/-node/-keyword/-not-in/index.html","searchKeys":["NotIn","data class NotIn(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator, Node.Expression.WhenExpression.WhenConditionRangeOperator","ktast.ast.Node.Keyword.NotIn"]},{"name":"data class NotIs(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryTypeExpression.BinaryTypeOperator, Node.Expression.WhenExpression.WhenConditionTypeOperator","description":"ktast.ast.Node.Keyword.NotIs","location":"ast/ktast.ast/-node/-keyword/-not-is/index.html","searchKeys":["NotIs","data class NotIs(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryTypeExpression.BinaryTypeOperator, Node.Expression.WhenExpression.WhenConditionTypeOperator","ktast.ast.Node.Keyword.NotIs"]},{"name":"data class NotNot(var tag: Any? = null) : Node.Keyword, Node.Expression.UnaryExpression.UnaryOperator","description":"ktast.ast.Node.Keyword.NotNot","location":"ast/ktast.ast/-node/-keyword/-not-not/index.html","searchKeys":["NotNot","data class NotNot(var tag: Any? = null) : Node.Keyword, Node.Expression.UnaryExpression.UnaryOperator","ktast.ast.Node.Keyword.NotNot"]},{"name":"data class NullLiteralExpression(var tag: Any? = null) : Node.Expression.ConstantLiteralExpression","description":"ktast.ast.Node.Expression.NullLiteralExpression","location":"ast/ktast.ast/-node/-expression/-null-literal-expression/index.html","searchKeys":["NullLiteralExpression","data class NullLiteralExpression(var tag: Any? = null) : Node.Expression.ConstantLiteralExpression","ktast.ast.Node.Expression.NullLiteralExpression"]},{"name":"data class NullableType(val modifiers: Node.Modifiers?, val type: Node.Type, val questionMark: Node.Keyword.Question, var tag: Any? = null) : Node.Type","description":"ktast.ast.Node.Type.NullableType","location":"ast/ktast.ast/-node/-type/-nullable-type/index.html","searchKeys":["NullableType","data class NullableType(val modifiers: Node.Modifiers?, val type: Node.Type, val questionMark: Node.Keyword.Question, var tag: Any? = null) : Node.Type","ktast.ast.Node.Type.NullableType"]},{"name":"data class Object(var tag: Any? = null) : Node.Keyword, Node.Declaration.ClassDeclaration.ClassDeclarationKeyword","description":"ktast.ast.Node.Keyword.Object","location":"ast/ktast.ast/-node/-keyword/-object/index.html","searchKeys":["Object","data class Object(var tag: Any? = null) : Node.Keyword, Node.Declaration.ClassDeclaration.ClassDeclarationKeyword","ktast.ast.Node.Keyword.Object"]},{"name":"data class ObjectLiteralExpression(val declaration: Node.Declaration.ClassDeclaration, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.ObjectLiteralExpression","location":"ast/ktast.ast/-node/-expression/-object-literal-expression/index.html","searchKeys":["ObjectLiteralExpression","data class ObjectLiteralExpression(val declaration: Node.Declaration.ClassDeclaration, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.ObjectLiteralExpression"]},{"name":"data class Open(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Open","location":"ast/ktast.ast/-node/-keyword/-open/index.html","searchKeys":["Open","data class Open(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Open"]},{"name":"data class Operator(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Operator","location":"ast/ktast.ast/-node/-keyword/-operator/index.html","searchKeys":["Operator","data class Operator(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Operator"]},{"name":"data class OrOr(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.OrOr","location":"ast/ktast.ast/-node/-keyword/-or-or/index.html","searchKeys":["OrOr","data class OrOr(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.OrOr"]},{"name":"data class Out(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Out","location":"ast/ktast.ast/-node/-keyword/-out/index.html","searchKeys":["Out","data class Out(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Out"]},{"name":"data class Override(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Override","location":"ast/ktast.ast/-node/-keyword/-override/index.html","searchKeys":["Override","data class Override(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Override"]},{"name":"data class Package(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Package","location":"ast/ktast.ast/-node/-keyword/-package/index.html","searchKeys":["Package","data class Package(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Package"]},{"name":"data class PackageDirective(val modifiers: Node.Modifiers?, val packageKeyword: Node.Keyword.Package, val names: List<Node.Expression.NameExpression>, var tag: Any? = null) : Node, Node.WithModifiers","description":"ktast.ast.Node.PackageDirective","location":"ast/ktast.ast/-node/-package-directive/index.html","searchKeys":["PackageDirective","data class PackageDirective(val modifiers: Node.Modifiers?, val packageKeyword: Node.Keyword.Package, val names: List<Node.Expression.NameExpression>, var tag: Any? = null) : Node, Node.WithModifiers","ktast.ast.Node.PackageDirective"]},{"name":"data class Param(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","description":"ktast.ast.Node.Keyword.Param","location":"ast/ktast.ast/-node/-keyword/-param/index.html","searchKeys":["Param","data class Param(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","ktast.ast.Node.Keyword.Param"]},{"name":"data class ParenthesizedExpression(val expression: Node.Expression, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.ParenthesizedExpression","location":"ast/ktast.ast/-node/-expression/-parenthesized-expression/index.html","searchKeys":["ParenthesizedExpression","data class ParenthesizedExpression(val expression: Node.Expression, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.ParenthesizedExpression"]},{"name":"data class ParenthesizedType(val modifiers: Node.Modifiers?, val lPar: Node.Keyword.LPar, val type: Node.Type, val rPar: Node.Keyword.RPar, var tag: Any? = null) : Node.Type","description":"ktast.ast.Node.Type.ParenthesizedType","location":"ast/ktast.ast/-node/-type/-parenthesized-type/index.html","searchKeys":["ParenthesizedType","data class ParenthesizedType(val modifiers: Node.Modifiers?, val lPar: Node.Keyword.LPar, val type: Node.Type, val rPar: Node.Keyword.RPar, var tag: Any? = null) : Node.Type","ktast.ast.Node.Type.ParenthesizedType"]},{"name":"data class Percent(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.Percent","location":"ast/ktast.ast/-node/-keyword/-percent/index.html","searchKeys":["Percent","data class Percent(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.Percent"]},{"name":"data class PercentEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.PercentEqual","location":"ast/ktast.ast/-node/-keyword/-percent-equal/index.html","searchKeys":["PercentEqual","data class PercentEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.PercentEqual"]},{"name":"data class Plus(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator, Node.Expression.UnaryExpression.UnaryOperator","description":"ktast.ast.Node.Keyword.Plus","location":"ast/ktast.ast/-node/-keyword/-plus/index.html","searchKeys":["Plus","data class Plus(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator, Node.Expression.UnaryExpression.UnaryOperator","ktast.ast.Node.Keyword.Plus"]},{"name":"data class PlusEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.PlusEqual","location":"ast/ktast.ast/-node/-keyword/-plus-equal/index.html","searchKeys":["PlusEqual","data class PlusEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.PlusEqual"]},{"name":"data class PlusPlus(var tag: Any? = null) : Node.Keyword, Node.Expression.UnaryExpression.UnaryOperator","description":"ktast.ast.Node.Keyword.PlusPlus","location":"ast/ktast.ast/-node/-keyword/-plus-plus/index.html","searchKeys":["PlusPlus","data class PlusPlus(var tag: Any? = null) : Node.Keyword, Node.Expression.UnaryExpression.UnaryOperator","ktast.ast.Node.Keyword.PlusPlus"]},{"name":"data class PostfixUnaryExpression(val expression: Node.Expression, val operator: Node.Expression.UnaryExpression.UnaryOperator, var tag: Any? = null) : Node.Expression.UnaryExpression","description":"ktast.ast.Node.Expression.PostfixUnaryExpression","location":"ast/ktast.ast/-node/-expression/-postfix-unary-expression/index.html","searchKeys":["PostfixUnaryExpression","data class PostfixUnaryExpression(val expression: Node.Expression, val operator: Node.Expression.UnaryExpression.UnaryOperator, var tag: Any? = null) : Node.Expression.UnaryExpression","ktast.ast.Node.Expression.PostfixUnaryExpression"]},{"name":"data class PrefixUnaryExpression(val operator: Node.Expression.UnaryExpression.UnaryOperator, val expression: Node.Expression, var tag: Any? = null) : Node.Expression.UnaryExpression","description":"ktast.ast.Node.Expression.PrefixUnaryExpression","location":"ast/ktast.ast/-node/-expression/-prefix-unary-expression/index.html","searchKeys":["PrefixUnaryExpression","data class PrefixUnaryExpression(val operator: Node.Expression.UnaryExpression.UnaryOperator, val expression: Node.Expression, var tag: Any? = null) : Node.Expression.UnaryExpression","ktast.ast.Node.Expression.PrefixUnaryExpression"]},{"name":"data class PrimaryConstructor(val modifiers: Node.Modifiers?, val constructorKeyword: Node.Keyword.Constructor?, val lPar: Node.Keyword.LPar?, val params: Node.FunctionParams?, val rPar: Node.Keyword.RPar?, var tag: Any? = null) : Node, Node.WithModifiers, Node.WithFunctionParams","description":"ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-primary-constructor/index.html","searchKeys":["PrimaryConstructor","data class PrimaryConstructor(val modifiers: Node.Modifiers?, val constructorKeyword: Node.Keyword.Constructor?, val lPar: Node.Keyword.LPar?, val params: Node.FunctionParams?, val rPar: Node.Keyword.RPar?, var tag: Any? = null) : Node, Node.WithModifiers, Node.WithFunctionParams","ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor"]},{"name":"data class Private(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Private","location":"ast/ktast.ast/-node/-keyword/-private/index.html","searchKeys":["Private","data class Private(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Private"]},{"name":"data class Property(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","description":"ktast.ast.Node.Keyword.Property","location":"ast/ktast.ast/-node/-keyword/-property/index.html","searchKeys":["Property","data class Property(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","ktast.ast.Node.Keyword.Property"]},{"name":"data class PropertyDeclaration(val modifiers: Node.Modifiers?, val valOrVarKeyword: Node.Keyword.ValOrVarKeyword, val lAngle: Node.Keyword.Less?, val typeParams: Node.TypeParams?, val rAngle: Node.Keyword.Greater?, val receiverType: Node.Type?, val lPar: Node.Keyword.LPar?, val variables: List<Node.Variable>, val trailingComma: Node.Keyword.Comma?, val rPar: Node.Keyword.RPar?, val typeConstraintSet: Node.PostModifier.TypeConstraintSet?, val equals: Node.Keyword.Equal?, val initializer: Node.Expression?, val propertyDelegate: Node.Declaration.PropertyDeclaration.PropertyDelegate?, val accessors: List<Node.Declaration.PropertyDeclaration.Accessor>, var tag: Any? = null) : Node.Declaration, Node.WithModifiers, Node.WithTypeParams","description":"ktast.ast.Node.Declaration.PropertyDeclaration","location":"ast/ktast.ast/-node/-declaration/-property-declaration/index.html","searchKeys":["PropertyDeclaration","data class PropertyDeclaration(val modifiers: Node.Modifiers?, val valOrVarKeyword: Node.Keyword.ValOrVarKeyword, val lAngle: Node.Keyword.Less?, val typeParams: Node.TypeParams?, val rAngle: Node.Keyword.Greater?, val receiverType: Node.Type?, val lPar: Node.Keyword.LPar?, val variables: List<Node.Variable>, val trailingComma: Node.Keyword.Comma?, val rPar: Node.Keyword.RPar?, val typeConstraintSet: Node.PostModifier.TypeConstraintSet?, val equals: Node.Keyword.Equal?, val initializer: Node.Expression?, val propertyDelegate: Node.Declaration.PropertyDeclaration.PropertyDelegate?, val accessors: List<Node.Declaration.PropertyDeclaration.Accessor>, var tag: Any? = null) : Node.Declaration, Node.WithModifiers, Node.WithTypeParams","ktast.ast.Node.Declaration.PropertyDeclaration"]},{"name":"data class PropertyDelegate(val byKeyword: Node.Keyword.By, val expression: Node.Expression, var tag: Any? = null) : Node","description":"ktast.ast.Node.Declaration.PropertyDeclaration.PropertyDelegate","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-property-delegate/index.html","searchKeys":["PropertyDelegate","data class PropertyDelegate(val byKeyword: Node.Keyword.By, val expression: Node.Expression, var tag: Any? = null) : Node","ktast.ast.Node.Declaration.PropertyDeclaration.PropertyDelegate"]},{"name":"data class PropertyExpression(val property: Node.Declaration.PropertyDeclaration, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.PropertyExpression","location":"ast/ktast.ast/-node/-expression/-property-expression/index.html","searchKeys":["PropertyExpression","data class PropertyExpression(val property: Node.Declaration.PropertyDeclaration, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.PropertyExpression"]},{"name":"data class Protected(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Protected","location":"ast/ktast.ast/-node/-keyword/-protected/index.html","searchKeys":["Protected","data class Protected(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Protected"]},{"name":"data class Public(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Public","location":"ast/ktast.ast/-node/-keyword/-public/index.html","searchKeys":["Public","data class Public(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Public"]},{"name":"data class Question(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.Question","location":"ast/ktast.ast/-node/-keyword/-question/index.html","searchKeys":["Question","data class Question(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.Question"]},{"name":"data class QuestionColon(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.QuestionColon","location":"ast/ktast.ast/-node/-keyword/-question-colon/index.html","searchKeys":["QuestionColon","data class QuestionColon(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.QuestionColon"]},{"name":"data class QuestionDot(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.QuestionDot","location":"ast/ktast.ast/-node/-keyword/-question-dot/index.html","searchKeys":["QuestionDot","data class QuestionDot(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.QuestionDot"]},{"name":"data class RBrace(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.RBrace","location":"ast/ktast.ast/-node/-keyword/-r-brace/index.html","searchKeys":["RBrace","data class RBrace(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.RBrace"]},{"name":"data class RBracket(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.RBracket","location":"ast/ktast.ast/-node/-keyword/-r-bracket/index.html","searchKeys":["RBracket","data class RBracket(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.RBracket"]},{"name":"data class RPar(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.RPar","location":"ast/ktast.ast/-node/-keyword/-r-par/index.html","searchKeys":["RPar","data class RPar(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.RPar"]},{"name":"data class RangeWhenCondition(val operator: Node.Expression.WhenExpression.WhenConditionRangeOperator, val expression: Node.Expression, var tag: Any? = null) : Node.Expression.WhenExpression.WhenCondition","description":"ktast.ast.Node.Expression.WhenExpression.RangeWhenCondition","location":"ast/ktast.ast/-node/-expression/-when-expression/-range-when-condition/index.html","searchKeys":["RangeWhenCondition","data class RangeWhenCondition(val operator: Node.Expression.WhenExpression.WhenConditionRangeOperator, val expression: Node.Expression, var tag: Any? = null) : Node.Expression.WhenExpression.WhenCondition","ktast.ast.Node.Expression.WhenExpression.RangeWhenCondition"]},{"name":"data class RealLiteralExpression(val text: String, var tag: Any? = null) : Node.Expression.ConstantLiteralExpression","description":"ktast.ast.Node.Expression.RealLiteralExpression","location":"ast/ktast.ast/-node/-expression/-real-literal-expression/index.html","searchKeys":["RealLiteralExpression","data class RealLiteralExpression(val text: String, var tag: Any? = null) : Node.Expression.ConstantLiteralExpression","ktast.ast.Node.Expression.RealLiteralExpression"]},{"name":"data class Receiver(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","description":"ktast.ast.Node.Keyword.Receiver","location":"ast/ktast.ast/-node/-keyword/-receiver/index.html","searchKeys":["Receiver","data class Receiver(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","ktast.ast.Node.Keyword.Receiver"]},{"name":"data class Reified(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Reified","location":"ast/ktast.ast/-node/-keyword/-reified/index.html","searchKeys":["Reified","data class Reified(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Reified"]},{"name":"data class ReturnExpression(val label: Node.Expression.NameExpression?, val expression: Node.Expression?, var tag: Any? = null) : Node.Expression, Node.Expression.WithLabel","description":"ktast.ast.Node.Expression.ReturnExpression","location":"ast/ktast.ast/-node/-expression/-return-expression/index.html","searchKeys":["ReturnExpression","data class ReturnExpression(val label: Node.Expression.NameExpression?, val expression: Node.Expression?, var tag: Any? = null) : Node.Expression, Node.Expression.WithLabel","ktast.ast.Node.Expression.ReturnExpression"]},{"name":"data class Sealed(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Sealed","location":"ast/ktast.ast/-node/-keyword/-sealed/index.html","searchKeys":["Sealed","data class Sealed(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Sealed"]},{"name":"data class SecondaryConstructor(val modifiers: Node.Modifiers?, val constructorKeyword: Node.Keyword.Constructor, val lPar: Node.Keyword.LPar?, val params: Node.FunctionParams?, val rPar: Node.Keyword.RPar?, val delegationCall: Node.Expression.CallExpression?, val block: Node.Expression.BlockExpression?, var tag: Any? = null) : Node.Declaration, Node.WithModifiers, Node.WithFunctionParams","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-secondary-constructor/index.html","searchKeys":["SecondaryConstructor","data class SecondaryConstructor(val modifiers: Node.Modifiers?, val constructorKeyword: Node.Keyword.Constructor, val lPar: Node.Keyword.LPar?, val params: Node.FunctionParams?, val rPar: Node.Keyword.RPar?, val delegationCall: Node.Expression.CallExpression?, val block: Node.Expression.BlockExpression?, var tag: Any? = null) : Node.Declaration, Node.WithModifiers, Node.WithFunctionParams","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor"]},{"name":"data class Semicolon(var tag: Any? = null) : Node.Extra","description":"ktast.ast.Node.Extra.Semicolon","location":"ast/ktast.ast/-node/-extra/-semicolon/index.html","searchKeys":["Semicolon","data class Semicolon(var tag: Any? = null) : Node.Extra","ktast.ast.Node.Extra.Semicolon"]},{"name":"data class Set(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","description":"ktast.ast.Node.Keyword.Set","location":"ast/ktast.ast/-node/-keyword/-set/index.html","searchKeys":["Set","data class Set(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","ktast.ast.Node.Keyword.Set"]},{"name":"data class SetParam(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","description":"ktast.ast.Node.Keyword.SetParam","location":"ast/ktast.ast/-node/-keyword/-set-param/index.html","searchKeys":["SetParam","data class SetParam(var tag: Any? = null) : Node.Keyword, Node.Modifier.AnnotationSet.AnnotationTarget","ktast.ast.Node.Keyword.SetParam"]},{"name":"data class Setter(val modifiers: Node.Modifiers?, val setKeyword: Node.Keyword.Set, val params: Node.LambdaParams?, val postModifiers: List<Node.PostModifier>, val equals: Node.Keyword.Equal?, val body: Node.Expression?, var tag: Any? = null) : Node.Declaration.PropertyDeclaration.Accessor","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Setter","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-setter/index.html","searchKeys":["Setter","data class Setter(val modifiers: Node.Modifiers?, val setKeyword: Node.Keyword.Set, val params: Node.LambdaParams?, val postModifiers: List<Node.PostModifier>, val equals: Node.Keyword.Equal?, val body: Node.Expression?, var tag: Any? = null) : Node.Declaration.PropertyDeclaration.Accessor","ktast.ast.Node.Declaration.PropertyDeclaration.Setter"]},{"name":"data class SimpleType(val modifiers: Node.Modifiers?, val qualifiers: List<Node.Type.SimpleType.SimpleTypeQualifier>, val name: Node.Expression.NameExpression, val lAngle: Node.Keyword.Less?, val typeArgs: Node.TypeArgs?, val rAngle: Node.Keyword.Greater?, var tag: Any? = null) : Node.Type, Node.Type.NameWithTypeArgs","description":"ktast.ast.Node.Type.SimpleType","location":"ast/ktast.ast/-node/-type/-simple-type/index.html","searchKeys":["SimpleType","data class SimpleType(val modifiers: Node.Modifiers?, val qualifiers: List<Node.Type.SimpleType.SimpleTypeQualifier>, val name: Node.Expression.NameExpression, val lAngle: Node.Keyword.Less?, val typeArgs: Node.TypeArgs?, val rAngle: Node.Keyword.Greater?, var tag: Any? = null) : Node.Type, Node.Type.NameWithTypeArgs","ktast.ast.Node.Type.SimpleType"]},{"name":"data class SimpleTypeQualifier(val name: Node.Expression.NameExpression, val lAngle: Node.Keyword.Less?, val typeArgs: Node.TypeArgs?, val rAngle: Node.Keyword.Greater?, var tag: Any? = null) : Node, Node.Type.NameWithTypeArgs","description":"ktast.ast.Node.Type.SimpleType.SimpleTypeQualifier","location":"ast/ktast.ast/-node/-type/-simple-type/-simple-type-qualifier/index.html","searchKeys":["SimpleTypeQualifier","data class SimpleTypeQualifier(val name: Node.Expression.NameExpression, val lAngle: Node.Keyword.Less?, val typeArgs: Node.TypeArgs?, val rAngle: Node.Keyword.Greater?, var tag: Any? = null) : Node, Node.Type.NameWithTypeArgs","ktast.ast.Node.Type.SimpleType.SimpleTypeQualifier"]},{"name":"data class Slash(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.Slash","location":"ast/ktast.ast/-node/-keyword/-slash/index.html","searchKeys":["Slash","data class Slash(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.Slash"]},{"name":"data class SlashEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Keyword.SlashEqual","location":"ast/ktast.ast/-node/-keyword/-slash-equal/index.html","searchKeys":["SlashEqual","data class SlashEqual(var tag: Any? = null) : Node.Keyword, Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Keyword.SlashEqual"]},{"name":"data class StarProjection(val asterisk: Node.Keyword.Asterisk, var tag: Any? = null) : Node.TypeArg","description":"ktast.ast.Node.TypeArg.StarProjection","location":"ast/ktast.ast/-node/-type-arg/-star-projection/index.html","searchKeys":["StarProjection","data class StarProjection(val asterisk: Node.Keyword.Asterisk, var tag: Any? = null) : Node.TypeArg","ktast.ast.Node.TypeArg.StarProjection"]},{"name":"data class StringLiteralExpression(val entries: List<Node.Expression.StringLiteralExpression.StringEntry>, val raw: Boolean, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.StringLiteralExpression","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/index.html","searchKeys":["StringLiteralExpression","data class StringLiteralExpression(val entries: List<Node.Expression.StringLiteralExpression.StringEntry>, val raw: Boolean, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.StringLiteralExpression"]},{"name":"data class SuperExpression(val typeArgType: Node.Type?, val label: Node.Expression.NameExpression?, var tag: Any? = null) : Node.Expression, Node.Expression.WithLabel","description":"ktast.ast.Node.Expression.SuperExpression","location":"ast/ktast.ast/-node/-expression/-super-expression/index.html","searchKeys":["SuperExpression","data class SuperExpression(val typeArgType: Node.Type?, val label: Node.Expression.NameExpression?, var tag: Any? = null) : Node.Expression, Node.Expression.WithLabel","ktast.ast.Node.Expression.SuperExpression"]},{"name":"data class Suspend(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Suspend","location":"ast/ktast.ast/-node/-keyword/-suspend/index.html","searchKeys":["Suspend","data class Suspend(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Suspend"]},{"name":"data class TailRec(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.TailRec","location":"ast/ktast.ast/-node/-keyword/-tail-rec/index.html","searchKeys":["TailRec","data class TailRec(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.TailRec"]},{"name":"data class TemplateStringEntry(val expression: Node.Expression, val short: Boolean, var tag: Any? = null) : Node.Expression.StringLiteralExpression.StringEntry","description":"ktast.ast.Node.Expression.StringLiteralExpression.TemplateStringEntry","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-template-string-entry/index.html","searchKeys":["TemplateStringEntry","data class TemplateStringEntry(val expression: Node.Expression, val short: Boolean, var tag: Any? = null) : Node.Expression.StringLiteralExpression.StringEntry","ktast.ast.Node.Expression.StringLiteralExpression.TemplateStringEntry"]},{"name":"data class ThisExpression(val label: Node.Expression.NameExpression?, var tag: Any? = null) : Node.Expression, Node.Expression.WithLabel","description":"ktast.ast.Node.Expression.ThisExpression","location":"ast/ktast.ast/-node/-expression/-this-expression/index.html","searchKeys":["ThisExpression","data class ThisExpression(val label: Node.Expression.NameExpression?, var tag: Any? = null) : Node.Expression, Node.Expression.WithLabel","ktast.ast.Node.Expression.ThisExpression"]},{"name":"data class ThrowExpression(val expression: Node.Expression, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.ThrowExpression","location":"ast/ktast.ast/-node/-expression/-throw-expression/index.html","searchKeys":["ThrowExpression","data class ThrowExpression(val expression: Node.Expression, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.ThrowExpression"]},{"name":"data class TryExpression(val block: Node.Expression.BlockExpression, val catchClauses: List<Node.Expression.TryExpression.CatchClause>, val finallyBlock: Node.Expression.BlockExpression?, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.TryExpression","location":"ast/ktast.ast/-node/-expression/-try-expression/index.html","searchKeys":["TryExpression","data class TryExpression(val block: Node.Expression.BlockExpression, val catchClauses: List<Node.Expression.TryExpression.CatchClause>, val finallyBlock: Node.Expression.BlockExpression?, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.TryExpression"]},{"name":"data class TypeAliasDeclaration(val modifiers: Node.Modifiers?, val name: Node.Expression.NameExpression, val lAngle: Node.Keyword.Less?, val typeParams: Node.TypeParams?, val rAngle: Node.Keyword.Greater?, val equals: Node.Keyword.Equal, val type: Node.Type, var tag: Any? = null) : Node.Declaration, Node.WithModifiers, Node.WithTypeParams","description":"ktast.ast.Node.Declaration.TypeAliasDeclaration","location":"ast/ktast.ast/-node/-declaration/-type-alias-declaration/index.html","searchKeys":["TypeAliasDeclaration","data class TypeAliasDeclaration(val modifiers: Node.Modifiers?, val name: Node.Expression.NameExpression, val lAngle: Node.Keyword.Less?, val typeParams: Node.TypeParams?, val rAngle: Node.Keyword.Greater?, val equals: Node.Keyword.Equal, val type: Node.Type, var tag: Any? = null) : Node.Declaration, Node.WithModifiers, Node.WithTypeParams","ktast.ast.Node.Declaration.TypeAliasDeclaration"]},{"name":"data class TypeArgs(val elements: List<Node.TypeArg>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.TypeArg> ","description":"ktast.ast.Node.TypeArgs","location":"ast/ktast.ast/-node/-type-args/index.html","searchKeys":["TypeArgs","data class TypeArgs(val elements: List<Node.TypeArg>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.TypeArg> ","ktast.ast.Node.TypeArgs"]},{"name":"data class TypeClassParent(val type: Node.Type, var tag: Any? = null) : Node.Declaration.ClassDeclaration.ClassParent","description":"ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-type-class-parent/index.html","searchKeys":["TypeClassParent","data class TypeClassParent(val type: Node.Type, var tag: Any? = null) : Node.Declaration.ClassDeclaration.ClassParent","ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent"]},{"name":"data class TypeConstraint(val annotationSets: List<Node.Modifier.AnnotationSet>, val name: Node.Expression.NameExpression, val type: Node.Type, var tag: Any? = null) : Node, Node.WithAnnotationSets","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraint","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/-type-constraint/index.html","searchKeys":["TypeConstraint","data class TypeConstraint(val annotationSets: List<Node.Modifier.AnnotationSet>, val name: Node.Expression.NameExpression, val type: Node.Type, var tag: Any? = null) : Node, Node.WithAnnotationSets","ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraint"]},{"name":"data class TypeConstraintSet(val whereKeyword: Node.Keyword.Where, val constraints: Node.PostModifier.TypeConstraintSet.TypeConstraints, var tag: Any? = null) : Node.PostModifier","description":"ktast.ast.Node.PostModifier.TypeConstraintSet","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/index.html","searchKeys":["TypeConstraintSet","data class TypeConstraintSet(val whereKeyword: Node.Keyword.Where, val constraints: Node.PostModifier.TypeConstraintSet.TypeConstraints, var tag: Any? = null) : Node.PostModifier","ktast.ast.Node.PostModifier.TypeConstraintSet"]},{"name":"data class TypeConstraints(val elements: List<Node.PostModifier.TypeConstraintSet.TypeConstraint>, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.PostModifier.TypeConstraintSet.TypeConstraint> ","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraints","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/-type-constraints/index.html","searchKeys":["TypeConstraints","data class TypeConstraints(val elements: List<Node.PostModifier.TypeConstraintSet.TypeConstraint>, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.PostModifier.TypeConstraintSet.TypeConstraint> ","ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraints"]},{"name":"data class TypeParam(val modifiers: Node.Modifiers?, val name: Node.Expression.NameExpression, val type: Node.Type?, var tag: Any? = null) : Node, Node.WithModifiers","description":"ktast.ast.Node.TypeParam","location":"ast/ktast.ast/-node/-type-param/index.html","searchKeys":["TypeParam","data class TypeParam(val modifiers: Node.Modifiers?, val name: Node.Expression.NameExpression, val type: Node.Type?, var tag: Any? = null) : Node, Node.WithModifiers","ktast.ast.Node.TypeParam"]},{"name":"data class TypeParams(val elements: List<Node.TypeParam>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.TypeParam> ","description":"ktast.ast.Node.TypeParams","location":"ast/ktast.ast/-node/-type-params/index.html","searchKeys":["TypeParams","data class TypeParams(val elements: List<Node.TypeParam>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.TypeParam> ","ktast.ast.Node.TypeParams"]},{"name":"data class TypeProjection(val modifiers: Node.Modifiers?, val type: Node.Type, var tag: Any? = null) : Node.TypeArg","description":"ktast.ast.Node.TypeArg.TypeProjection","location":"ast/ktast.ast/-node/-type-arg/-type-projection/index.html","searchKeys":["TypeProjection","data class TypeProjection(val modifiers: Node.Modifiers?, val type: Node.Type, var tag: Any? = null) : Node.TypeArg","ktast.ast.Node.TypeArg.TypeProjection"]},{"name":"data class TypeWhenCondition(val operator: Node.Expression.WhenExpression.WhenConditionTypeOperator, val type: Node.Type, var tag: Any? = null) : Node.Expression.WhenExpression.WhenCondition","description":"ktast.ast.Node.Expression.WhenExpression.TypeWhenCondition","location":"ast/ktast.ast/-node/-expression/-when-expression/-type-when-condition/index.html","searchKeys":["TypeWhenCondition","data class TypeWhenCondition(val operator: Node.Expression.WhenExpression.WhenConditionTypeOperator, val type: Node.Type, var tag: Any? = null) : Node.Expression.WhenExpression.WhenCondition","ktast.ast.Node.Expression.WhenExpression.TypeWhenCondition"]},{"name":"data class Val(var tag: Any? = null) : Node.Keyword, Node.Keyword.ValOrVarKeyword","description":"ktast.ast.Node.Keyword.Val","location":"ast/ktast.ast/-node/-keyword/-val/index.html","searchKeys":["Val","data class Val(var tag: Any? = null) : Node.Keyword, Node.Keyword.ValOrVarKeyword","ktast.ast.Node.Keyword.Val"]},{"name":"data class Value(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Value","location":"ast/ktast.ast/-node/-keyword/-value/index.html","searchKeys":["Value","data class Value(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Value"]},{"name":"data class ValueArg(val name: Node.Expression.NameExpression?, val asterisk: Node.Keyword.Asterisk?, val expression: Node.Expression, var tag: Any? = null) : Node","description":"ktast.ast.Node.ValueArg","location":"ast/ktast.ast/-node/-value-arg/index.html","searchKeys":["ValueArg","data class ValueArg(val name: Node.Expression.NameExpression?, val asterisk: Node.Keyword.Asterisk?, val expression: Node.Expression, var tag: Any? = null) : Node","ktast.ast.Node.ValueArg"]},{"name":"data class ValueArgs(val elements: List<Node.ValueArg>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.ValueArg> ","description":"ktast.ast.Node.ValueArgs","location":"ast/ktast.ast/-node/-value-args/index.html","searchKeys":["ValueArgs","data class ValueArgs(val elements: List<Node.ValueArg>, val trailingComma: Node.Keyword.Comma?, var tag: Any? = null) : Node.CommaSeparatedNodeList<Node.ValueArg> ","ktast.ast.Node.ValueArgs"]},{"name":"data class Var(var tag: Any? = null) : Node.Keyword, Node.Keyword.ValOrVarKeyword","description":"ktast.ast.Node.Keyword.Var","location":"ast/ktast.ast/-node/-keyword/-var/index.html","searchKeys":["Var","data class Var(var tag: Any? = null) : Node.Keyword, Node.Keyword.ValOrVarKeyword","ktast.ast.Node.Keyword.Var"]},{"name":"data class Vararg(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","description":"ktast.ast.Node.Keyword.Vararg","location":"ast/ktast.ast/-node/-keyword/-vararg/index.html","searchKeys":["Vararg","data class Vararg(var tag: Any? = null) : Node.Keyword, Node.Modifier.KeywordModifier","ktast.ast.Node.Keyword.Vararg"]},{"name":"data class Variable(val modifiers: Node.Modifiers?, val name: Node.Expression.NameExpression, val type: Node.Type?, var tag: Any? = null) : Node, Node.WithModifiers","description":"ktast.ast.Node.Variable","location":"ast/ktast.ast/-node/-variable/index.html","searchKeys":["Variable","data class Variable(val modifiers: Node.Modifiers?, val name: Node.Expression.NameExpression, val type: Node.Type?, var tag: Any? = null) : Node, Node.WithModifiers","ktast.ast.Node.Variable"]},{"name":"data class When(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.When","location":"ast/ktast.ast/-node/-keyword/-when/index.html","searchKeys":["When","data class When(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.When"]},{"name":"data class WhenExpression(val whenKeyword: Node.Keyword.When, val lPar: Node.Keyword.LPar?, val expression: Node.Expression?, val rPar: Node.Keyword.RPar?, val whenBranches: List<Node.Expression.WhenExpression.WhenBranch>, var tag: Any? = null) : Node.Expression","description":"ktast.ast.Node.Expression.WhenExpression","location":"ast/ktast.ast/-node/-expression/-when-expression/index.html","searchKeys":["WhenExpression","data class WhenExpression(val whenKeyword: Node.Keyword.When, val lPar: Node.Keyword.LPar?, val expression: Node.Expression?, val rPar: Node.Keyword.RPar?, val whenBranches: List<Node.Expression.WhenExpression.WhenBranch>, var tag: Any? = null) : Node.Expression","ktast.ast.Node.Expression.WhenExpression"]},{"name":"data class Where(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.Where","location":"ast/ktast.ast/-node/-keyword/-where/index.html","searchKeys":["Where","data class Where(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.Where"]},{"name":"data class While(var tag: Any? = null) : Node.Keyword","description":"ktast.ast.Node.Keyword.While","location":"ast/ktast.ast/-node/-keyword/-while/index.html","searchKeys":["While","data class While(var tag: Any? = null) : Node.Keyword","ktast.ast.Node.Keyword.While"]},{"name":"data class WhileStatement(val whileKeyword: Node.Keyword.While, val lPar: Node.Keyword.LPar, val condition: Node.Expression, val rPar: Node.Keyword.RPar, val body: Node.Expression, var tag: Any? = null) : Node.Statement.WhileStatementBase","description":"ktast.ast.Node.Statement.WhileStatement","location":"ast/ktast.ast/-node/-statement/-while-statement/index.html","searchKeys":["WhileStatement","data class WhileStatement(val whileKeyword: Node.Keyword.While, val lPar: Node.Keyword.LPar, val condition: Node.Expression, val rPar: Node.Keyword.RPar, val body: Node.Expression, var tag: Any? = null) : Node.Statement.WhileStatementBase","ktast.ast.Node.Statement.WhileStatement"]},{"name":"data class Whitespace(val text: String, var tag: Any? = null) : Node.Extra","description":"ktast.ast.Node.Extra.Whitespace","location":"ast/ktast.ast/-node/-extra/-whitespace/index.html","searchKeys":["Whitespace","data class Whitespace(val text: String, var tag: Any? = null) : Node.Extra","ktast.ast.Node.Extra.Whitespace"]},{"name":"enum ExtraType : Enum<Dumper.ExtraType> ","description":"ktast.ast.Dumper.ExtraType","location":"ast/ktast.ast/-dumper/-extra-type/index.html","searchKeys":["ExtraType","enum ExtraType : Enum<Dumper.ExtraType> ","ktast.ast.Dumper.ExtraType"]},{"name":"fun <T : Appendable> write(v: Node, app: T, extrasMap: ExtrasMap? = null): T","description":"ktast.ast.Writer.Companion.write","location":"ast/ktast.ast/-writer/-companion/write.html","searchKeys":["write","fun <T : Appendable> write(v: Node, app: T, extrasMap: ExtrasMap? = null): T","ktast.ast.Writer.Companion.write"]},{"name":"fun <T : Node> postVisit(v: T, extrasMap: MutableExtrasMap? = null, fn: (v: Node, parent: Node?) -> Node?): T","description":"ktast.ast.MutableVisitor.Companion.postVisit","location":"ast/ktast.ast/-mutable-visitor/-companion/post-visit.html","searchKeys":["postVisit","fun <T : Node> postVisit(v: T, extrasMap: MutableExtrasMap? = null, fn: (v: Node, parent: Node?) -> Node?): T","ktast.ast.MutableVisitor.Companion.postVisit"]},{"name":"fun <T : Node> preVisit(v: T, extrasMap: MutableExtrasMap? = null, fn: (v: Node, parent: Node?) -> Node?): T","description":"ktast.ast.MutableVisitor.Companion.preVisit","location":"ast/ktast.ast/-mutable-visitor/-companion/pre-visit.html","searchKeys":["preVisit","fun <T : Node> preVisit(v: T, extrasMap: MutableExtrasMap? = null, fn: (v: Node, parent: Node?) -> Node?): T","ktast.ast.MutableVisitor.Companion.preVisit"]},{"name":"fun <T : Node> visit(v: T): T","description":"ktast.ast.MutableVisitor.visit","location":"ast/ktast.ast/-mutable-visitor/visit.html","searchKeys":["visit","fun <T : Node> visit(v: T): T","ktast.ast.MutableVisitor.visit"]},{"name":"fun dump(v: Node)","description":"ktast.ast.Dumper.dump","location":"ast/ktast.ast/-dumper/dump.html","searchKeys":["dump","fun dump(v: Node)","ktast.ast.Dumper.dump"]},{"name":"fun dump(v: Node, extrasMap: ExtrasMap? = null, verbose: Boolean = true): String","description":"ktast.ast.Dumper.Companion.dump","location":"ast/ktast.ast/-dumper/-companion/dump.html","searchKeys":["dump","fun dump(v: Node, extrasMap: ExtrasMap? = null, verbose: Boolean = true): String","ktast.ast.Dumper.Companion.dump"]},{"name":"fun markIf(v1: Any?, v2: Any?)","description":"ktast.ast.MutableVisitor.ChangedRef.markIf","location":"ast/ktast.ast/-mutable-visitor/-changed-ref/mark-if.html","searchKeys":["markIf","fun markIf(v1: Any?, v2: Any?)","ktast.ast.MutableVisitor.ChangedRef.markIf"]},{"name":"fun valueOf(value: String): Dumper.ExtraType","description":"ktast.ast.Dumper.ExtraType.valueOf","location":"ast/ktast.ast/-dumper/-extra-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Dumper.ExtraType","ktast.ast.Dumper.ExtraType.valueOf"]},{"name":"fun values(): Array<Dumper.ExtraType>","description":"ktast.ast.Dumper.ExtraType.values","location":"ast/ktast.ast/-dumper/-extra-type/values.html","searchKeys":["values","fun values(): Array<Dumper.ExtraType>","ktast.ast.Dumper.ExtraType.values"]},{"name":"fun visit(v: Node)","description":"ktast.ast.Visitor.visit","location":"ast/ktast.ast/-visitor/visit.html","searchKeys":["visit","fun visit(v: Node)","ktast.ast.Visitor.visit"]},{"name":"fun visit(v: Node, fn: (v: Node, parent: Node?) -> Unit)","description":"ktast.ast.Visitor.Companion.visit","location":"ast/ktast.ast/-visitor/-companion/visit.html","searchKeys":["visit","fun visit(v: Node, fn: (v: Node, parent: Node?) -> Unit)","ktast.ast.Visitor.Companion.visit"]},{"name":"fun write(v: Node)","description":"ktast.ast.Writer.write","location":"ast/ktast.ast/-writer/write.html","searchKeys":["write","fun write(v: Node)","ktast.ast.Writer.write"]},{"name":"fun write(v: Node, extrasMap: ExtrasMap? = null): String","description":"ktast.ast.Writer.Companion.write","location":"ast/ktast.ast/-writer/-companion/write.html","searchKeys":["write","fun write(v: Node, extrasMap: ExtrasMap? = null): String","ktast.ast.Writer.Companion.write"]},{"name":"interface Accessor : Node, Node.WithModifiers, Node.WithPostModifiers, Node.WithFunctionBody","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Accessor","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-accessor/index.html","searchKeys":["Accessor","interface Accessor : Node, Node.WithModifiers, Node.WithPostModifiers, Node.WithFunctionBody","ktast.ast.Node.Declaration.PropertyDeclaration.Accessor"]},{"name":"interface AnnotationTarget : Node.Keyword","description":"ktast.ast.Node.Modifier.AnnotationSet.AnnotationTarget","location":"ast/ktast.ast/-node/-modifier/-annotation-set/-annotation-target/index.html","searchKeys":["AnnotationTarget","interface AnnotationTarget : Node.Keyword","ktast.ast.Node.Modifier.AnnotationSet.AnnotationTarget"]},{"name":"interface BinaryOperator : Node.SimpleTextNode","description":"ktast.ast.Node.Expression.BinaryExpression.BinaryOperator","location":"ast/ktast.ast/-node/-expression/-binary-expression/-binary-operator/index.html","searchKeys":["BinaryOperator","interface BinaryOperator : Node.SimpleTextNode","ktast.ast.Node.Expression.BinaryExpression.BinaryOperator"]},{"name":"interface BinaryTypeOperator : Node.Keyword","description":"ktast.ast.Node.Expression.BinaryTypeExpression.BinaryTypeOperator","location":"ast/ktast.ast/-node/-expression/-binary-type-expression/-binary-type-operator/index.html","searchKeys":["BinaryTypeOperator","interface BinaryTypeOperator : Node.Keyword","ktast.ast.Node.Expression.BinaryTypeExpression.BinaryTypeOperator"]},{"name":"interface ClassDeclarationKeyword : Node.Keyword","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassDeclarationKeyword","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-declaration-keyword/index.html","searchKeys":["ClassDeclarationKeyword","interface ClassDeclarationKeyword : Node.Keyword","ktast.ast.Node.Declaration.ClassDeclaration.ClassDeclarationKeyword"]},{"name":"interface ClassParent : Node, Node.WithValueArgs","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassParent","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-parent/index.html","searchKeys":["ClassParent","interface ClassParent : Node, Node.WithValueArgs","ktast.ast.Node.Declaration.ClassDeclaration.ClassParent"]},{"name":"interface ConstantLiteralExpression : Node.Expression, Node.SimpleTextNode","description":"ktast.ast.Node.Expression.ConstantLiteralExpression","location":"ast/ktast.ast/-node/-expression/-constant-literal-expression/index.html","searchKeys":["ConstantLiteralExpression","interface ConstantLiteralExpression : Node.Expression, Node.SimpleTextNode","ktast.ast.Node.Expression.ConstantLiteralExpression"]},{"name":"interface Declaration : Node.Statement","description":"ktast.ast.Node.Declaration","location":"ast/ktast.ast/-node/-declaration/index.html","searchKeys":["Declaration","interface Declaration : Node.Statement","ktast.ast.Node.Declaration"]},{"name":"interface DeclarationsContainer","description":"ktast.ast.Node.DeclarationsContainer","location":"ast/ktast.ast/-node/-declarations-container/index.html","searchKeys":["DeclarationsContainer","interface DeclarationsContainer","ktast.ast.Node.DeclarationsContainer"]},{"name":"interface DoubleColonExpression : Node.Expression","description":"ktast.ast.Node.Expression.DoubleColonExpression","location":"ast/ktast.ast/-node/-expression/-double-colon-expression/index.html","searchKeys":["DoubleColonExpression","interface DoubleColonExpression : Node.Expression","ktast.ast.Node.Expression.DoubleColonExpression"]},{"name":"interface Expression : Node.Statement","description":"ktast.ast.Node.Expression","location":"ast/ktast.ast/-node/-expression/index.html","searchKeys":["Expression","interface Expression : Node.Statement","ktast.ast.Node.Expression"]},{"name":"interface Extra : Node.SimpleTextNode","description":"ktast.ast.Node.Extra","location":"ast/ktast.ast/-node/-extra/index.html","searchKeys":["Extra","interface Extra : Node.SimpleTextNode","ktast.ast.Node.Extra"]},{"name":"interface ExtrasMap","description":"ktast.ast.ExtrasMap","location":"ast/ktast.ast/-extras-map/index.html","searchKeys":["ExtrasMap","interface ExtrasMap","ktast.ast.ExtrasMap"]},{"name":"interface Keyword : Node.SimpleTextNode","description":"ktast.ast.Node.Keyword","location":"ast/ktast.ast/-node/-keyword/index.html","searchKeys":["Keyword","interface Keyword : Node.SimpleTextNode","ktast.ast.Node.Keyword"]},{"name":"interface KeywordModifier : Node.Modifier, Node.Keyword","description":"ktast.ast.Node.Modifier.KeywordModifier","location":"ast/ktast.ast/-node/-modifier/-keyword-modifier/index.html","searchKeys":["KeywordModifier","interface KeywordModifier : Node.Modifier, Node.Keyword","ktast.ast.Node.Modifier.KeywordModifier"]},{"name":"interface KotlinEntry : Node.WithAnnotationSets","description":"ktast.ast.Node.KotlinEntry","location":"ast/ktast.ast/-node/-kotlin-entry/index.html","searchKeys":["KotlinEntry","interface KotlinEntry : Node.WithAnnotationSets","ktast.ast.Node.KotlinEntry"]},{"name":"interface Modifier : Node","description":"ktast.ast.Node.Modifier","location":"ast/ktast.ast/-node/-modifier/index.html","searchKeys":["Modifier","interface Modifier : Node","ktast.ast.Node.Modifier"]},{"name":"interface MutableExtrasMap : ExtrasMap","description":"ktast.ast.MutableExtrasMap","location":"ast/ktast.ast/-mutable-extras-map/index.html","searchKeys":["MutableExtrasMap","interface MutableExtrasMap : ExtrasMap","ktast.ast.MutableExtrasMap"]},{"name":"interface Node","description":"ktast.ast.Node","location":"ast/ktast.ast/-node/index.html","searchKeys":["Node","interface Node","ktast.ast.Node"]},{"name":"interface PostModifier : Node","description":"ktast.ast.Node.PostModifier","location":"ast/ktast.ast/-node/-post-modifier/index.html","searchKeys":["PostModifier","interface PostModifier : Node","ktast.ast.Node.PostModifier"]},{"name":"interface SimpleTextNode : Node","description":"ktast.ast.Node.SimpleTextNode","location":"ast/ktast.ast/-node/-simple-text-node/index.html","searchKeys":["SimpleTextNode","interface SimpleTextNode : Node","ktast.ast.Node.SimpleTextNode"]},{"name":"interface Statement : Node","description":"ktast.ast.Node.Statement","location":"ast/ktast.ast/-node/-statement/index.html","searchKeys":["Statement","interface Statement : Node","ktast.ast.Node.Statement"]},{"name":"interface StatementsContainer","description":"ktast.ast.Node.StatementsContainer","location":"ast/ktast.ast/-node/-statements-container/index.html","searchKeys":["StatementsContainer","interface StatementsContainer","ktast.ast.Node.StatementsContainer"]},{"name":"interface StringEntry : Node","description":"ktast.ast.Node.Expression.StringLiteralExpression.StringEntry","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-string-entry/index.html","searchKeys":["StringEntry","interface StringEntry : Node","ktast.ast.Node.Expression.StringLiteralExpression.StringEntry"]},{"name":"interface Type : Node, Node.WithModifiers","description":"ktast.ast.Node.Type","location":"ast/ktast.ast/-node/-type/index.html","searchKeys":["Type","interface Type : Node, Node.WithModifiers","ktast.ast.Node.Type"]},{"name":"interface TypeArg : Node, Node.WithModifiers","description":"ktast.ast.Node.TypeArg","location":"ast/ktast.ast/-node/-type-arg/index.html","searchKeys":["TypeArg","interface TypeArg : Node, Node.WithModifiers","ktast.ast.Node.TypeArg"]},{"name":"interface UnaryExpression : Node.Expression","description":"ktast.ast.Node.Expression.UnaryExpression","location":"ast/ktast.ast/-node/-expression/-unary-expression/index.html","searchKeys":["UnaryExpression","interface UnaryExpression : Node.Expression","ktast.ast.Node.Expression.UnaryExpression"]},{"name":"interface UnaryOperator : Node.Keyword","description":"ktast.ast.Node.Expression.UnaryExpression.UnaryOperator","location":"ast/ktast.ast/-node/-expression/-unary-expression/-unary-operator/index.html","searchKeys":["UnaryOperator","interface UnaryOperator : Node.Keyword","ktast.ast.Node.Expression.UnaryExpression.UnaryOperator"]},{"name":"interface ValOrVarKeyword : Node.Keyword","description":"ktast.ast.Node.Keyword.ValOrVarKeyword","location":"ast/ktast.ast/-node/-keyword/-val-or-var-keyword/index.html","searchKeys":["ValOrVarKeyword","interface ValOrVarKeyword : Node.Keyword","ktast.ast.Node.Keyword.ValOrVarKeyword"]},{"name":"interface WhenBranch : Node","description":"ktast.ast.Node.Expression.WhenExpression.WhenBranch","location":"ast/ktast.ast/-node/-expression/-when-expression/-when-branch/index.html","searchKeys":["WhenBranch","interface WhenBranch : Node","ktast.ast.Node.Expression.WhenExpression.WhenBranch"]},{"name":"interface WhenCondition : Node","description":"ktast.ast.Node.Expression.WhenExpression.WhenCondition","location":"ast/ktast.ast/-node/-expression/-when-expression/-when-condition/index.html","searchKeys":["WhenCondition","interface WhenCondition : Node","ktast.ast.Node.Expression.WhenExpression.WhenCondition"]},{"name":"interface WhenConditionOperator : Node.Keyword","description":"ktast.ast.Node.Expression.WhenExpression.WhenConditionOperator","location":"ast/ktast.ast/-node/-expression/-when-expression/-when-condition-operator/index.html","searchKeys":["WhenConditionOperator","interface WhenConditionOperator : Node.Keyword","ktast.ast.Node.Expression.WhenExpression.WhenConditionOperator"]},{"name":"interface WhenConditionRangeOperator : Node.Expression.WhenExpression.WhenConditionOperator","description":"ktast.ast.Node.Expression.WhenExpression.WhenConditionRangeOperator","location":"ast/ktast.ast/-node/-expression/-when-expression/-when-condition-range-operator/index.html","searchKeys":["WhenConditionRangeOperator","interface WhenConditionRangeOperator : Node.Expression.WhenExpression.WhenConditionOperator","ktast.ast.Node.Expression.WhenExpression.WhenConditionRangeOperator"]},{"name":"interface WhenConditionTypeOperator : Node.Expression.WhenExpression.WhenConditionOperator","description":"ktast.ast.Node.Expression.WhenExpression.WhenConditionTypeOperator","location":"ast/ktast.ast/-node/-expression/-when-expression/-when-condition-type-operator/index.html","searchKeys":["WhenConditionTypeOperator","interface WhenConditionTypeOperator : Node.Expression.WhenExpression.WhenConditionOperator","ktast.ast.Node.Expression.WhenExpression.WhenConditionTypeOperator"]},{"name":"interface WhileStatementBase : Node.Statement","description":"ktast.ast.Node.Statement.WhileStatementBase","location":"ast/ktast.ast/-node/-statement/-while-statement-base/index.html","searchKeys":["WhileStatementBase","interface WhileStatementBase : Node.Statement","ktast.ast.Node.Statement.WhileStatementBase"]},{"name":"interface WithAnnotationSets","description":"ktast.ast.Node.WithAnnotationSets","location":"ast/ktast.ast/-node/-with-annotation-sets/index.html","searchKeys":["WithAnnotationSets","interface WithAnnotationSets","ktast.ast.Node.WithAnnotationSets"]},{"name":"interface WithFunctionBody","description":"ktast.ast.Node.WithFunctionBody","location":"ast/ktast.ast/-node/-with-function-body/index.html","searchKeys":["WithFunctionBody","interface WithFunctionBody","ktast.ast.Node.WithFunctionBody"]},{"name":"interface WithFunctionParams","description":"ktast.ast.Node.WithFunctionParams","location":"ast/ktast.ast/-node/-with-function-params/index.html","searchKeys":["WithFunctionParams","interface WithFunctionParams","ktast.ast.Node.WithFunctionParams"]},{"name":"interface WithLabel","description":"ktast.ast.Node.Expression.WithLabel","location":"ast/ktast.ast/-node/-expression/-with-label/index.html","searchKeys":["WithLabel","interface WithLabel","ktast.ast.Node.Expression.WithLabel"]},{"name":"interface WithModifiers : Node.WithAnnotationSets","description":"ktast.ast.Node.WithModifiers","location":"ast/ktast.ast/-node/-with-modifiers/index.html","searchKeys":["WithModifiers","interface WithModifiers : Node.WithAnnotationSets","ktast.ast.Node.WithModifiers"]},{"name":"interface WithPostModifiers","description":"ktast.ast.Node.WithPostModifiers","location":"ast/ktast.ast/-node/-with-post-modifiers/index.html","searchKeys":["WithPostModifiers","interface WithPostModifiers","ktast.ast.Node.WithPostModifiers"]},{"name":"interface WithTypeArgs","description":"ktast.ast.Node.WithTypeArgs","location":"ast/ktast.ast/-node/-with-type-args/index.html","searchKeys":["WithTypeArgs","interface WithTypeArgs","ktast.ast.Node.WithTypeArgs"]},{"name":"interface WithTypeParams","description":"ktast.ast.Node.WithTypeParams","location":"ast/ktast.ast/-node/-with-type-params/index.html","searchKeys":["WithTypeParams","interface WithTypeParams","ktast.ast.Node.WithTypeParams"]},{"name":"interface WithValueArgs","description":"ktast.ast.Node.WithValueArgs","location":"ast/ktast.ast/-node/-with-value-args/index.html","searchKeys":["WithValueArgs","interface WithValueArgs","ktast.ast.Node.WithValueArgs"]},{"name":"object Companion","description":"ktast.ast.Dumper.Companion","location":"ast/ktast.ast/-dumper/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.Dumper.Companion"]},{"name":"object Companion","description":"ktast.ast.MutableVisitor.Companion","location":"ast/ktast.ast/-mutable-visitor/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.MutableVisitor.Companion"]},{"name":"object Companion","description":"ktast.ast.Visitor.Companion","location":"ast/ktast.ast/-visitor/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.Visitor.Companion"]},{"name":"object Companion","description":"ktast.ast.Writer.Companion","location":"ast/ktast.ast/-writer/-companion/index.html","searchKeys":["Companion","object Companion","ktast.ast.Writer.Companion"]},{"name":"open class ChangedRef(var changed: Boolean)","description":"ktast.ast.MutableVisitor.ChangedRef","location":"ast/ktast.ast/-mutable-visitor/-changed-ref/index.html","searchKeys":["ChangedRef","open class ChangedRef(var changed: Boolean)","ktast.ast.MutableVisitor.ChangedRef"]},{"name":"open class MutableVisitor(extrasMap: MutableExtrasMap? = null)","description":"ktast.ast.MutableVisitor","location":"ast/ktast.ast/-mutable-visitor/index.html","searchKeys":["MutableVisitor","open class MutableVisitor(extrasMap: MutableExtrasMap? = null)","ktast.ast.MutableVisitor"]},{"name":"open class Visitor","description":"ktast.ast.Visitor","location":"ast/ktast.ast/-visitor/index.html","searchKeys":["Visitor","open class Visitor","ktast.ast.Visitor"]},{"name":"open class Writer(val app: Appendable = StringBuilder(), val extrasMap: ExtrasMap? = null) : Visitor","description":"ktast.ast.Writer","location":"ast/ktast.ast/-writer/index.html","searchKeys":["Writer","open class Writer(val app: Appendable = StringBuilder(), val extrasMap: ExtrasMap? = null) : Visitor","ktast.ast.Writer"]},{"name":"open fun <T : Node> postVisit(v: T, parent: Node?): T","description":"ktast.ast.MutableVisitor.postVisit","location":"ast/ktast.ast/-mutable-visitor/post-visit.html","searchKeys":["postVisit","open fun <T : Node> postVisit(v: T, parent: Node?): T","ktast.ast.MutableVisitor.postVisit"]},{"name":"open fun <T : Node> preVisit(v: T, parent: Node?): T","description":"ktast.ast.MutableVisitor.preVisit","location":"ast/ktast.ast/-mutable-visitor/pre-visit.html","searchKeys":["preVisit","open fun <T : Node> preVisit(v: T, parent: Node?): T","ktast.ast.MutableVisitor.preVisit"]},{"name":"open fun <T : Node> visit(v: T, parent: Node?, ch: MutableVisitor.ChangedRef = ChangedRef(false)): T","description":"ktast.ast.MutableVisitor.visit","location":"ast/ktast.ast/-mutable-visitor/visit.html","searchKeys":["visit","open fun <T : Node> visit(v: T, parent: Node?, ch: MutableVisitor.ChangedRef = ChangedRef(false)): T","ktast.ast.MutableVisitor.visit"]},{"name":"open fun <T> sub(fn: (MutableVisitor.ChangedRef) -> T): T","description":"ktast.ast.MutableVisitor.ChangedRef.sub","location":"ast/ktast.ast/-mutable-visitor/-changed-ref/sub.html","searchKeys":["sub","open fun <T> sub(fn: (MutableVisitor.ChangedRef) -> T): T","ktast.ast.MutableVisitor.ChangedRef.sub"]},{"name":"open fun docComment(v: Node): Node.Extra.Comment?","description":"ktast.ast.ExtrasMap.docComment","location":"ast/ktast.ast/-extras-map/doc-comment.html","searchKeys":["docComment","open fun docComment(v: Node): Node.Extra.Comment?","ktast.ast.ExtrasMap.docComment"]},{"name":"open override val annotationSets: List<Node.Modifier.AnnotationSet>","description":"ktast.ast.Node.Expression.AnnotatedExpression.annotationSets","location":"ast/ktast.ast/-node/-expression/-annotated-expression/annotation-sets.html","searchKeys":["annotationSets","open override val annotationSets: List<Node.Modifier.AnnotationSet>","ktast.ast.Node.Expression.AnnotatedExpression.annotationSets"]},{"name":"open override val annotationSets: List<Node.Modifier.AnnotationSet>","description":"ktast.ast.Node.Expression.CallExpression.LambdaArg.annotationSets","location":"ast/ktast.ast/-node/-expression/-call-expression/-lambda-arg/annotation-sets.html","searchKeys":["annotationSets","open override val annotationSets: List<Node.Modifier.AnnotationSet>","ktast.ast.Node.Expression.CallExpression.LambdaArg.annotationSets"]},{"name":"open override val annotationSets: List<Node.Modifier.AnnotationSet>","description":"ktast.ast.Node.KotlinFile.annotationSets","location":"ast/ktast.ast/-node/-kotlin-file/annotation-sets.html","searchKeys":["annotationSets","open override val annotationSets: List<Node.Modifier.AnnotationSet>","ktast.ast.Node.KotlinFile.annotationSets"]},{"name":"open override val annotationSets: List<Node.Modifier.AnnotationSet>","description":"ktast.ast.Node.KotlinScript.annotationSets","location":"ast/ktast.ast/-node/-kotlin-script/annotation-sets.html","searchKeys":["annotationSets","open override val annotationSets: List<Node.Modifier.AnnotationSet>","ktast.ast.Node.KotlinScript.annotationSets"]},{"name":"open override val annotationSets: List<Node.Modifier.AnnotationSet>","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraint.annotationSets","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/-type-constraint/annotation-sets.html","searchKeys":["annotationSets","open override val annotationSets: List<Node.Modifier.AnnotationSet>","ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraint.annotationSets"]},{"name":"open override val annotationSets: List<Node.Modifier.AnnotationSet>","description":"ktast.ast.Node.WithModifiers.annotationSets","location":"ast/ktast.ast/-node/-with-modifiers/annotation-sets.html","searchKeys":["annotationSets","open override val annotationSets: List<Node.Modifier.AnnotationSet>","ktast.ast.Node.WithModifiers.annotationSets"]},{"name":"open override val args: Node.ValueArgs","description":"ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.args","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-constructor-class-parent/args.html","searchKeys":["args","open override val args: Node.ValueArgs","ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.args"]},{"name":"open override val args: Node.ValueArgs?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.args","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-enum-entry/args.html","searchKeys":["args","open override val args: Node.ValueArgs?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.args"]},{"name":"open override val args: Node.ValueArgs?","description":"ktast.ast.Node.Expression.CallExpression.args","location":"ast/ktast.ast/-node/-expression/-call-expression/args.html","searchKeys":["args","open override val args: Node.ValueArgs?","ktast.ast.Node.Expression.CallExpression.args"]},{"name":"open override val args: Node.ValueArgs?","description":"ktast.ast.Node.Modifier.AnnotationSet.Annotation.args","location":"ast/ktast.ast/-node/-modifier/-annotation-set/-annotation/args.html","searchKeys":["args","open override val args: Node.ValueArgs?","ktast.ast.Node.Modifier.AnnotationSet.Annotation.args"]},{"name":"open override val args: Node.ValueArgs? = null","description":"ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.args","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-delegation-class-parent/args.html","searchKeys":["args","open override val args: Node.ValueArgs? = null","ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.args"]},{"name":"open override val args: Node.ValueArgs? = null","description":"ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.args","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-type-class-parent/args.html","searchKeys":["args","open override val args: Node.ValueArgs? = null","ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.args"]},{"name":"open override val asterisk: Node.Keyword.Asterisk","description":"ktast.ast.Node.TypeArg.StarProjection.asterisk","location":"ast/ktast.ast/-node/-type-arg/-star-projection/asterisk.html","searchKeys":["asterisk","open override val asterisk: Node.Keyword.Asterisk","ktast.ast.Node.TypeArg.StarProjection.asterisk"]},{"name":"open override val asterisk: Nothing? = null","description":"ktast.ast.Node.TypeArg.TypeProjection.asterisk","location":"ast/ktast.ast/-node/-type-arg/-type-projection/asterisk.html","searchKeys":["asterisk","open override val asterisk: Nothing? = null","ktast.ast.Node.TypeArg.TypeProjection.asterisk"]},{"name":"open override val body: Node.Expression","description":"ktast.ast.Node.Expression.WhenExpression.ConditionalWhenBranch.body","location":"ast/ktast.ast/-node/-expression/-when-expression/-conditional-when-branch/body.html","searchKeys":["body","open override val body: Node.Expression","ktast.ast.Node.Expression.WhenExpression.ConditionalWhenBranch.body"]},{"name":"open override val body: Node.Expression","description":"ktast.ast.Node.Expression.WhenExpression.ElseWhenBranch.body","location":"ast/ktast.ast/-node/-expression/-when-expression/-else-when-branch/body.html","searchKeys":["body","open override val body: Node.Expression","ktast.ast.Node.Expression.WhenExpression.ElseWhenBranch.body"]},{"name":"open override val body: Node.Expression","description":"ktast.ast.Node.Statement.DoWhileStatement.body","location":"ast/ktast.ast/-node/-statement/-do-while-statement/body.html","searchKeys":["body","open override val body: Node.Expression","ktast.ast.Node.Statement.DoWhileStatement.body"]},{"name":"open override val body: Node.Expression","description":"ktast.ast.Node.Statement.WhileStatement.body","location":"ast/ktast.ast/-node/-statement/-while-statement/body.html","searchKeys":["body","open override val body: Node.Expression","ktast.ast.Node.Statement.WhileStatement.body"]},{"name":"open override val body: Node.Expression?","description":"ktast.ast.Node.Declaration.FunctionDeclaration.body","location":"ast/ktast.ast/-node/-declaration/-function-declaration/body.html","searchKeys":["body","open override val body: Node.Expression?","ktast.ast.Node.Declaration.FunctionDeclaration.body"]},{"name":"open override val body: Node.Expression?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Getter.body","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-getter/body.html","searchKeys":["body","open override val body: Node.Expression?","ktast.ast.Node.Declaration.PropertyDeclaration.Getter.body"]},{"name":"open override val body: Node.Expression?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Setter.body","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-setter/body.html","searchKeys":["body","open override val body: Node.Expression?","ktast.ast.Node.Declaration.PropertyDeclaration.Setter.body"]},{"name":"open override val byKeyword: Node.Keyword.By","description":"ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.byKeyword","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-delegation-class-parent/by-keyword.html","searchKeys":["byKeyword","open override val byKeyword: Node.Keyword.By","ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.byKeyword"]},{"name":"open override val byKeyword: Node.Keyword.By? = null","description":"ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.byKeyword","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-constructor-class-parent/by-keyword.html","searchKeys":["byKeyword","open override val byKeyword: Node.Keyword.By? = null","ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.byKeyword"]},{"name":"open override val byKeyword: Node.Keyword.By? = null","description":"ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.byKeyword","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-type-class-parent/by-keyword.html","searchKeys":["byKeyword","open override val byKeyword: Node.Keyword.By? = null","ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.byKeyword"]},{"name":"open override val condition: Node.Expression","description":"ktast.ast.Node.Statement.DoWhileStatement.condition","location":"ast/ktast.ast/-node/-statement/-do-while-statement/condition.html","searchKeys":["condition","open override val condition: Node.Expression","ktast.ast.Node.Statement.DoWhileStatement.condition"]},{"name":"open override val condition: Node.Expression","description":"ktast.ast.Node.Statement.WhileStatement.condition","location":"ast/ktast.ast/-node/-statement/-while-statement/condition.html","searchKeys":["condition","open override val condition: Node.Expression","ktast.ast.Node.Statement.WhileStatement.condition"]},{"name":"open override val declarations: List<Node.Declaration>","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.declarations","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/declarations.html","searchKeys":["declarations","open override val declarations: List<Node.Declaration>","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.declarations"]},{"name":"open override val declarations: List<Node.Declaration>","description":"ktast.ast.Node.KotlinFile.declarations","location":"ast/ktast.ast/-node/-kotlin-file/declarations.html","searchKeys":["declarations","open override val declarations: List<Node.Declaration>","ktast.ast.Node.KotlinFile.declarations"]},{"name":"open override val elements: List<Node.Declaration.ClassDeclaration.ClassParent>","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassParents.elements","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-parents/elements.html","searchKeys":["elements","open override val elements: List<Node.Declaration.ClassDeclaration.ClassParent>","ktast.ast.Node.Declaration.ClassDeclaration.ClassParents.elements"]},{"name":"open override val elements: List<Node.Expression>","description":"ktast.ast.Node.PostModifier.Contract.ContractEffects.elements","location":"ast/ktast.ast/-node/-post-modifier/-contract/-contract-effects/elements.html","searchKeys":["elements","open override val elements: List<Node.Expression>","ktast.ast.Node.PostModifier.Contract.ContractEffects.elements"]},{"name":"open override val elements: List<Node.FunctionParam>","description":"ktast.ast.Node.FunctionParams.elements","location":"ast/ktast.ast/-node/-function-params/elements.html","searchKeys":["elements","open override val elements: List<Node.FunctionParam>","ktast.ast.Node.FunctionParams.elements"]},{"name":"open override val elements: List<Node.LambdaParam>","description":"ktast.ast.Node.LambdaParams.elements","location":"ast/ktast.ast/-node/-lambda-params/elements.html","searchKeys":["elements","open override val elements: List<Node.LambdaParam>","ktast.ast.Node.LambdaParams.elements"]},{"name":"open override val elements: List<Node.Modifier>","description":"ktast.ast.Node.Modifiers.elements","location":"ast/ktast.ast/-node/-modifiers/elements.html","searchKeys":["elements","open override val elements: List<Node.Modifier>","ktast.ast.Node.Modifiers.elements"]},{"name":"open override val elements: List<Node.PostModifier.TypeConstraintSet.TypeConstraint>","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraints.elements","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/-type-constraints/elements.html","searchKeys":["elements","open override val elements: List<Node.PostModifier.TypeConstraintSet.TypeConstraint>","ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraints.elements"]},{"name":"open override val elements: List<Node.Type.FunctionType.FunctionTypeParam>","description":"ktast.ast.Node.Type.FunctionType.FunctionTypeParams.elements","location":"ast/ktast.ast/-node/-type/-function-type/-function-type-params/elements.html","searchKeys":["elements","open override val elements: List<Node.Type.FunctionType.FunctionTypeParam>","ktast.ast.Node.Type.FunctionType.FunctionTypeParams.elements"]},{"name":"open override val elements: List<Node.Type>","description":"ktast.ast.Node.ContextReceiverTypes.elements","location":"ast/ktast.ast/-node/-context-receiver-types/elements.html","searchKeys":["elements","open override val elements: List<Node.Type>","ktast.ast.Node.ContextReceiverTypes.elements"]},{"name":"open override val elements: List<Node.TypeArg>","description":"ktast.ast.Node.TypeArgs.elements","location":"ast/ktast.ast/-node/-type-args/elements.html","searchKeys":["elements","open override val elements: List<Node.TypeArg>","ktast.ast.Node.TypeArgs.elements"]},{"name":"open override val elements: List<Node.TypeParam>","description":"ktast.ast.Node.TypeParams.elements","location":"ast/ktast.ast/-node/-type-params/elements.html","searchKeys":["elements","open override val elements: List<Node.TypeParam>","ktast.ast.Node.TypeParams.elements"]},{"name":"open override val elements: List<Node.ValueArg>","description":"ktast.ast.Node.ValueArgs.elements","location":"ast/ktast.ast/-node/-value-args/elements.html","searchKeys":["elements","open override val elements: List<Node.ValueArg>","ktast.ast.Node.ValueArgs.elements"]},{"name":"open override val elseKeyword: Node.Keyword.Else","description":"ktast.ast.Node.Expression.WhenExpression.ElseWhenBranch.elseKeyword","location":"ast/ktast.ast/-node/-expression/-when-expression/-else-when-branch/else-keyword.html","searchKeys":["elseKeyword","open override val elseKeyword: Node.Keyword.Else","ktast.ast.Node.Expression.WhenExpression.ElseWhenBranch.elseKeyword"]},{"name":"open override val elseKeyword: Nothing? = null","description":"ktast.ast.Node.Expression.WhenExpression.ConditionalWhenBranch.elseKeyword","location":"ast/ktast.ast/-node/-expression/-when-expression/-conditional-when-branch/else-keyword.html","searchKeys":["elseKeyword","open override val elseKeyword: Nothing? = null","ktast.ast.Node.Expression.WhenExpression.ConditionalWhenBranch.elseKeyword"]},{"name":"open override val equals: Node.Keyword.Equal?","description":"ktast.ast.Node.Declaration.FunctionDeclaration.equals","location":"ast/ktast.ast/-node/-declaration/-function-declaration/equals.html","searchKeys":["equals","open override val equals: Node.Keyword.Equal?","ktast.ast.Node.Declaration.FunctionDeclaration.equals"]},{"name":"open override val equals: Node.Keyword.Equal?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Getter.equals","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-getter/equals.html","searchKeys":["equals","open override val equals: Node.Keyword.Equal?","ktast.ast.Node.Declaration.PropertyDeclaration.Getter.equals"]},{"name":"open override val equals: Node.Keyword.Equal?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Setter.equals","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-setter/equals.html","searchKeys":["equals","open override val equals: Node.Keyword.Equal?","ktast.ast.Node.Declaration.PropertyDeclaration.Setter.equals"]},{"name":"open override val expression: Node.Expression","description":"ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.expression","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-delegation-class-parent/expression.html","searchKeys":["expression","open override val expression: Node.Expression","ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.expression"]},{"name":"open override val expression: Node.Expression","description":"ktast.ast.Node.Expression.PostfixUnaryExpression.expression","location":"ast/ktast.ast/-node/-expression/-postfix-unary-expression/expression.html","searchKeys":["expression","open override val expression: Node.Expression","ktast.ast.Node.Expression.PostfixUnaryExpression.expression"]},{"name":"open override val expression: Node.Expression","description":"ktast.ast.Node.Expression.PrefixUnaryExpression.expression","location":"ast/ktast.ast/-node/-expression/-prefix-unary-expression/expression.html","searchKeys":["expression","open override val expression: Node.Expression","ktast.ast.Node.Expression.PrefixUnaryExpression.expression"]},{"name":"open override val expression: Node.Expression","description":"ktast.ast.Node.Expression.WhenExpression.ExpressionWhenCondition.expression","location":"ast/ktast.ast/-node/-expression/-when-expression/-expression-when-condition/expression.html","searchKeys":["expression","open override val expression: Node.Expression","ktast.ast.Node.Expression.WhenExpression.ExpressionWhenCondition.expression"]},{"name":"open override val expression: Node.Expression","description":"ktast.ast.Node.Expression.WhenExpression.RangeWhenCondition.expression","location":"ast/ktast.ast/-node/-expression/-when-expression/-range-when-condition/expression.html","searchKeys":["expression","open override val expression: Node.Expression","ktast.ast.Node.Expression.WhenExpression.RangeWhenCondition.expression"]},{"name":"open override val expression: Node.Expression? = null","description":"ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.expression","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-constructor-class-parent/expression.html","searchKeys":["expression","open override val expression: Node.Expression? = null","ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.expression"]},{"name":"open override val expression: Node.Expression? = null","description":"ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.expression","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-type-class-parent/expression.html","searchKeys":["expression","open override val expression: Node.Expression? = null","ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.expression"]},{"name":"open override val expression: Nothing? = null","description":"ktast.ast.Node.Expression.WhenExpression.TypeWhenCondition.expression","location":"ast/ktast.ast/-node/-expression/-when-expression/-type-when-condition/expression.html","searchKeys":["expression","open override val expression: Nothing? = null","ktast.ast.Node.Expression.WhenExpression.TypeWhenCondition.expression"]},{"name":"open override val importDirectives: List<Node.ImportDirective>","description":"ktast.ast.Node.KotlinFile.importDirectives","location":"ast/ktast.ast/-node/-kotlin-file/import-directives.html","searchKeys":["importDirectives","open override val importDirectives: List<Node.ImportDirective>","ktast.ast.Node.KotlinFile.importDirectives"]},{"name":"open override val importDirectives: List<Node.ImportDirective>","description":"ktast.ast.Node.KotlinScript.importDirectives","location":"ast/ktast.ast/-node/-kotlin-script/import-directives.html","searchKeys":["importDirectives","open override val importDirectives: List<Node.ImportDirective>","ktast.ast.Node.KotlinScript.importDirectives"]},{"name":"open override val lAngle: Node.Keyword.Less?","description":"ktast.ast.Node.Declaration.ClassDeclaration.lAngle","location":"ast/ktast.ast/-node/-declaration/-class-declaration/l-angle.html","searchKeys":["lAngle","open override val lAngle: Node.Keyword.Less?","ktast.ast.Node.Declaration.ClassDeclaration.lAngle"]},{"name":"open override val lAngle: Node.Keyword.Less?","description":"ktast.ast.Node.Declaration.FunctionDeclaration.lAngle","location":"ast/ktast.ast/-node/-declaration/-function-declaration/l-angle.html","searchKeys":["lAngle","open override val lAngle: Node.Keyword.Less?","ktast.ast.Node.Declaration.FunctionDeclaration.lAngle"]},{"name":"open override val lAngle: Node.Keyword.Less?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.lAngle","location":"ast/ktast.ast/-node/-declaration/-property-declaration/l-angle.html","searchKeys":["lAngle","open override val lAngle: Node.Keyword.Less?","ktast.ast.Node.Declaration.PropertyDeclaration.lAngle"]},{"name":"open override val lAngle: Node.Keyword.Less?","description":"ktast.ast.Node.Declaration.TypeAliasDeclaration.lAngle","location":"ast/ktast.ast/-node/-declaration/-type-alias-declaration/l-angle.html","searchKeys":["lAngle","open override val lAngle: Node.Keyword.Less?","ktast.ast.Node.Declaration.TypeAliasDeclaration.lAngle"]},{"name":"open override val lAngle: Node.Keyword.Less?","description":"ktast.ast.Node.Expression.CallExpression.lAngle","location":"ast/ktast.ast/-node/-expression/-call-expression/l-angle.html","searchKeys":["lAngle","open override val lAngle: Node.Keyword.Less?","ktast.ast.Node.Expression.CallExpression.lAngle"]},{"name":"open override val lAngle: Node.Keyword.Less?","description":"ktast.ast.Node.Type.SimpleType.SimpleTypeQualifier.lAngle","location":"ast/ktast.ast/-node/-type/-simple-type/-simple-type-qualifier/l-angle.html","searchKeys":["lAngle","open override val lAngle: Node.Keyword.Less?","ktast.ast.Node.Type.SimpleType.SimpleTypeQualifier.lAngle"]},{"name":"open override val lAngle: Node.Keyword.Less?","description":"ktast.ast.Node.Type.SimpleType.lAngle","location":"ast/ktast.ast/-node/-type/-simple-type/l-angle.html","searchKeys":["lAngle","open override val lAngle: Node.Keyword.Less?","ktast.ast.Node.Type.SimpleType.lAngle"]},{"name":"open override val lPar: Node.Keyword.LPar","description":"ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.lPar","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-constructor-class-parent/l-par.html","searchKeys":["lPar","open override val lPar: Node.Keyword.LPar","ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.lPar"]},{"name":"open override val lPar: Node.Keyword.LPar","description":"ktast.ast.Node.Expression.TryExpression.CatchClause.lPar","location":"ast/ktast.ast/-node/-expression/-try-expression/-catch-clause/l-par.html","searchKeys":["lPar","open override val lPar: Node.Keyword.LPar","ktast.ast.Node.Expression.TryExpression.CatchClause.lPar"]},{"name":"open override val lPar: Node.Keyword.LPar","description":"ktast.ast.Node.Statement.DoWhileStatement.lPar","location":"ast/ktast.ast/-node/-statement/-do-while-statement/l-par.html","searchKeys":["lPar","open override val lPar: Node.Keyword.LPar","ktast.ast.Node.Statement.DoWhileStatement.lPar"]},{"name":"open override val lPar: Node.Keyword.LPar","description":"ktast.ast.Node.Statement.WhileStatement.lPar","location":"ast/ktast.ast/-node/-statement/-while-statement/l-par.html","searchKeys":["lPar","open override val lPar: Node.Keyword.LPar","ktast.ast.Node.Statement.WhileStatement.lPar"]},{"name":"open override val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.lPar","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-enum-entry/l-par.html","searchKeys":["lPar","open override val lPar: Node.Keyword.LPar?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.lPar"]},{"name":"open override val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.lPar","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-secondary-constructor/l-par.html","searchKeys":["lPar","open override val lPar: Node.Keyword.LPar?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.lPar"]},{"name":"open override val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor.lPar","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-primary-constructor/l-par.html","searchKeys":["lPar","open override val lPar: Node.Keyword.LPar?","ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor.lPar"]},{"name":"open override val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.Declaration.FunctionDeclaration.lPar","location":"ast/ktast.ast/-node/-declaration/-function-declaration/l-par.html","searchKeys":["lPar","open override val lPar: Node.Keyword.LPar?","ktast.ast.Node.Declaration.FunctionDeclaration.lPar"]},{"name":"open override val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.Expression.CallExpression.lPar","location":"ast/ktast.ast/-node/-expression/-call-expression/l-par.html","searchKeys":["lPar","open override val lPar: Node.Keyword.LPar?","ktast.ast.Node.Expression.CallExpression.lPar"]},{"name":"open override val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.Modifier.AnnotationSet.Annotation.lPar","location":"ast/ktast.ast/-node/-modifier/-annotation-set/-annotation/l-par.html","searchKeys":["lPar","open override val lPar: Node.Keyword.LPar?","ktast.ast.Node.Modifier.AnnotationSet.Annotation.lPar"]},{"name":"open override val lPar: Node.Keyword.LPar? = null","description":"ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.lPar","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-delegation-class-parent/l-par.html","searchKeys":["lPar","open override val lPar: Node.Keyword.LPar? = null","ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.lPar"]},{"name":"open override val lPar: Node.Keyword.LPar? = null","description":"ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.lPar","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-type-class-parent/l-par.html","searchKeys":["lPar","open override val lPar: Node.Keyword.LPar? = null","ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.lPar"]},{"name":"open override val label: Node.Expression.NameExpression?","description":"ktast.ast.Node.Expression.BreakExpression.label","location":"ast/ktast.ast/-node/-expression/-break-expression/label.html","searchKeys":["label","open override val label: Node.Expression.NameExpression?","ktast.ast.Node.Expression.BreakExpression.label"]},{"name":"open override val label: Node.Expression.NameExpression?","description":"ktast.ast.Node.Expression.CallExpression.LambdaArg.label","location":"ast/ktast.ast/-node/-expression/-call-expression/-lambda-arg/label.html","searchKeys":["label","open override val label: Node.Expression.NameExpression?","ktast.ast.Node.Expression.CallExpression.LambdaArg.label"]},{"name":"open override val label: Node.Expression.NameExpression?","description":"ktast.ast.Node.Expression.ContinueExpression.label","location":"ast/ktast.ast/-node/-expression/-continue-expression/label.html","searchKeys":["label","open override val label: Node.Expression.NameExpression?","ktast.ast.Node.Expression.ContinueExpression.label"]},{"name":"open override val label: Node.Expression.NameExpression?","description":"ktast.ast.Node.Expression.ReturnExpression.label","location":"ast/ktast.ast/-node/-expression/-return-expression/label.html","searchKeys":["label","open override val label: Node.Expression.NameExpression?","ktast.ast.Node.Expression.ReturnExpression.label"]},{"name":"open override val label: Node.Expression.NameExpression?","description":"ktast.ast.Node.Expression.SuperExpression.label","location":"ast/ktast.ast/-node/-expression/-super-expression/label.html","searchKeys":["label","open override val label: Node.Expression.NameExpression?","ktast.ast.Node.Expression.SuperExpression.label"]},{"name":"open override val label: Node.Expression.NameExpression?","description":"ktast.ast.Node.Expression.ThisExpression.label","location":"ast/ktast.ast/-node/-expression/-this-expression/label.html","searchKeys":["label","open override val label: Node.Expression.NameExpression?","ktast.ast.Node.Expression.ThisExpression.label"]},{"name":"open override val lhs: Node.Expression?","description":"ktast.ast.Node.Expression.CallableReferenceExpression.lhs","location":"ast/ktast.ast/-node/-expression/-callable-reference-expression/lhs.html","searchKeys":["lhs","open override val lhs: Node.Expression?","ktast.ast.Node.Expression.CallableReferenceExpression.lhs"]},{"name":"open override val lhs: Node.Expression?","description":"ktast.ast.Node.Expression.ClassLiteralExpression.lhs","location":"ast/ktast.ast/-node/-expression/-class-literal-expression/lhs.html","searchKeys":["lhs","open override val lhs: Node.Expression?","ktast.ast.Node.Expression.ClassLiteralExpression.lhs"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.modifiers","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-enum-entry/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.Initializer.modifiers","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-initializer/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.Initializer.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.modifiers","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-secondary-constructor/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor.modifiers","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-primary-constructor/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Declaration.ClassDeclaration.modifiers","location":"ast/ktast.ast/-node/-declaration/-class-declaration/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Declaration.ClassDeclaration.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Declaration.FunctionDeclaration.modifiers","location":"ast/ktast.ast/-node/-declaration/-function-declaration/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Declaration.FunctionDeclaration.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Getter.modifiers","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-getter/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Declaration.PropertyDeclaration.Getter.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Setter.modifiers","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-setter/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Declaration.PropertyDeclaration.Setter.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.modifiers","location":"ast/ktast.ast/-node/-declaration/-property-declaration/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Declaration.PropertyDeclaration.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Declaration.TypeAliasDeclaration.modifiers","location":"ast/ktast.ast/-node/-declaration/-type-alias-declaration/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Declaration.TypeAliasDeclaration.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.FunctionParam.modifiers","location":"ast/ktast.ast/-node/-function-param/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.FunctionParam.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.PackageDirective.modifiers","location":"ast/ktast.ast/-node/-package-directive/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.PackageDirective.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Type.DynamicType.modifiers","location":"ast/ktast.ast/-node/-type/-dynamic-type/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Type.DynamicType.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Type.FunctionType.modifiers","location":"ast/ktast.ast/-node/-type/-function-type/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Type.FunctionType.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Type.NullableType.modifiers","location":"ast/ktast.ast/-node/-type/-nullable-type/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Type.NullableType.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Type.ParenthesizedType.modifiers","location":"ast/ktast.ast/-node/-type/-parenthesized-type/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Type.ParenthesizedType.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Type.SimpleType.modifiers","location":"ast/ktast.ast/-node/-type/-simple-type/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Type.SimpleType.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.TypeArg.TypeProjection.modifiers","location":"ast/ktast.ast/-node/-type-arg/-type-projection/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.TypeArg.TypeProjection.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.TypeParam.modifiers","location":"ast/ktast.ast/-node/-type-param/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.TypeParam.modifiers"]},{"name":"open override val modifiers: Node.Modifiers?","description":"ktast.ast.Node.Variable.modifiers","location":"ast/ktast.ast/-node/-variable/modifiers.html","searchKeys":["modifiers","open override val modifiers: Node.Modifiers?","ktast.ast.Node.Variable.modifiers"]},{"name":"open override val modifiers: Nothing? = null","description":"ktast.ast.Node.TypeArg.StarProjection.modifiers","location":"ast/ktast.ast/-node/-type-arg/-star-projection/modifiers.html","searchKeys":["modifiers","open override val modifiers: Nothing? = null","ktast.ast.Node.TypeArg.StarProjection.modifiers"]},{"name":"open override val name: Node.Expression.NameExpression","description":"ktast.ast.Node.Type.SimpleType.SimpleTypeQualifier.name","location":"ast/ktast.ast/-node/-type/-simple-type/-simple-type-qualifier/name.html","searchKeys":["name","open override val name: Node.Expression.NameExpression","ktast.ast.Node.Type.SimpleType.SimpleTypeQualifier.name"]},{"name":"open override val name: Node.Expression.NameExpression","description":"ktast.ast.Node.Type.SimpleType.name","location":"ast/ktast.ast/-node/-type/-simple-type/name.html","searchKeys":["name","open override val name: Node.Expression.NameExpression","ktast.ast.Node.Type.SimpleType.name"]},{"name":"open override val operator: Node.Expression.UnaryExpression.UnaryOperator","description":"ktast.ast.Node.Expression.PostfixUnaryExpression.operator","location":"ast/ktast.ast/-node/-expression/-postfix-unary-expression/operator.html","searchKeys":["operator","open override val operator: Node.Expression.UnaryExpression.UnaryOperator","ktast.ast.Node.Expression.PostfixUnaryExpression.operator"]},{"name":"open override val operator: Node.Expression.UnaryExpression.UnaryOperator","description":"ktast.ast.Node.Expression.PrefixUnaryExpression.operator","location":"ast/ktast.ast/-node/-expression/-prefix-unary-expression/operator.html","searchKeys":["operator","open override val operator: Node.Expression.UnaryExpression.UnaryOperator","ktast.ast.Node.Expression.PrefixUnaryExpression.operator"]},{"name":"open override val operator: Node.Expression.WhenExpression.WhenConditionRangeOperator","description":"ktast.ast.Node.Expression.WhenExpression.RangeWhenCondition.operator","location":"ast/ktast.ast/-node/-expression/-when-expression/-range-when-condition/operator.html","searchKeys":["operator","open override val operator: Node.Expression.WhenExpression.WhenConditionRangeOperator","ktast.ast.Node.Expression.WhenExpression.RangeWhenCondition.operator"]},{"name":"open override val operator: Node.Expression.WhenExpression.WhenConditionTypeOperator","description":"ktast.ast.Node.Expression.WhenExpression.TypeWhenCondition.operator","location":"ast/ktast.ast/-node/-expression/-when-expression/-type-when-condition/operator.html","searchKeys":["operator","open override val operator: Node.Expression.WhenExpression.WhenConditionTypeOperator","ktast.ast.Node.Expression.WhenExpression.TypeWhenCondition.operator"]},{"name":"open override val operator: Nothing? = null","description":"ktast.ast.Node.Expression.WhenExpression.ExpressionWhenCondition.operator","location":"ast/ktast.ast/-node/-expression/-when-expression/-expression-when-condition/operator.html","searchKeys":["operator","open override val operator: Nothing? = null","ktast.ast.Node.Expression.WhenExpression.ExpressionWhenCondition.operator"]},{"name":"open override val packageDirective: Node.PackageDirective?","description":"ktast.ast.Node.KotlinFile.packageDirective","location":"ast/ktast.ast/-node/-kotlin-file/package-directive.html","searchKeys":["packageDirective","open override val packageDirective: Node.PackageDirective?","ktast.ast.Node.KotlinFile.packageDirective"]},{"name":"open override val packageDirective: Node.PackageDirective?","description":"ktast.ast.Node.KotlinScript.packageDirective","location":"ast/ktast.ast/-node/-kotlin-script/package-directive.html","searchKeys":["packageDirective","open override val packageDirective: Node.PackageDirective?","ktast.ast.Node.KotlinScript.packageDirective"]},{"name":"open override val params: Node.FunctionParams","description":"ktast.ast.Node.Expression.TryExpression.CatchClause.params","location":"ast/ktast.ast/-node/-expression/-try-expression/-catch-clause/params.html","searchKeys":["params","open override val params: Node.FunctionParams","ktast.ast.Node.Expression.TryExpression.CatchClause.params"]},{"name":"open override val params: Node.FunctionParams?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.params","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-secondary-constructor/params.html","searchKeys":["params","open override val params: Node.FunctionParams?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.params"]},{"name":"open override val params: Node.FunctionParams?","description":"ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor.params","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-primary-constructor/params.html","searchKeys":["params","open override val params: Node.FunctionParams?","ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor.params"]},{"name":"open override val params: Node.FunctionParams?","description":"ktast.ast.Node.Declaration.FunctionDeclaration.params","location":"ast/ktast.ast/-node/-declaration/-function-declaration/params.html","searchKeys":["params","open override val params: Node.FunctionParams?","ktast.ast.Node.Declaration.FunctionDeclaration.params"]},{"name":"open override val postModifiers: List<Node.PostModifier>","description":"ktast.ast.Node.Declaration.FunctionDeclaration.postModifiers","location":"ast/ktast.ast/-node/-declaration/-function-declaration/post-modifiers.html","searchKeys":["postModifiers","open override val postModifiers: List<Node.PostModifier>","ktast.ast.Node.Declaration.FunctionDeclaration.postModifiers"]},{"name":"open override val postModifiers: List<Node.PostModifier>","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Getter.postModifiers","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-getter/post-modifiers.html","searchKeys":["postModifiers","open override val postModifiers: List<Node.PostModifier>","ktast.ast.Node.Declaration.PropertyDeclaration.Getter.postModifiers"]},{"name":"open override val postModifiers: List<Node.PostModifier>","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Setter.postModifiers","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-setter/post-modifiers.html","searchKeys":["postModifiers","open override val postModifiers: List<Node.PostModifier>","ktast.ast.Node.Declaration.PropertyDeclaration.Setter.postModifiers"]},{"name":"open override val questionMarks: List<Node.Keyword.Question>","description":"ktast.ast.Node.Expression.CallableReferenceExpression.questionMarks","location":"ast/ktast.ast/-node/-expression/-callable-reference-expression/question-marks.html","searchKeys":["questionMarks","open override val questionMarks: List<Node.Keyword.Question>","ktast.ast.Node.Expression.CallableReferenceExpression.questionMarks"]},{"name":"open override val questionMarks: List<Node.Keyword.Question>","description":"ktast.ast.Node.Expression.ClassLiteralExpression.questionMarks","location":"ast/ktast.ast/-node/-expression/-class-literal-expression/question-marks.html","searchKeys":["questionMarks","open override val questionMarks: List<Node.Keyword.Question>","ktast.ast.Node.Expression.ClassLiteralExpression.questionMarks"]},{"name":"open override val rAngle: Node.Keyword.Greater?","description":"ktast.ast.Node.Declaration.ClassDeclaration.rAngle","location":"ast/ktast.ast/-node/-declaration/-class-declaration/r-angle.html","searchKeys":["rAngle","open override val rAngle: Node.Keyword.Greater?","ktast.ast.Node.Declaration.ClassDeclaration.rAngle"]},{"name":"open override val rAngle: Node.Keyword.Greater?","description":"ktast.ast.Node.Declaration.FunctionDeclaration.rAngle","location":"ast/ktast.ast/-node/-declaration/-function-declaration/r-angle.html","searchKeys":["rAngle","open override val rAngle: Node.Keyword.Greater?","ktast.ast.Node.Declaration.FunctionDeclaration.rAngle"]},{"name":"open override val rAngle: Node.Keyword.Greater?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.rAngle","location":"ast/ktast.ast/-node/-declaration/-property-declaration/r-angle.html","searchKeys":["rAngle","open override val rAngle: Node.Keyword.Greater?","ktast.ast.Node.Declaration.PropertyDeclaration.rAngle"]},{"name":"open override val rAngle: Node.Keyword.Greater?","description":"ktast.ast.Node.Declaration.TypeAliasDeclaration.rAngle","location":"ast/ktast.ast/-node/-declaration/-type-alias-declaration/r-angle.html","searchKeys":["rAngle","open override val rAngle: Node.Keyword.Greater?","ktast.ast.Node.Declaration.TypeAliasDeclaration.rAngle"]},{"name":"open override val rAngle: Node.Keyword.Greater?","description":"ktast.ast.Node.Expression.CallExpression.rAngle","location":"ast/ktast.ast/-node/-expression/-call-expression/r-angle.html","searchKeys":["rAngle","open override val rAngle: Node.Keyword.Greater?","ktast.ast.Node.Expression.CallExpression.rAngle"]},{"name":"open override val rAngle: Node.Keyword.Greater?","description":"ktast.ast.Node.Type.SimpleType.SimpleTypeQualifier.rAngle","location":"ast/ktast.ast/-node/-type/-simple-type/-simple-type-qualifier/r-angle.html","searchKeys":["rAngle","open override val rAngle: Node.Keyword.Greater?","ktast.ast.Node.Type.SimpleType.SimpleTypeQualifier.rAngle"]},{"name":"open override val rAngle: Node.Keyword.Greater?","description":"ktast.ast.Node.Type.SimpleType.rAngle","location":"ast/ktast.ast/-node/-type/-simple-type/r-angle.html","searchKeys":["rAngle","open override val rAngle: Node.Keyword.Greater?","ktast.ast.Node.Type.SimpleType.rAngle"]},{"name":"open override val rPar: Node.Keyword.RPar","description":"ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.rPar","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-constructor-class-parent/r-par.html","searchKeys":["rPar","open override val rPar: Node.Keyword.RPar","ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.rPar"]},{"name":"open override val rPar: Node.Keyword.RPar","description":"ktast.ast.Node.Expression.TryExpression.CatchClause.rPar","location":"ast/ktast.ast/-node/-expression/-try-expression/-catch-clause/r-par.html","searchKeys":["rPar","open override val rPar: Node.Keyword.RPar","ktast.ast.Node.Expression.TryExpression.CatchClause.rPar"]},{"name":"open override val rPar: Node.Keyword.RPar","description":"ktast.ast.Node.Statement.DoWhileStatement.rPar","location":"ast/ktast.ast/-node/-statement/-do-while-statement/r-par.html","searchKeys":["rPar","open override val rPar: Node.Keyword.RPar","ktast.ast.Node.Statement.DoWhileStatement.rPar"]},{"name":"open override val rPar: Node.Keyword.RPar","description":"ktast.ast.Node.Statement.WhileStatement.rPar","location":"ast/ktast.ast/-node/-statement/-while-statement/r-par.html","searchKeys":["rPar","open override val rPar: Node.Keyword.RPar","ktast.ast.Node.Statement.WhileStatement.rPar"]},{"name":"open override val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.rPar","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-enum-entry/r-par.html","searchKeys":["rPar","open override val rPar: Node.Keyword.RPar?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.rPar"]},{"name":"open override val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.rPar","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-secondary-constructor/r-par.html","searchKeys":["rPar","open override val rPar: Node.Keyword.RPar?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.rPar"]},{"name":"open override val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor.rPar","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-primary-constructor/r-par.html","searchKeys":["rPar","open override val rPar: Node.Keyword.RPar?","ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor.rPar"]},{"name":"open override val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.Declaration.FunctionDeclaration.rPar","location":"ast/ktast.ast/-node/-declaration/-function-declaration/r-par.html","searchKeys":["rPar","open override val rPar: Node.Keyword.RPar?","ktast.ast.Node.Declaration.FunctionDeclaration.rPar"]},{"name":"open override val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.Expression.CallExpression.rPar","location":"ast/ktast.ast/-node/-expression/-call-expression/r-par.html","searchKeys":["rPar","open override val rPar: Node.Keyword.RPar?","ktast.ast.Node.Expression.CallExpression.rPar"]},{"name":"open override val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.Modifier.AnnotationSet.Annotation.rPar","location":"ast/ktast.ast/-node/-modifier/-annotation-set/-annotation/r-par.html","searchKeys":["rPar","open override val rPar: Node.Keyword.RPar?","ktast.ast.Node.Modifier.AnnotationSet.Annotation.rPar"]},{"name":"open override val rPar: Node.Keyword.RPar? = null","description":"ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.rPar","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-delegation-class-parent/r-par.html","searchKeys":["rPar","open override val rPar: Node.Keyword.RPar? = null","ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.rPar"]},{"name":"open override val rPar: Node.Keyword.RPar? = null","description":"ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.rPar","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-type-class-parent/r-par.html","searchKeys":["rPar","open override val rPar: Node.Keyword.RPar? = null","ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.rPar"]},{"name":"open override val statements: List<Node.Statement>","description":"ktast.ast.Node.Expression.BlockExpression.statements","location":"ast/ktast.ast/-node/-expression/-block-expression/statements.html","searchKeys":["statements","open override val statements: List<Node.Statement>","ktast.ast.Node.Expression.BlockExpression.statements"]},{"name":"open override val statements: List<Node.Statement>","description":"ktast.ast.Node.Expression.LambdaExpression.LambdaBody.statements","location":"ast/ktast.ast/-node/-expression/-lambda-expression/-lambda-body/statements.html","searchKeys":["statements","open override val statements: List<Node.Statement>","ktast.ast.Node.Expression.LambdaExpression.LambdaBody.statements"]},{"name":"open override val text: String","description":"ktast.ast.Node.Expression.BooleanLiteralExpression.text","location":"ast/ktast.ast/-node/-expression/-boolean-literal-expression/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Expression.BooleanLiteralExpression.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Expression.CharacterLiteralExpression.text","location":"ast/ktast.ast/-node/-expression/-character-literal-expression/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Expression.CharacterLiteralExpression.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Expression.IntegerLiteralExpression.text","location":"ast/ktast.ast/-node/-expression/-integer-literal-expression/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Expression.IntegerLiteralExpression.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Expression.NameExpression.text","location":"ast/ktast.ast/-node/-expression/-name-expression/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Expression.NameExpression.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Expression.NullLiteralExpression.text","location":"ast/ktast.ast/-node/-expression/-null-literal-expression/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Expression.NullLiteralExpression.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Expression.RealLiteralExpression.text","location":"ast/ktast.ast/-node/-expression/-real-literal-expression/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Expression.RealLiteralExpression.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Expression.StringLiteralExpression.EscapeStringEntry.text","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-escape-string-entry/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Expression.StringLiteralExpression.EscapeStringEntry.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Expression.StringLiteralExpression.LiteralStringEntry.text","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-literal-string-entry/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Expression.StringLiteralExpression.LiteralStringEntry.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Extra.Comment.text","location":"ast/ktast.ast/-node/-extra/-comment/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Extra.Comment.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Extra.Semicolon.text","location":"ast/ktast.ast/-node/-extra/-semicolon/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Extra.Semicolon.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Extra.Whitespace.text","location":"ast/ktast.ast/-node/-extra/-whitespace/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Extra.Whitespace.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Abstract.text","location":"ast/ktast.ast/-node/-keyword/-abstract/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Abstract.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Actual.text","location":"ast/ktast.ast/-node/-keyword/-actual/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Actual.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.AndAnd.text","location":"ast/ktast.ast/-node/-keyword/-and-and/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.AndAnd.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Annotation.text","location":"ast/ktast.ast/-node/-keyword/-annotation/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Annotation.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.As.text","location":"ast/ktast.ast/-node/-keyword/-as/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.As.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.AsQuestion.text","location":"ast/ktast.ast/-node/-keyword/-as-question/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.AsQuestion.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Asterisk.text","location":"ast/ktast.ast/-node/-keyword/-asterisk/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Asterisk.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.AsteriskEqual.text","location":"ast/ktast.ast/-node/-keyword/-asterisk-equal/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.AsteriskEqual.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.At.text","location":"ast/ktast.ast/-node/-keyword/-at/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.At.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.By.text","location":"ast/ktast.ast/-node/-keyword/-by/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.By.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Catch.text","location":"ast/ktast.ast/-node/-keyword/-catch/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Catch.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Class.text","location":"ast/ktast.ast/-node/-keyword/-class/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Class.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Colon.text","location":"ast/ktast.ast/-node/-keyword/-colon/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Colon.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Comma.text","location":"ast/ktast.ast/-node/-keyword/-comma/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Comma.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Companion.text","location":"ast/ktast.ast/-node/-keyword/-companion/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Companion.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Const.text","location":"ast/ktast.ast/-node/-keyword/-const/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Const.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Constructor.text","location":"ast/ktast.ast/-node/-keyword/-constructor/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Constructor.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Contract.text","location":"ast/ktast.ast/-node/-keyword/-contract/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Contract.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.CrossInline.text","location":"ast/ktast.ast/-node/-keyword/-cross-inline/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.CrossInline.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Data.text","location":"ast/ktast.ast/-node/-keyword/-data/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Data.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Delegate.text","location":"ast/ktast.ast/-node/-keyword/-delegate/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Delegate.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Do.text","location":"ast/ktast.ast/-node/-keyword/-do/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Do.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Dot.text","location":"ast/ktast.ast/-node/-keyword/-dot/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Dot.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.DotDot.text","location":"ast/ktast.ast/-node/-keyword/-dot-dot/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.DotDot.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.DotDotLess.text","location":"ast/ktast.ast/-node/-keyword/-dot-dot-less/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.DotDotLess.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Else.text","location":"ast/ktast.ast/-node/-keyword/-else/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Else.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Enum.text","location":"ast/ktast.ast/-node/-keyword/-enum/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Enum.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Equal.text","location":"ast/ktast.ast/-node/-keyword/-equal/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Equal.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.EqualEqual.text","location":"ast/ktast.ast/-node/-keyword/-equal-equal/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.EqualEqual.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Expect.text","location":"ast/ktast.ast/-node/-keyword/-expect/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Expect.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.External.text","location":"ast/ktast.ast/-node/-keyword/-external/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.External.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Field.text","location":"ast/ktast.ast/-node/-keyword/-field/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Field.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.File.text","location":"ast/ktast.ast/-node/-keyword/-file/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.File.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Final.text","location":"ast/ktast.ast/-node/-keyword/-final/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Final.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.For.text","location":"ast/ktast.ast/-node/-keyword/-for/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.For.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Fun.text","location":"ast/ktast.ast/-node/-keyword/-fun/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Fun.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Get.text","location":"ast/ktast.ast/-node/-keyword/-get/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Get.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Greater.text","location":"ast/ktast.ast/-node/-keyword/-greater/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Greater.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.GreaterEqual.text","location":"ast/ktast.ast/-node/-keyword/-greater-equal/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.GreaterEqual.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.If.text","location":"ast/ktast.ast/-node/-keyword/-if/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.If.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Import.text","location":"ast/ktast.ast/-node/-keyword/-import/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Import.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.In.text","location":"ast/ktast.ast/-node/-keyword/-in/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.In.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Infix.text","location":"ast/ktast.ast/-node/-keyword/-infix/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Infix.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Inline.text","location":"ast/ktast.ast/-node/-keyword/-inline/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Inline.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Inner.text","location":"ast/ktast.ast/-node/-keyword/-inner/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Inner.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Interface.text","location":"ast/ktast.ast/-node/-keyword/-interface/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Interface.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Internal.text","location":"ast/ktast.ast/-node/-keyword/-internal/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Internal.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Is.text","location":"ast/ktast.ast/-node/-keyword/-is/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Is.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.LBrace.text","location":"ast/ktast.ast/-node/-keyword/-l-brace/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.LBrace.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.LBracket.text","location":"ast/ktast.ast/-node/-keyword/-l-bracket/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.LBracket.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.LPar.text","location":"ast/ktast.ast/-node/-keyword/-l-par/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.LPar.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.LateInit.text","location":"ast/ktast.ast/-node/-keyword/-late-init/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.LateInit.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Less.text","location":"ast/ktast.ast/-node/-keyword/-less/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Less.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.LessEqual.text","location":"ast/ktast.ast/-node/-keyword/-less-equal/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.LessEqual.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Minus.text","location":"ast/ktast.ast/-node/-keyword/-minus/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Minus.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.MinusEqual.text","location":"ast/ktast.ast/-node/-keyword/-minus-equal/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.MinusEqual.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.MinusMinus.text","location":"ast/ktast.ast/-node/-keyword/-minus-minus/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.MinusMinus.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Noinline.text","location":"ast/ktast.ast/-node/-keyword/-noinline/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Noinline.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Not.text","location":"ast/ktast.ast/-node/-keyword/-not/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Not.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.NotEqual.text","location":"ast/ktast.ast/-node/-keyword/-not-equal/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.NotEqual.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.NotIn.text","location":"ast/ktast.ast/-node/-keyword/-not-in/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.NotIn.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.NotIs.text","location":"ast/ktast.ast/-node/-keyword/-not-is/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.NotIs.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.NotNot.text","location":"ast/ktast.ast/-node/-keyword/-not-not/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.NotNot.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Object.text","location":"ast/ktast.ast/-node/-keyword/-object/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Object.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Open.text","location":"ast/ktast.ast/-node/-keyword/-open/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Open.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Operator.text","location":"ast/ktast.ast/-node/-keyword/-operator/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Operator.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.OrOr.text","location":"ast/ktast.ast/-node/-keyword/-or-or/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.OrOr.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Out.text","location":"ast/ktast.ast/-node/-keyword/-out/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Out.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Override.text","location":"ast/ktast.ast/-node/-keyword/-override/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Override.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Package.text","location":"ast/ktast.ast/-node/-keyword/-package/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Package.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Param.text","location":"ast/ktast.ast/-node/-keyword/-param/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Param.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Percent.text","location":"ast/ktast.ast/-node/-keyword/-percent/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Percent.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.PercentEqual.text","location":"ast/ktast.ast/-node/-keyword/-percent-equal/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.PercentEqual.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Plus.text","location":"ast/ktast.ast/-node/-keyword/-plus/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Plus.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.PlusEqual.text","location":"ast/ktast.ast/-node/-keyword/-plus-equal/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.PlusEqual.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.PlusPlus.text","location":"ast/ktast.ast/-node/-keyword/-plus-plus/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.PlusPlus.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Private.text","location":"ast/ktast.ast/-node/-keyword/-private/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Private.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Property.text","location":"ast/ktast.ast/-node/-keyword/-property/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Property.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Protected.text","location":"ast/ktast.ast/-node/-keyword/-protected/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Protected.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Public.text","location":"ast/ktast.ast/-node/-keyword/-public/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Public.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Question.text","location":"ast/ktast.ast/-node/-keyword/-question/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Question.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.QuestionColon.text","location":"ast/ktast.ast/-node/-keyword/-question-colon/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.QuestionColon.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.QuestionDot.text","location":"ast/ktast.ast/-node/-keyword/-question-dot/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.QuestionDot.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.RBrace.text","location":"ast/ktast.ast/-node/-keyword/-r-brace/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.RBrace.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.RBracket.text","location":"ast/ktast.ast/-node/-keyword/-r-bracket/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.RBracket.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.RPar.text","location":"ast/ktast.ast/-node/-keyword/-r-par/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.RPar.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Receiver.text","location":"ast/ktast.ast/-node/-keyword/-receiver/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Receiver.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Reified.text","location":"ast/ktast.ast/-node/-keyword/-reified/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Reified.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Sealed.text","location":"ast/ktast.ast/-node/-keyword/-sealed/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Sealed.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Set.text","location":"ast/ktast.ast/-node/-keyword/-set/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Set.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.SetParam.text","location":"ast/ktast.ast/-node/-keyword/-set-param/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.SetParam.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Slash.text","location":"ast/ktast.ast/-node/-keyword/-slash/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Slash.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.SlashEqual.text","location":"ast/ktast.ast/-node/-keyword/-slash-equal/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.SlashEqual.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Suspend.text","location":"ast/ktast.ast/-node/-keyword/-suspend/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Suspend.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.TailRec.text","location":"ast/ktast.ast/-node/-keyword/-tail-rec/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.TailRec.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Val.text","location":"ast/ktast.ast/-node/-keyword/-val/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Val.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Value.text","location":"ast/ktast.ast/-node/-keyword/-value/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Value.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Var.text","location":"ast/ktast.ast/-node/-keyword/-var/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Var.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Vararg.text","location":"ast/ktast.ast/-node/-keyword/-vararg/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Vararg.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.When.text","location":"ast/ktast.ast/-node/-keyword/-when/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.When.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.Where.text","location":"ast/ktast.ast/-node/-keyword/-where/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.Where.text"]},{"name":"open override val text: String","description":"ktast.ast.Node.Keyword.While.text","location":"ast/ktast.ast/-node/-keyword/-while/text.html","searchKeys":["text","open override val text: String","ktast.ast.Node.Keyword.While.text"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.ContextReceiverTypes.trailingComma","location":"ast/ktast.ast/-node/-context-receiver-types/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.ContextReceiverTypes.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.Expression.WhenExpression.ConditionalWhenBranch.trailingComma","location":"ast/ktast.ast/-node/-expression/-when-expression/-conditional-when-branch/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.Expression.WhenExpression.ConditionalWhenBranch.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.FunctionParams.trailingComma","location":"ast/ktast.ast/-node/-function-params/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.FunctionParams.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.LambdaParams.trailingComma","location":"ast/ktast.ast/-node/-lambda-params/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.LambdaParams.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.PostModifier.Contract.ContractEffects.trailingComma","location":"ast/ktast.ast/-node/-post-modifier/-contract/-contract-effects/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.PostModifier.Contract.ContractEffects.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.Type.FunctionType.FunctionTypeParams.trailingComma","location":"ast/ktast.ast/-node/-type/-function-type/-function-type-params/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.Type.FunctionType.FunctionTypeParams.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.TypeArgs.trailingComma","location":"ast/ktast.ast/-node/-type-args/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.TypeArgs.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.TypeParams.trailingComma","location":"ast/ktast.ast/-node/-type-params/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.TypeParams.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.ValueArgs.trailingComma","location":"ast/ktast.ast/-node/-value-args/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.ValueArgs.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma? = null","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassParents.trailingComma","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-parents/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma? = null","ktast.ast.Node.Declaration.ClassDeclaration.ClassParents.trailingComma"]},{"name":"open override val trailingComma: Node.Keyword.Comma? = null","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraints.trailingComma","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/-type-constraints/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Node.Keyword.Comma? = null","ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraints.trailingComma"]},{"name":"open override val trailingComma: Nothing? = null","description":"ktast.ast.Node.Expression.WhenExpression.ElseWhenBranch.trailingComma","location":"ast/ktast.ast/-node/-expression/-when-expression/-else-when-branch/trailing-comma.html","searchKeys":["trailingComma","open override val trailingComma: Nothing? = null","ktast.ast.Node.Expression.WhenExpression.ElseWhenBranch.trailingComma"]},{"name":"open override val type: Node.Type","description":"ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.type","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-delegation-class-parent/type.html","searchKeys":["type","open override val type: Node.Type","ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.type"]},{"name":"open override val type: Node.Type","description":"ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.type","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-type-class-parent/type.html","searchKeys":["type","open override val type: Node.Type","ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.type"]},{"name":"open override val type: Node.Type","description":"ktast.ast.Node.Expression.WhenExpression.TypeWhenCondition.type","location":"ast/ktast.ast/-node/-expression/-when-expression/-type-when-condition/type.html","searchKeys":["type","open override val type: Node.Type","ktast.ast.Node.Expression.WhenExpression.TypeWhenCondition.type"]},{"name":"open override val type: Node.Type","description":"ktast.ast.Node.TypeArg.TypeProjection.type","location":"ast/ktast.ast/-node/-type-arg/-type-projection/type.html","searchKeys":["type","open override val type: Node.Type","ktast.ast.Node.TypeArg.TypeProjection.type"]},{"name":"open override val type: Node.Type.SimpleType","description":"ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.type","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-constructor-class-parent/type.html","searchKeys":["type","open override val type: Node.Type.SimpleType","ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.type"]},{"name":"open override val type: Nothing? = null","description":"ktast.ast.Node.Expression.WhenExpression.ExpressionWhenCondition.type","location":"ast/ktast.ast/-node/-expression/-when-expression/-expression-when-condition/type.html","searchKeys":["type","open override val type: Nothing? = null","ktast.ast.Node.Expression.WhenExpression.ExpressionWhenCondition.type"]},{"name":"open override val type: Nothing? = null","description":"ktast.ast.Node.Expression.WhenExpression.RangeWhenCondition.type","location":"ast/ktast.ast/-node/-expression/-when-expression/-range-when-condition/type.html","searchKeys":["type","open override val type: Nothing? = null","ktast.ast.Node.Expression.WhenExpression.RangeWhenCondition.type"]},{"name":"open override val type: Nothing? = null","description":"ktast.ast.Node.TypeArg.StarProjection.type","location":"ast/ktast.ast/-node/-type-arg/-star-projection/type.html","searchKeys":["type","open override val type: Nothing? = null","ktast.ast.Node.TypeArg.StarProjection.type"]},{"name":"open override val typeArgs: Node.TypeArgs?","description":"ktast.ast.Node.Expression.CallExpression.typeArgs","location":"ast/ktast.ast/-node/-expression/-call-expression/type-args.html","searchKeys":["typeArgs","open override val typeArgs: Node.TypeArgs?","ktast.ast.Node.Expression.CallExpression.typeArgs"]},{"name":"open override val typeArgs: Node.TypeArgs?","description":"ktast.ast.Node.Type.SimpleType.SimpleTypeQualifier.typeArgs","location":"ast/ktast.ast/-node/-type/-simple-type/-simple-type-qualifier/type-args.html","searchKeys":["typeArgs","open override val typeArgs: Node.TypeArgs?","ktast.ast.Node.Type.SimpleType.SimpleTypeQualifier.typeArgs"]},{"name":"open override val typeArgs: Node.TypeArgs?","description":"ktast.ast.Node.Type.SimpleType.typeArgs","location":"ast/ktast.ast/-node/-type/-simple-type/type-args.html","searchKeys":["typeArgs","open override val typeArgs: Node.TypeArgs?","ktast.ast.Node.Type.SimpleType.typeArgs"]},{"name":"open override val typeParams: Node.TypeParams?","description":"ktast.ast.Node.Declaration.ClassDeclaration.typeParams","location":"ast/ktast.ast/-node/-declaration/-class-declaration/type-params.html","searchKeys":["typeParams","open override val typeParams: Node.TypeParams?","ktast.ast.Node.Declaration.ClassDeclaration.typeParams"]},{"name":"open override val typeParams: Node.TypeParams?","description":"ktast.ast.Node.Declaration.FunctionDeclaration.typeParams","location":"ast/ktast.ast/-node/-declaration/-function-declaration/type-params.html","searchKeys":["typeParams","open override val typeParams: Node.TypeParams?","ktast.ast.Node.Declaration.FunctionDeclaration.typeParams"]},{"name":"open override val typeParams: Node.TypeParams?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.typeParams","location":"ast/ktast.ast/-node/-declaration/-property-declaration/type-params.html","searchKeys":["typeParams","open override val typeParams: Node.TypeParams?","ktast.ast.Node.Declaration.PropertyDeclaration.typeParams"]},{"name":"open override val typeParams: Node.TypeParams?","description":"ktast.ast.Node.Declaration.TypeAliasDeclaration.typeParams","location":"ast/ktast.ast/-node/-declaration/-type-alias-declaration/type-params.html","searchKeys":["typeParams","open override val typeParams: Node.TypeParams?","ktast.ast.Node.Declaration.TypeAliasDeclaration.typeParams"]},{"name":"open override val whenConditions: List<Node.Expression.WhenExpression.WhenCondition>","description":"ktast.ast.Node.Expression.WhenExpression.ConditionalWhenBranch.whenConditions","location":"ast/ktast.ast/-node/-expression/-when-expression/-conditional-when-branch/when-conditions.html","searchKeys":["whenConditions","open override val whenConditions: List<Node.Expression.WhenExpression.WhenCondition>","ktast.ast.Node.Expression.WhenExpression.ConditionalWhenBranch.whenConditions"]},{"name":"open override val whenConditions: List<Node.Expression.WhenExpression.WhenCondition>","description":"ktast.ast.Node.Expression.WhenExpression.ElseWhenBranch.whenConditions","location":"ast/ktast.ast/-node/-expression/-when-expression/-else-when-branch/when-conditions.html","searchKeys":["whenConditions","open override val whenConditions: List<Node.Expression.WhenExpression.WhenCondition>","ktast.ast.Node.Expression.WhenExpression.ElseWhenBranch.whenConditions"]},{"name":"open override val whileKeyword: Node.Keyword.While","description":"ktast.ast.Node.Statement.DoWhileStatement.whileKeyword","location":"ast/ktast.ast/-node/-statement/-do-while-statement/while-keyword.html","searchKeys":["whileKeyword","open override val whileKeyword: Node.Keyword.While","ktast.ast.Node.Statement.DoWhileStatement.whileKeyword"]},{"name":"open override val whileKeyword: Node.Keyword.While","description":"ktast.ast.Node.Statement.WhileStatement.whileKeyword","location":"ast/ktast.ast/-node/-statement/-while-statement/while-keyword.html","searchKeys":["whileKeyword","open override val whileKeyword: Node.Keyword.While","ktast.ast.Node.Statement.WhileStatement.whileKeyword"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ContextReceiver.tag","location":"ast/ktast.ast/-node/-context-receiver/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ContextReceiver.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ContextReceiverTypes.tag","location":"ast/ktast.ast/-node/-context-receiver-types/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ContextReceiverTypes.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.tag","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-enum-entry/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.Initializer.tag","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-initializer/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.Initializer.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.tag","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-secondary-constructor/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.tag","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassParents.tag","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-parents/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.ClassDeclaration.ClassParents.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.tag","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-constructor-class-parent/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.ClassDeclaration.ConstructorClassParent.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.tag","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-delegation-class-parent/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.ClassDeclaration.DelegationClassParent.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor.tag","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-primary-constructor/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.tag","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-type-class-parent/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.ClassDeclaration.TypeClassParent.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.ClassDeclaration.tag","location":"ast/ktast.ast/-node/-declaration/-class-declaration/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.ClassDeclaration.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.FunctionDeclaration.tag","location":"ast/ktast.ast/-node/-declaration/-function-declaration/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.FunctionDeclaration.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Getter.tag","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-getter/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.PropertyDeclaration.Getter.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.PropertyDelegate.tag","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-property-delegate/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.PropertyDeclaration.PropertyDelegate.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Setter.tag","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-setter/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.PropertyDeclaration.Setter.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.tag","location":"ast/ktast.ast/-node/-declaration/-property-declaration/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.PropertyDeclaration.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Declaration.TypeAliasDeclaration.tag","location":"ast/ktast.ast/-node/-declaration/-type-alias-declaration/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Declaration.TypeAliasDeclaration.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.AnnotatedExpression.tag","location":"ast/ktast.ast/-node/-expression/-annotated-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.AnnotatedExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.AnonymousFunctionExpression.tag","location":"ast/ktast.ast/-node/-expression/-anonymous-function-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.AnonymousFunctionExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.BinaryExpression.tag","location":"ast/ktast.ast/-node/-expression/-binary-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.BinaryExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.BinaryTypeExpression.tag","location":"ast/ktast.ast/-node/-expression/-binary-type-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.BinaryTypeExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.BlockExpression.tag","location":"ast/ktast.ast/-node/-expression/-block-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.BlockExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.BooleanLiteralExpression.tag","location":"ast/ktast.ast/-node/-expression/-boolean-literal-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.BooleanLiteralExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.BreakExpression.tag","location":"ast/ktast.ast/-node/-expression/-break-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.BreakExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.CallExpression.LambdaArg.tag","location":"ast/ktast.ast/-node/-expression/-call-expression/-lambda-arg/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.CallExpression.LambdaArg.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.CallExpression.tag","location":"ast/ktast.ast/-node/-expression/-call-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.CallExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.CallableReferenceExpression.tag","location":"ast/ktast.ast/-node/-expression/-callable-reference-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.CallableReferenceExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.CharacterLiteralExpression.tag","location":"ast/ktast.ast/-node/-expression/-character-literal-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.CharacterLiteralExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.ClassLiteralExpression.tag","location":"ast/ktast.ast/-node/-expression/-class-literal-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.ClassLiteralExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.CollectionLiteralExpression.tag","location":"ast/ktast.ast/-node/-expression/-collection-literal-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.CollectionLiteralExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.ContinueExpression.tag","location":"ast/ktast.ast/-node/-expression/-continue-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.ContinueExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.IfExpression.tag","location":"ast/ktast.ast/-node/-expression/-if-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.IfExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.IndexedAccessExpression.tag","location":"ast/ktast.ast/-node/-expression/-indexed-access-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.IndexedAccessExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.IntegerLiteralExpression.tag","location":"ast/ktast.ast/-node/-expression/-integer-literal-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.IntegerLiteralExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.LabeledExpression.tag","location":"ast/ktast.ast/-node/-expression/-labeled-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.LabeledExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.LambdaExpression.LambdaBody.tag","location":"ast/ktast.ast/-node/-expression/-lambda-expression/-lambda-body/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.LambdaExpression.LambdaBody.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.LambdaExpression.tag","location":"ast/ktast.ast/-node/-expression/-lambda-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.LambdaExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.NameExpression.tag","location":"ast/ktast.ast/-node/-expression/-name-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.NameExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.NullLiteralExpression.tag","location":"ast/ktast.ast/-node/-expression/-null-literal-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.NullLiteralExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.ObjectLiteralExpression.tag","location":"ast/ktast.ast/-node/-expression/-object-literal-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.ObjectLiteralExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.ParenthesizedExpression.tag","location":"ast/ktast.ast/-node/-expression/-parenthesized-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.ParenthesizedExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.PostfixUnaryExpression.tag","location":"ast/ktast.ast/-node/-expression/-postfix-unary-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.PostfixUnaryExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.PrefixUnaryExpression.tag","location":"ast/ktast.ast/-node/-expression/-prefix-unary-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.PrefixUnaryExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.PropertyExpression.tag","location":"ast/ktast.ast/-node/-expression/-property-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.PropertyExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.RealLiteralExpression.tag","location":"ast/ktast.ast/-node/-expression/-real-literal-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.RealLiteralExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.ReturnExpression.tag","location":"ast/ktast.ast/-node/-expression/-return-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.ReturnExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.StringLiteralExpression.EscapeStringEntry.tag","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-escape-string-entry/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.StringLiteralExpression.EscapeStringEntry.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.StringLiteralExpression.LiteralStringEntry.tag","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-literal-string-entry/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.StringLiteralExpression.LiteralStringEntry.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.StringLiteralExpression.TemplateStringEntry.tag","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-template-string-entry/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.StringLiteralExpression.TemplateStringEntry.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.StringLiteralExpression.tag","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.StringLiteralExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.SuperExpression.tag","location":"ast/ktast.ast/-node/-expression/-super-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.SuperExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.ThisExpression.tag","location":"ast/ktast.ast/-node/-expression/-this-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.ThisExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.ThrowExpression.tag","location":"ast/ktast.ast/-node/-expression/-throw-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.ThrowExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.TryExpression.CatchClause.tag","location":"ast/ktast.ast/-node/-expression/-try-expression/-catch-clause/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.TryExpression.CatchClause.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.TryExpression.tag","location":"ast/ktast.ast/-node/-expression/-try-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.TryExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.WhenExpression.ConditionalWhenBranch.tag","location":"ast/ktast.ast/-node/-expression/-when-expression/-conditional-when-branch/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.WhenExpression.ConditionalWhenBranch.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.WhenExpression.ElseWhenBranch.tag","location":"ast/ktast.ast/-node/-expression/-when-expression/-else-when-branch/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.WhenExpression.ElseWhenBranch.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.WhenExpression.ExpressionWhenCondition.tag","location":"ast/ktast.ast/-node/-expression/-when-expression/-expression-when-condition/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.WhenExpression.ExpressionWhenCondition.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.WhenExpression.RangeWhenCondition.tag","location":"ast/ktast.ast/-node/-expression/-when-expression/-range-when-condition/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.WhenExpression.RangeWhenCondition.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.WhenExpression.TypeWhenCondition.tag","location":"ast/ktast.ast/-node/-expression/-when-expression/-type-when-condition/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.WhenExpression.TypeWhenCondition.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Expression.WhenExpression.tag","location":"ast/ktast.ast/-node/-expression/-when-expression/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Expression.WhenExpression.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Extra.Comment.tag","location":"ast/ktast.ast/-node/-extra/-comment/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Extra.Comment.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Extra.Semicolon.tag","location":"ast/ktast.ast/-node/-extra/-semicolon/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Extra.Semicolon.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Extra.Whitespace.tag","location":"ast/ktast.ast/-node/-extra/-whitespace/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Extra.Whitespace.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.FunctionParam.tag","location":"ast/ktast.ast/-node/-function-param/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.FunctionParam.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.FunctionParams.tag","location":"ast/ktast.ast/-node/-function-params/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.FunctionParams.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ImportDirective.ImportAlias.tag","location":"ast/ktast.ast/-node/-import-directive/-import-alias/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ImportDirective.ImportAlias.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ImportDirective.tag","location":"ast/ktast.ast/-node/-import-directive/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ImportDirective.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Abstract.tag","location":"ast/ktast.ast/-node/-keyword/-abstract/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Abstract.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Actual.tag","location":"ast/ktast.ast/-node/-keyword/-actual/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Actual.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.AndAnd.tag","location":"ast/ktast.ast/-node/-keyword/-and-and/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.AndAnd.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Annotation.tag","location":"ast/ktast.ast/-node/-keyword/-annotation/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Annotation.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.As.tag","location":"ast/ktast.ast/-node/-keyword/-as/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.As.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.AsQuestion.tag","location":"ast/ktast.ast/-node/-keyword/-as-question/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.AsQuestion.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Asterisk.tag","location":"ast/ktast.ast/-node/-keyword/-asterisk/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Asterisk.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.AsteriskEqual.tag","location":"ast/ktast.ast/-node/-keyword/-asterisk-equal/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.AsteriskEqual.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.At.tag","location":"ast/ktast.ast/-node/-keyword/-at/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.At.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.By.tag","location":"ast/ktast.ast/-node/-keyword/-by/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.By.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Catch.tag","location":"ast/ktast.ast/-node/-keyword/-catch/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Catch.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Class.tag","location":"ast/ktast.ast/-node/-keyword/-class/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Class.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Colon.tag","location":"ast/ktast.ast/-node/-keyword/-colon/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Colon.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Comma.tag","location":"ast/ktast.ast/-node/-keyword/-comma/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Comma.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Companion.tag","location":"ast/ktast.ast/-node/-keyword/-companion/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Companion.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Const.tag","location":"ast/ktast.ast/-node/-keyword/-const/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Const.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Constructor.tag","location":"ast/ktast.ast/-node/-keyword/-constructor/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Constructor.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Contract.tag","location":"ast/ktast.ast/-node/-keyword/-contract/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Contract.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.CrossInline.tag","location":"ast/ktast.ast/-node/-keyword/-cross-inline/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.CrossInline.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Data.tag","location":"ast/ktast.ast/-node/-keyword/-data/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Data.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Delegate.tag","location":"ast/ktast.ast/-node/-keyword/-delegate/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Delegate.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Do.tag","location":"ast/ktast.ast/-node/-keyword/-do/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Do.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Dot.tag","location":"ast/ktast.ast/-node/-keyword/-dot/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Dot.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.DotDot.tag","location":"ast/ktast.ast/-node/-keyword/-dot-dot/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.DotDot.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.DotDotLess.tag","location":"ast/ktast.ast/-node/-keyword/-dot-dot-less/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.DotDotLess.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Else.tag","location":"ast/ktast.ast/-node/-keyword/-else/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Else.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Enum.tag","location":"ast/ktast.ast/-node/-keyword/-enum/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Enum.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Equal.tag","location":"ast/ktast.ast/-node/-keyword/-equal/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Equal.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.EqualEqual.tag","location":"ast/ktast.ast/-node/-keyword/-equal-equal/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.EqualEqual.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Expect.tag","location":"ast/ktast.ast/-node/-keyword/-expect/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Expect.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.External.tag","location":"ast/ktast.ast/-node/-keyword/-external/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.External.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Field.tag","location":"ast/ktast.ast/-node/-keyword/-field/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Field.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.File.tag","location":"ast/ktast.ast/-node/-keyword/-file/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.File.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Final.tag","location":"ast/ktast.ast/-node/-keyword/-final/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Final.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.For.tag","location":"ast/ktast.ast/-node/-keyword/-for/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.For.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Fun.tag","location":"ast/ktast.ast/-node/-keyword/-fun/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Fun.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Get.tag","location":"ast/ktast.ast/-node/-keyword/-get/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Get.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Greater.tag","location":"ast/ktast.ast/-node/-keyword/-greater/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Greater.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.GreaterEqual.tag","location":"ast/ktast.ast/-node/-keyword/-greater-equal/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.GreaterEqual.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.If.tag","location":"ast/ktast.ast/-node/-keyword/-if/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.If.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Import.tag","location":"ast/ktast.ast/-node/-keyword/-import/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Import.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.In.tag","location":"ast/ktast.ast/-node/-keyword/-in/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.In.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Infix.tag","location":"ast/ktast.ast/-node/-keyword/-infix/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Infix.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Inline.tag","location":"ast/ktast.ast/-node/-keyword/-inline/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Inline.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Inner.tag","location":"ast/ktast.ast/-node/-keyword/-inner/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Inner.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Interface.tag","location":"ast/ktast.ast/-node/-keyword/-interface/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Interface.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Internal.tag","location":"ast/ktast.ast/-node/-keyword/-internal/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Internal.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Is.tag","location":"ast/ktast.ast/-node/-keyword/-is/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Is.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.LBrace.tag","location":"ast/ktast.ast/-node/-keyword/-l-brace/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.LBrace.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.LBracket.tag","location":"ast/ktast.ast/-node/-keyword/-l-bracket/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.LBracket.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.LPar.tag","location":"ast/ktast.ast/-node/-keyword/-l-par/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.LPar.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.LateInit.tag","location":"ast/ktast.ast/-node/-keyword/-late-init/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.LateInit.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Less.tag","location":"ast/ktast.ast/-node/-keyword/-less/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Less.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.LessEqual.tag","location":"ast/ktast.ast/-node/-keyword/-less-equal/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.LessEqual.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Minus.tag","location":"ast/ktast.ast/-node/-keyword/-minus/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Minus.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.MinusEqual.tag","location":"ast/ktast.ast/-node/-keyword/-minus-equal/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.MinusEqual.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.MinusMinus.tag","location":"ast/ktast.ast/-node/-keyword/-minus-minus/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.MinusMinus.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Noinline.tag","location":"ast/ktast.ast/-node/-keyword/-noinline/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Noinline.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Not.tag","location":"ast/ktast.ast/-node/-keyword/-not/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Not.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.NotEqual.tag","location":"ast/ktast.ast/-node/-keyword/-not-equal/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.NotEqual.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.NotIn.tag","location":"ast/ktast.ast/-node/-keyword/-not-in/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.NotIn.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.NotIs.tag","location":"ast/ktast.ast/-node/-keyword/-not-is/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.NotIs.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.NotNot.tag","location":"ast/ktast.ast/-node/-keyword/-not-not/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.NotNot.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Object.tag","location":"ast/ktast.ast/-node/-keyword/-object/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Object.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Open.tag","location":"ast/ktast.ast/-node/-keyword/-open/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Open.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Operator.tag","location":"ast/ktast.ast/-node/-keyword/-operator/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Operator.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.OrOr.tag","location":"ast/ktast.ast/-node/-keyword/-or-or/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.OrOr.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Out.tag","location":"ast/ktast.ast/-node/-keyword/-out/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Out.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Override.tag","location":"ast/ktast.ast/-node/-keyword/-override/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Override.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Package.tag","location":"ast/ktast.ast/-node/-keyword/-package/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Package.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Param.tag","location":"ast/ktast.ast/-node/-keyword/-param/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Param.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Percent.tag","location":"ast/ktast.ast/-node/-keyword/-percent/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Percent.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.PercentEqual.tag","location":"ast/ktast.ast/-node/-keyword/-percent-equal/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.PercentEqual.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Plus.tag","location":"ast/ktast.ast/-node/-keyword/-plus/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Plus.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.PlusEqual.tag","location":"ast/ktast.ast/-node/-keyword/-plus-equal/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.PlusEqual.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.PlusPlus.tag","location":"ast/ktast.ast/-node/-keyword/-plus-plus/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.PlusPlus.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Private.tag","location":"ast/ktast.ast/-node/-keyword/-private/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Private.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Property.tag","location":"ast/ktast.ast/-node/-keyword/-property/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Property.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Protected.tag","location":"ast/ktast.ast/-node/-keyword/-protected/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Protected.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Public.tag","location":"ast/ktast.ast/-node/-keyword/-public/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Public.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Question.tag","location":"ast/ktast.ast/-node/-keyword/-question/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Question.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.QuestionColon.tag","location":"ast/ktast.ast/-node/-keyword/-question-colon/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.QuestionColon.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.QuestionDot.tag","location":"ast/ktast.ast/-node/-keyword/-question-dot/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.QuestionDot.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.RBrace.tag","location":"ast/ktast.ast/-node/-keyword/-r-brace/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.RBrace.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.RBracket.tag","location":"ast/ktast.ast/-node/-keyword/-r-bracket/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.RBracket.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.RPar.tag","location":"ast/ktast.ast/-node/-keyword/-r-par/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.RPar.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Receiver.tag","location":"ast/ktast.ast/-node/-keyword/-receiver/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Receiver.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Reified.tag","location":"ast/ktast.ast/-node/-keyword/-reified/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Reified.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Sealed.tag","location":"ast/ktast.ast/-node/-keyword/-sealed/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Sealed.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Set.tag","location":"ast/ktast.ast/-node/-keyword/-set/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Set.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.SetParam.tag","location":"ast/ktast.ast/-node/-keyword/-set-param/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.SetParam.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Slash.tag","location":"ast/ktast.ast/-node/-keyword/-slash/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Slash.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.SlashEqual.tag","location":"ast/ktast.ast/-node/-keyword/-slash-equal/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.SlashEqual.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Suspend.tag","location":"ast/ktast.ast/-node/-keyword/-suspend/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Suspend.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.TailRec.tag","location":"ast/ktast.ast/-node/-keyword/-tail-rec/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.TailRec.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Val.tag","location":"ast/ktast.ast/-node/-keyword/-val/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Val.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Value.tag","location":"ast/ktast.ast/-node/-keyword/-value/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Value.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Var.tag","location":"ast/ktast.ast/-node/-keyword/-var/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Var.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Vararg.tag","location":"ast/ktast.ast/-node/-keyword/-vararg/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Vararg.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.When.tag","location":"ast/ktast.ast/-node/-keyword/-when/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.When.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.Where.tag","location":"ast/ktast.ast/-node/-keyword/-where/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.Where.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Keyword.While.tag","location":"ast/ktast.ast/-node/-keyword/-while/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Keyword.While.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.KotlinFile.tag","location":"ast/ktast.ast/-node/-kotlin-file/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.KotlinFile.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.KotlinScript.tag","location":"ast/ktast.ast/-node/-kotlin-script/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.KotlinScript.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.LambdaParam.tag","location":"ast/ktast.ast/-node/-lambda-param/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.LambdaParam.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.LambdaParams.tag","location":"ast/ktast.ast/-node/-lambda-params/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.LambdaParams.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Modifier.AnnotationSet.Annotation.tag","location":"ast/ktast.ast/-node/-modifier/-annotation-set/-annotation/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Modifier.AnnotationSet.Annotation.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Modifier.AnnotationSet.tag","location":"ast/ktast.ast/-node/-modifier/-annotation-set/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Modifier.AnnotationSet.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Modifiers.tag","location":"ast/ktast.ast/-node/-modifiers/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Modifiers.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.PackageDirective.tag","location":"ast/ktast.ast/-node/-package-directive/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.PackageDirective.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.PostModifier.Contract.ContractEffects.tag","location":"ast/ktast.ast/-node/-post-modifier/-contract/-contract-effects/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.PostModifier.Contract.ContractEffects.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.PostModifier.Contract.tag","location":"ast/ktast.ast/-node/-post-modifier/-contract/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.PostModifier.Contract.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraint.tag","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/-type-constraint/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraint.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraints.tag","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/-type-constraints/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraints.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.tag","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.PostModifier.TypeConstraintSet.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Statement.DoWhileStatement.tag","location":"ast/ktast.ast/-node/-statement/-do-while-statement/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Statement.DoWhileStatement.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Statement.ForStatement.tag","location":"ast/ktast.ast/-node/-statement/-for-statement/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Statement.ForStatement.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Statement.WhileStatement.tag","location":"ast/ktast.ast/-node/-statement/-while-statement/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Statement.WhileStatement.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Type.DynamicType.tag","location":"ast/ktast.ast/-node/-type/-dynamic-type/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Type.DynamicType.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Type.FunctionType.FunctionTypeParam.tag","location":"ast/ktast.ast/-node/-type/-function-type/-function-type-param/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Type.FunctionType.FunctionTypeParam.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Type.FunctionType.FunctionTypeParams.tag","location":"ast/ktast.ast/-node/-type/-function-type/-function-type-params/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Type.FunctionType.FunctionTypeParams.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Type.FunctionType.tag","location":"ast/ktast.ast/-node/-type/-function-type/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Type.FunctionType.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Type.NullableType.tag","location":"ast/ktast.ast/-node/-type/-nullable-type/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Type.NullableType.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Type.ParenthesizedType.tag","location":"ast/ktast.ast/-node/-type/-parenthesized-type/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Type.ParenthesizedType.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Type.SimpleType.SimpleTypeQualifier.tag","location":"ast/ktast.ast/-node/-type/-simple-type/-simple-type-qualifier/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Type.SimpleType.SimpleTypeQualifier.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Type.SimpleType.tag","location":"ast/ktast.ast/-node/-type/-simple-type/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Type.SimpleType.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TypeArg.StarProjection.tag","location":"ast/ktast.ast/-node/-type-arg/-star-projection/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TypeArg.StarProjection.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TypeArg.TypeProjection.tag","location":"ast/ktast.ast/-node/-type-arg/-type-projection/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TypeArg.TypeProjection.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TypeArgs.tag","location":"ast/ktast.ast/-node/-type-args/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TypeArgs.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TypeParam.tag","location":"ast/ktast.ast/-node/-type-param/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TypeParam.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.TypeParams.tag","location":"ast/ktast.ast/-node/-type-params/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.TypeParams.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ValueArg.tag","location":"ast/ktast.ast/-node/-value-arg/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ValueArg.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.ValueArgs.tag","location":"ast/ktast.ast/-node/-value-args/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.ValueArgs.tag"]},{"name":"open override var tag: Any?","description":"ktast.ast.Node.Variable.tag","location":"ast/ktast.ast/-node/-variable/tag.html","searchKeys":["tag","open override var tag: Any?","ktast.ast.Node.Variable.tag"]},{"name":"val accessors: List<Node.Declaration.PropertyDeclaration.Accessor>","description":"ktast.ast.Node.Declaration.PropertyDeclaration.accessors","location":"ast/ktast.ast/-node/-declaration/-property-declaration/accessors.html","searchKeys":["accessors","val accessors: List<Node.Declaration.PropertyDeclaration.Accessor>","ktast.ast.Node.Declaration.PropertyDeclaration.accessors"]},{"name":"val annotations: List<Node.Modifier.AnnotationSet.Annotation>","description":"ktast.ast.Node.Modifier.AnnotationSet.annotations","location":"ast/ktast.ast/-node/-modifier/-annotation-set/annotations.html","searchKeys":["annotations","val annotations: List<Node.Modifier.AnnotationSet.Annotation>","ktast.ast.Node.Modifier.AnnotationSet.annotations"]},{"name":"val app: Appendable","description":"ktast.ast.Writer.app","location":"ast/ktast.ast/-writer/app.html","searchKeys":["app","val app: Appendable","ktast.ast.Writer.app"]},{"name":"val asterisk: Node.Keyword.Asterisk?","description":"ktast.ast.Node.ValueArg.asterisk","location":"ast/ktast.ast/-node/-value-arg/asterisk.html","searchKeys":["asterisk","val asterisk: Node.Keyword.Asterisk?","ktast.ast.Node.ValueArg.asterisk"]},{"name":"val atSymbol: Node.Keyword.At?","description":"ktast.ast.Node.Modifier.AnnotationSet.atSymbol","location":"ast/ktast.ast/-node/-modifier/-annotation-set/at-symbol.html","searchKeys":["atSymbol","val atSymbol: Node.Keyword.At?","ktast.ast.Node.Modifier.AnnotationSet.atSymbol"]},{"name":"val block: Node.Expression.BlockExpression","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.Initializer.block","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-initializer/block.html","searchKeys":["block","val block: Node.Expression.BlockExpression","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.Initializer.block"]},{"name":"val block: Node.Expression.BlockExpression","description":"ktast.ast.Node.Expression.TryExpression.CatchClause.block","location":"ast/ktast.ast/-node/-expression/-try-expression/-catch-clause/block.html","searchKeys":["block","val block: Node.Expression.BlockExpression","ktast.ast.Node.Expression.TryExpression.CatchClause.block"]},{"name":"val block: Node.Expression.BlockExpression","description":"ktast.ast.Node.Expression.TryExpression.block","location":"ast/ktast.ast/-node/-expression/-try-expression/block.html","searchKeys":["block","val block: Node.Expression.BlockExpression","ktast.ast.Node.Expression.TryExpression.block"]},{"name":"val block: Node.Expression.BlockExpression?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.block","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-secondary-constructor/block.html","searchKeys":["block","val block: Node.Expression.BlockExpression?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.block"]},{"name":"val body: Node.Expression","description":"ktast.ast.Node.Expression.IfExpression.body","location":"ast/ktast.ast/-node/-expression/-if-expression/body.html","searchKeys":["body","val body: Node.Expression","ktast.ast.Node.Expression.IfExpression.body"]},{"name":"val body: Node.Expression","description":"ktast.ast.Node.Statement.ForStatement.body","location":"ast/ktast.ast/-node/-statement/-for-statement/body.html","searchKeys":["body","val body: Node.Expression","ktast.ast.Node.Statement.ForStatement.body"]},{"name":"val byKeyword: Node.Keyword.By","description":"ktast.ast.Node.Declaration.PropertyDeclaration.PropertyDelegate.byKeyword","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-property-delegate/by-keyword.html","searchKeys":["byKeyword","val byKeyword: Node.Keyword.By","ktast.ast.Node.Declaration.PropertyDeclaration.PropertyDelegate.byKeyword"]},{"name":"val calleeExpression: Node.Expression","description":"ktast.ast.Node.Expression.CallExpression.calleeExpression","location":"ast/ktast.ast/-node/-expression/-call-expression/callee-expression.html","searchKeys":["calleeExpression","val calleeExpression: Node.Expression","ktast.ast.Node.Expression.CallExpression.calleeExpression"]},{"name":"val catchClauses: List<Node.Expression.TryExpression.CatchClause>","description":"ktast.ast.Node.Expression.TryExpression.catchClauses","location":"ast/ktast.ast/-node/-expression/-try-expression/catch-clauses.html","searchKeys":["catchClauses","val catchClauses: List<Node.Expression.TryExpression.CatchClause>","ktast.ast.Node.Expression.TryExpression.catchClauses"]},{"name":"val catchKeyword: Node.Keyword.Catch","description":"ktast.ast.Node.Expression.TryExpression.CatchClause.catchKeyword","location":"ast/ktast.ast/-node/-expression/-try-expression/-catch-clause/catch-keyword.html","searchKeys":["catchKeyword","val catchKeyword: Node.Keyword.Catch","ktast.ast.Node.Expression.TryExpression.CatchClause.catchKeyword"]},{"name":"val classBody: Node.Declaration.ClassDeclaration.ClassBody?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.classBody","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-enum-entry/class-body.html","searchKeys":["classBody","val classBody: Node.Declaration.ClassDeclaration.ClassBody?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.classBody"]},{"name":"val classBody: Node.Declaration.ClassDeclaration.ClassBody?","description":"ktast.ast.Node.Declaration.ClassDeclaration.classBody","location":"ast/ktast.ast/-node/-declaration/-class-declaration/class-body.html","searchKeys":["classBody","val classBody: Node.Declaration.ClassDeclaration.ClassBody?","ktast.ast.Node.Declaration.ClassDeclaration.classBody"]},{"name":"val classDeclarationKeyword: Node.Declaration.ClassDeclaration.ClassDeclarationKeyword","description":"ktast.ast.Node.Declaration.ClassDeclaration.classDeclarationKeyword","location":"ast/ktast.ast/-node/-declaration/-class-declaration/class-declaration-keyword.html","searchKeys":["classDeclarationKeyword","val classDeclarationKeyword: Node.Declaration.ClassDeclaration.ClassDeclarationKeyword","ktast.ast.Node.Declaration.ClassDeclaration.classDeclarationKeyword"]},{"name":"val classParents: Node.Declaration.ClassDeclaration.ClassParents?","description":"ktast.ast.Node.Declaration.ClassDeclaration.classParents","location":"ast/ktast.ast/-node/-declaration/-class-declaration/class-parents.html","searchKeys":["classParents","val classParents: Node.Declaration.ClassDeclaration.ClassParents?","ktast.ast.Node.Declaration.ClassDeclaration.classParents"]},{"name":"val colon: Node.Keyword.Colon?","description":"ktast.ast.Node.LambdaParam.colon","location":"ast/ktast.ast/-node/-lambda-param/colon.html","searchKeys":["colon","val colon: Node.Keyword.Colon?","ktast.ast.Node.LambdaParam.colon"]},{"name":"val colon: Node.Keyword.Colon?","description":"ktast.ast.Node.Modifier.AnnotationSet.colon","location":"ast/ktast.ast/-node/-modifier/-annotation-set/colon.html","searchKeys":["colon","val colon: Node.Keyword.Colon?","ktast.ast.Node.Modifier.AnnotationSet.colon"]},{"name":"val condition: Node.Expression","description":"ktast.ast.Node.Expression.IfExpression.condition","location":"ast/ktast.ast/-node/-expression/-if-expression/condition.html","searchKeys":["condition","val condition: Node.Expression","ktast.ast.Node.Expression.IfExpression.condition"]},{"name":"val constraints: Node.PostModifier.TypeConstraintSet.TypeConstraints","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.constraints","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/constraints.html","searchKeys":["constraints","val constraints: Node.PostModifier.TypeConstraintSet.TypeConstraints","ktast.ast.Node.PostModifier.TypeConstraintSet.constraints"]},{"name":"val constructorKeyword: Node.Keyword.Constructor","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.constructorKeyword","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-secondary-constructor/constructor-keyword.html","searchKeys":["constructorKeyword","val constructorKeyword: Node.Keyword.Constructor","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.constructorKeyword"]},{"name":"val constructorKeyword: Node.Keyword.Constructor?","description":"ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor.constructorKeyword","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-primary-constructor/constructor-keyword.html","searchKeys":["constructorKeyword","val constructorKeyword: Node.Keyword.Constructor?","ktast.ast.Node.Declaration.ClassDeclaration.PrimaryConstructor.constructorKeyword"]},{"name":"val contextReceiver: Node.ContextReceiver?","description":"ktast.ast.Node.Type.FunctionType.contextReceiver","location":"ast/ktast.ast/-node/-type/-function-type/context-receiver.html","searchKeys":["contextReceiver","val contextReceiver: Node.ContextReceiver?","ktast.ast.Node.Type.FunctionType.contextReceiver"]},{"name":"val contractEffects: Node.PostModifier.Contract.ContractEffects","description":"ktast.ast.Node.PostModifier.Contract.contractEffects","location":"ast/ktast.ast/-node/-post-modifier/-contract/contract-effects.html","searchKeys":["contractEffects","val contractEffects: Node.PostModifier.Contract.ContractEffects","ktast.ast.Node.PostModifier.Contract.contractEffects"]},{"name":"val contractKeyword: Node.Keyword.Contract","description":"ktast.ast.Node.PostModifier.Contract.contractKeyword","location":"ast/ktast.ast/-node/-post-modifier/-contract/contract-keyword.html","searchKeys":["contractKeyword","val contractKeyword: Node.Keyword.Contract","ktast.ast.Node.PostModifier.Contract.contractKeyword"]},{"name":"val declaration: Node.Declaration.ClassDeclaration","description":"ktast.ast.Node.Expression.ObjectLiteralExpression.declaration","location":"ast/ktast.ast/-node/-expression/-object-literal-expression/declaration.html","searchKeys":["declaration","val declaration: Node.Declaration.ClassDeclaration","ktast.ast.Node.Expression.ObjectLiteralExpression.declaration"]},{"name":"val defaultValue: Node.Expression?","description":"ktast.ast.Node.FunctionParam.defaultValue","location":"ast/ktast.ast/-node/-function-param/default-value.html","searchKeys":["defaultValue","val defaultValue: Node.Expression?","ktast.ast.Node.FunctionParam.defaultValue"]},{"name":"val delegationCall: Node.Expression.CallExpression?","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.delegationCall","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-secondary-constructor/delegation-call.html","searchKeys":["delegationCall","val delegationCall: Node.Expression.CallExpression?","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor.delegationCall"]},{"name":"val destructType: Node.Type?","description":"ktast.ast.Node.LambdaParam.destructType","location":"ast/ktast.ast/-node/-lambda-param/destruct-type.html","searchKeys":["destructType","val destructType: Node.Type?","ktast.ast.Node.LambdaParam.destructType"]},{"name":"val doKeyword: Node.Keyword.Do","description":"ktast.ast.Node.Statement.DoWhileStatement.doKeyword","location":"ast/ktast.ast/-node/-statement/-do-while-statement/do-keyword.html","searchKeys":["doKeyword","val doKeyword: Node.Keyword.Do","ktast.ast.Node.Statement.DoWhileStatement.doKeyword"]},{"name":"val dotSymbol: Node.Keyword.Dot?","description":"ktast.ast.Node.Type.FunctionType.dotSymbol","location":"ast/ktast.ast/-node/-type/-function-type/dot-symbol.html","searchKeys":["dotSymbol","val dotSymbol: Node.Keyword.Dot?","ktast.ast.Node.Type.FunctionType.dotSymbol"]},{"name":"val elseBody: Node.Expression?","description":"ktast.ast.Node.Expression.IfExpression.elseBody","location":"ast/ktast.ast/-node/-expression/-if-expression/else-body.html","searchKeys":["elseBody","val elseBody: Node.Expression?","ktast.ast.Node.Expression.IfExpression.elseBody"]},{"name":"val elseKeyword: Node.Keyword.Else?","description":"ktast.ast.Node.Expression.IfExpression.elseKeyword","location":"ast/ktast.ast/-node/-expression/-if-expression/else-keyword.html","searchKeys":["elseKeyword","val elseKeyword: Node.Keyword.Else?","ktast.ast.Node.Expression.IfExpression.elseKeyword"]},{"name":"val entries: List<Node.Expression.StringLiteralExpression.StringEntry>","description":"ktast.ast.Node.Expression.StringLiteralExpression.entries","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/entries.html","searchKeys":["entries","val entries: List<Node.Expression.StringLiteralExpression.StringEntry>","ktast.ast.Node.Expression.StringLiteralExpression.entries"]},{"name":"val enumEntries: List<Node.Declaration.ClassDeclaration.ClassBody.EnumEntry>","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.enumEntries","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/enum-entries.html","searchKeys":["enumEntries","val enumEntries: List<Node.Declaration.ClassDeclaration.ClassBody.EnumEntry>","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.enumEntries"]},{"name":"val equals: Node.Keyword.Equal","description":"ktast.ast.Node.Declaration.TypeAliasDeclaration.equals","location":"ast/ktast.ast/-node/-declaration/-type-alias-declaration/equals.html","searchKeys":["equals","val equals: Node.Keyword.Equal","ktast.ast.Node.Declaration.TypeAliasDeclaration.equals"]},{"name":"val equals: Node.Keyword.Equal?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.equals","location":"ast/ktast.ast/-node/-declaration/-property-declaration/equals.html","searchKeys":["equals","val equals: Node.Keyword.Equal?","ktast.ast.Node.Declaration.PropertyDeclaration.equals"]},{"name":"val equals: Node.Keyword.Equal?","description":"ktast.ast.Node.FunctionParam.equals","location":"ast/ktast.ast/-node/-function-param/equals.html","searchKeys":["equals","val equals: Node.Keyword.Equal?","ktast.ast.Node.FunctionParam.equals"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.Declaration.PropertyDeclaration.PropertyDelegate.expression","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-property-delegate/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.Declaration.PropertyDeclaration.PropertyDelegate.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.Expression.IndexedAccessExpression.expression","location":"ast/ktast.ast/-node/-expression/-indexed-access-expression/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.Expression.IndexedAccessExpression.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.Expression.ParenthesizedExpression.expression","location":"ast/ktast.ast/-node/-expression/-parenthesized-expression/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.Expression.ParenthesizedExpression.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.Expression.StringLiteralExpression.TemplateStringEntry.expression","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-template-string-entry/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.Expression.StringLiteralExpression.TemplateStringEntry.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.Expression.ThrowExpression.expression","location":"ast/ktast.ast/-node/-expression/-throw-expression/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.Expression.ThrowExpression.expression"]},{"name":"val expression: Node.Expression","description":"ktast.ast.Node.ValueArg.expression","location":"ast/ktast.ast/-node/-value-arg/expression.html","searchKeys":["expression","val expression: Node.Expression","ktast.ast.Node.ValueArg.expression"]},{"name":"val expression: Node.Expression.LambdaExpression","description":"ktast.ast.Node.Expression.CallExpression.LambdaArg.expression","location":"ast/ktast.ast/-node/-expression/-call-expression/-lambda-arg/expression.html","searchKeys":["expression","val expression: Node.Expression.LambdaExpression","ktast.ast.Node.Expression.CallExpression.LambdaArg.expression"]},{"name":"val expression: Node.Expression?","description":"ktast.ast.Node.Expression.ReturnExpression.expression","location":"ast/ktast.ast/-node/-expression/-return-expression/expression.html","searchKeys":["expression","val expression: Node.Expression?","ktast.ast.Node.Expression.ReturnExpression.expression"]},{"name":"val expression: Node.Expression?","description":"ktast.ast.Node.Expression.WhenExpression.expression","location":"ast/ktast.ast/-node/-expression/-when-expression/expression.html","searchKeys":["expression","val expression: Node.Expression?","ktast.ast.Node.Expression.WhenExpression.expression"]},{"name":"val expressions: List<Node.Expression>","description":"ktast.ast.Node.Expression.CollectionLiteralExpression.expressions","location":"ast/ktast.ast/-node/-expression/-collection-literal-expression/expressions.html","searchKeys":["expressions","val expressions: List<Node.Expression>","ktast.ast.Node.Expression.CollectionLiteralExpression.expressions"]},{"name":"val expressions: List<Node.Expression>","description":"ktast.ast.Node.KotlinScript.expressions","location":"ast/ktast.ast/-node/-kotlin-script/expressions.html","searchKeys":["expressions","val expressions: List<Node.Expression>","ktast.ast.Node.KotlinScript.expressions"]},{"name":"val extrasMap: ExtrasMap? = null","description":"ktast.ast.Writer.extrasMap","location":"ast/ktast.ast/-writer/extras-map.html","searchKeys":["extrasMap","val extrasMap: ExtrasMap? = null","ktast.ast.Writer.extrasMap"]},{"name":"val finallyBlock: Node.Expression.BlockExpression?","description":"ktast.ast.Node.Expression.TryExpression.finallyBlock","location":"ast/ktast.ast/-node/-expression/-try-expression/finally-block.html","searchKeys":["finallyBlock","val finallyBlock: Node.Expression.BlockExpression?","ktast.ast.Node.Expression.TryExpression.finallyBlock"]},{"name":"val forKeyword: Node.Keyword.For","description":"ktast.ast.Node.Statement.ForStatement.forKeyword","location":"ast/ktast.ast/-node/-statement/-for-statement/for-keyword.html","searchKeys":["forKeyword","val forKeyword: Node.Keyword.For","ktast.ast.Node.Statement.ForStatement.forKeyword"]},{"name":"val funKeyword: Node.Keyword.Fun","description":"ktast.ast.Node.Declaration.FunctionDeclaration.funKeyword","location":"ast/ktast.ast/-node/-declaration/-function-declaration/fun-keyword.html","searchKeys":["funKeyword","val funKeyword: Node.Keyword.Fun","ktast.ast.Node.Declaration.FunctionDeclaration.funKeyword"]},{"name":"val function: Node.Declaration.FunctionDeclaration","description":"ktast.ast.Node.Expression.AnonymousFunctionExpression.function","location":"ast/ktast.ast/-node/-expression/-anonymous-function-expression/function.html","searchKeys":["function","val function: Node.Declaration.FunctionDeclaration","ktast.ast.Node.Expression.AnonymousFunctionExpression.function"]},{"name":"val getKeyword: Node.Keyword.Get","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Getter.getKeyword","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-getter/get-keyword.html","searchKeys":["getKeyword","val getKeyword: Node.Keyword.Get","ktast.ast.Node.Declaration.PropertyDeclaration.Getter.getKeyword"]},{"name":"val hasTrailingCommaInEnumEntries: Boolean","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.hasTrailingCommaInEnumEntries","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/has-trailing-comma-in-enum-entries.html","searchKeys":["hasTrailingCommaInEnumEntries","val hasTrailingCommaInEnumEntries: Boolean","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.hasTrailingCommaInEnumEntries"]},{"name":"val ifKeyword: Node.Keyword.If","description":"ktast.ast.Node.Expression.IfExpression.ifKeyword","location":"ast/ktast.ast/-node/-expression/-if-expression/if-keyword.html","searchKeys":["ifKeyword","val ifKeyword: Node.Keyword.If","ktast.ast.Node.Expression.IfExpression.ifKeyword"]},{"name":"val importAlias: Node.ImportDirective.ImportAlias?","description":"ktast.ast.Node.ImportDirective.importAlias","location":"ast/ktast.ast/-node/-import-directive/import-alias.html","searchKeys":["importAlias","val importAlias: Node.ImportDirective.ImportAlias?","ktast.ast.Node.ImportDirective.importAlias"]},{"name":"val importKeyword: Node.Keyword.Import","description":"ktast.ast.Node.ImportDirective.importKeyword","location":"ast/ktast.ast/-node/-import-directive/import-keyword.html","searchKeys":["importKeyword","val importKeyword: Node.Keyword.Import","ktast.ast.Node.ImportDirective.importKeyword"]},{"name":"val inKeyword: Node.Keyword.In","description":"ktast.ast.Node.Statement.ForStatement.inKeyword","location":"ast/ktast.ast/-node/-statement/-for-statement/in-keyword.html","searchKeys":["inKeyword","val inKeyword: Node.Keyword.In","ktast.ast.Node.Statement.ForStatement.inKeyword"]},{"name":"val indices: List<Node.Expression>","description":"ktast.ast.Node.Expression.IndexedAccessExpression.indices","location":"ast/ktast.ast/-node/-expression/-indexed-access-expression/indices.html","searchKeys":["indices","val indices: List<Node.Expression>","ktast.ast.Node.Expression.IndexedAccessExpression.indices"]},{"name":"val initializer: Node.Expression?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.initializer","location":"ast/ktast.ast/-node/-declaration/-property-declaration/initializer.html","searchKeys":["initializer","val initializer: Node.Expression?","ktast.ast.Node.Declaration.PropertyDeclaration.initializer"]},{"name":"val isClass: Boolean","description":"ktast.ast.Node.Declaration.ClassDeclaration.isClass","location":"ast/ktast.ast/-node/-declaration/-class-declaration/is-class.html","searchKeys":["isClass","val isClass: Boolean","ktast.ast.Node.Declaration.ClassDeclaration.isClass"]},{"name":"val isCompanion: Boolean","description":"ktast.ast.Node.Declaration.ClassDeclaration.isCompanion","location":"ast/ktast.ast/-node/-declaration/-class-declaration/is-companion.html","searchKeys":["isCompanion","val isCompanion: Boolean","ktast.ast.Node.Declaration.ClassDeclaration.isCompanion"]},{"name":"val isEnum: Boolean","description":"ktast.ast.Node.Declaration.ClassDeclaration.isEnum","location":"ast/ktast.ast/-node/-declaration/-class-declaration/is-enum.html","searchKeys":["isEnum","val isEnum: Boolean","ktast.ast.Node.Declaration.ClassDeclaration.isEnum"]},{"name":"val isInterface: Boolean","description":"ktast.ast.Node.Declaration.ClassDeclaration.isInterface","location":"ast/ktast.ast/-node/-declaration/-class-declaration/is-interface.html","searchKeys":["isInterface","val isInterface: Boolean","ktast.ast.Node.Declaration.ClassDeclaration.isInterface"]},{"name":"val isObject: Boolean","description":"ktast.ast.Node.Declaration.ClassDeclaration.isObject","location":"ast/ktast.ast/-node/-declaration/-class-declaration/is-object.html","searchKeys":["isObject","val isObject: Boolean","ktast.ast.Node.Declaration.ClassDeclaration.isObject"]},{"name":"val lBrace: Node.Keyword.LBrace","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.lBrace","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/l-brace.html","searchKeys":["lBrace","val lBrace: Node.Keyword.LBrace","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.lBrace"]},{"name":"val lBrace: Node.Keyword.LBrace","description":"ktast.ast.Node.Expression.BlockExpression.lBrace","location":"ast/ktast.ast/-node/-expression/-block-expression/l-brace.html","searchKeys":["lBrace","val lBrace: Node.Keyword.LBrace","ktast.ast.Node.Expression.BlockExpression.lBrace"]},{"name":"val lBrace: Node.Keyword.LBrace","description":"ktast.ast.Node.Expression.LambdaExpression.lBrace","location":"ast/ktast.ast/-node/-expression/-lambda-expression/l-brace.html","searchKeys":["lBrace","val lBrace: Node.Keyword.LBrace","ktast.ast.Node.Expression.LambdaExpression.lBrace"]},{"name":"val lBracket: Node.Keyword.LBracket","description":"ktast.ast.Node.PostModifier.Contract.lBracket","location":"ast/ktast.ast/-node/-post-modifier/-contract/l-bracket.html","searchKeys":["lBracket","val lBracket: Node.Keyword.LBracket","ktast.ast.Node.PostModifier.Contract.lBracket"]},{"name":"val lBracket: Node.Keyword.LBracket?","description":"ktast.ast.Node.Modifier.AnnotationSet.lBracket","location":"ast/ktast.ast/-node/-modifier/-annotation-set/l-bracket.html","searchKeys":["lBracket","val lBracket: Node.Keyword.LBracket?","ktast.ast.Node.Modifier.AnnotationSet.lBracket"]},{"name":"val lPar: Node.Keyword.LPar","description":"ktast.ast.Node.ContextReceiver.lPar","location":"ast/ktast.ast/-node/-context-receiver/l-par.html","searchKeys":["lPar","val lPar: Node.Keyword.LPar","ktast.ast.Node.ContextReceiver.lPar"]},{"name":"val lPar: Node.Keyword.LPar","description":"ktast.ast.Node.Expression.IfExpression.lPar","location":"ast/ktast.ast/-node/-expression/-if-expression/l-par.html","searchKeys":["lPar","val lPar: Node.Keyword.LPar","ktast.ast.Node.Expression.IfExpression.lPar"]},{"name":"val lPar: Node.Keyword.LPar","description":"ktast.ast.Node.Statement.ForStatement.lPar","location":"ast/ktast.ast/-node/-statement/-for-statement/l-par.html","searchKeys":["lPar","val lPar: Node.Keyword.LPar","ktast.ast.Node.Statement.ForStatement.lPar"]},{"name":"val lPar: Node.Keyword.LPar","description":"ktast.ast.Node.Type.ParenthesizedType.lPar","location":"ast/ktast.ast/-node/-type/-parenthesized-type/l-par.html","searchKeys":["lPar","val lPar: Node.Keyword.LPar","ktast.ast.Node.Type.ParenthesizedType.lPar"]},{"name":"val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.lPar","location":"ast/ktast.ast/-node/-declaration/-property-declaration/l-par.html","searchKeys":["lPar","val lPar: Node.Keyword.LPar?","ktast.ast.Node.Declaration.PropertyDeclaration.lPar"]},{"name":"val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.Expression.WhenExpression.lPar","location":"ast/ktast.ast/-node/-expression/-when-expression/l-par.html","searchKeys":["lPar","val lPar: Node.Keyword.LPar?","ktast.ast.Node.Expression.WhenExpression.lPar"]},{"name":"val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.LambdaParam.lPar","location":"ast/ktast.ast/-node/-lambda-param/l-par.html","searchKeys":["lPar","val lPar: Node.Keyword.LPar?","ktast.ast.Node.LambdaParam.lPar"]},{"name":"val lPar: Node.Keyword.LPar?","description":"ktast.ast.Node.Type.FunctionType.lPar","location":"ast/ktast.ast/-node/-type/-function-type/l-par.html","searchKeys":["lPar","val lPar: Node.Keyword.LPar?","ktast.ast.Node.Type.FunctionType.lPar"]},{"name":"val label: Node.Expression.NameExpression","description":"ktast.ast.Node.Expression.LabeledExpression.label","location":"ast/ktast.ast/-node/-expression/-labeled-expression/label.html","searchKeys":["label","val label: Node.Expression.NameExpression","ktast.ast.Node.Expression.LabeledExpression.label"]},{"name":"val lambdaArg: Node.Expression.CallExpression.LambdaArg?","description":"ktast.ast.Node.Expression.CallExpression.lambdaArg","location":"ast/ktast.ast/-node/-expression/-call-expression/lambda-arg.html","searchKeys":["lambdaArg","val lambdaArg: Node.Expression.CallExpression.LambdaArg?","ktast.ast.Node.Expression.CallExpression.lambdaArg"]},{"name":"val lambdaBody: Node.Expression.LambdaExpression.LambdaBody?","description":"ktast.ast.Node.Expression.LambdaExpression.lambdaBody","location":"ast/ktast.ast/-node/-expression/-lambda-expression/lambda-body.html","searchKeys":["lambdaBody","val lambdaBody: Node.Expression.LambdaExpression.LambdaBody?","ktast.ast.Node.Expression.LambdaExpression.lambdaBody"]},{"name":"val lhs: Node.Expression","description":"ktast.ast.Node.Expression.BinaryExpression.lhs","location":"ast/ktast.ast/-node/-expression/-binary-expression/lhs.html","searchKeys":["lhs","val lhs: Node.Expression","ktast.ast.Node.Expression.BinaryExpression.lhs"]},{"name":"val lhs: Node.Expression","description":"ktast.ast.Node.Expression.BinaryTypeExpression.lhs","location":"ast/ktast.ast/-node/-expression/-binary-type-expression/lhs.html","searchKeys":["lhs","val lhs: Node.Expression","ktast.ast.Node.Expression.BinaryTypeExpression.lhs"]},{"name":"val loopParam: Node.LambdaParam","description":"ktast.ast.Node.Statement.ForStatement.loopParam","location":"ast/ktast.ast/-node/-statement/-for-statement/loop-param.html","searchKeys":["loopParam","val loopParam: Node.LambdaParam","ktast.ast.Node.Statement.ForStatement.loopParam"]},{"name":"val loopRange: Node.Expression","description":"ktast.ast.Node.Statement.ForStatement.loopRange","location":"ast/ktast.ast/-node/-statement/-for-statement/loop-range.html","searchKeys":["loopRange","val loopRange: Node.Expression","ktast.ast.Node.Statement.ForStatement.loopRange"]},{"name":"val name: Node.Expression.NameExpression","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.name","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/-enum-entry/name.html","searchKeys":["name","val name: Node.Expression.NameExpression","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.EnumEntry.name"]},{"name":"val name: Node.Expression.NameExpression","description":"ktast.ast.Node.Declaration.TypeAliasDeclaration.name","location":"ast/ktast.ast/-node/-declaration/-type-alias-declaration/name.html","searchKeys":["name","val name: Node.Expression.NameExpression","ktast.ast.Node.Declaration.TypeAliasDeclaration.name"]},{"name":"val name: Node.Expression.NameExpression","description":"ktast.ast.Node.FunctionParam.name","location":"ast/ktast.ast/-node/-function-param/name.html","searchKeys":["name","val name: Node.Expression.NameExpression","ktast.ast.Node.FunctionParam.name"]},{"name":"val name: Node.Expression.NameExpression","description":"ktast.ast.Node.ImportDirective.ImportAlias.name","location":"ast/ktast.ast/-node/-import-directive/-import-alias/name.html","searchKeys":["name","val name: Node.Expression.NameExpression","ktast.ast.Node.ImportDirective.ImportAlias.name"]},{"name":"val name: Node.Expression.NameExpression","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraint.name","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/-type-constraint/name.html","searchKeys":["name","val name: Node.Expression.NameExpression","ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraint.name"]},{"name":"val name: Node.Expression.NameExpression","description":"ktast.ast.Node.TypeParam.name","location":"ast/ktast.ast/-node/-type-param/name.html","searchKeys":["name","val name: Node.Expression.NameExpression","ktast.ast.Node.TypeParam.name"]},{"name":"val name: Node.Expression.NameExpression","description":"ktast.ast.Node.Variable.name","location":"ast/ktast.ast/-node/-variable/name.html","searchKeys":["name","val name: Node.Expression.NameExpression","ktast.ast.Node.Variable.name"]},{"name":"val name: Node.Expression.NameExpression?","description":"ktast.ast.Node.Declaration.ClassDeclaration.name","location":"ast/ktast.ast/-node/-declaration/-class-declaration/name.html","searchKeys":["name","val name: Node.Expression.NameExpression?","ktast.ast.Node.Declaration.ClassDeclaration.name"]},{"name":"val name: Node.Expression.NameExpression?","description":"ktast.ast.Node.Declaration.FunctionDeclaration.name","location":"ast/ktast.ast/-node/-declaration/-function-declaration/name.html","searchKeys":["name","val name: Node.Expression.NameExpression?","ktast.ast.Node.Declaration.FunctionDeclaration.name"]},{"name":"val name: Node.Expression.NameExpression?","description":"ktast.ast.Node.Type.FunctionType.FunctionTypeParam.name","location":"ast/ktast.ast/-node/-type/-function-type/-function-type-param/name.html","searchKeys":["name","val name: Node.Expression.NameExpression?","ktast.ast.Node.Type.FunctionType.FunctionTypeParam.name"]},{"name":"val name: Node.Expression.NameExpression?","description":"ktast.ast.Node.ValueArg.name","location":"ast/ktast.ast/-node/-value-arg/name.html","searchKeys":["name","val name: Node.Expression.NameExpression?","ktast.ast.Node.ValueArg.name"]},{"name":"val names: List<Node.Expression.NameExpression>","description":"ktast.ast.Node.ImportDirective.names","location":"ast/ktast.ast/-node/-import-directive/names.html","searchKeys":["names","val names: List<Node.Expression.NameExpression>","ktast.ast.Node.ImportDirective.names"]},{"name":"val names: List<Node.Expression.NameExpression>","description":"ktast.ast.Node.PackageDirective.names","location":"ast/ktast.ast/-node/-package-directive/names.html","searchKeys":["names","val names: List<Node.Expression.NameExpression>","ktast.ast.Node.PackageDirective.names"]},{"name":"val operator: Node.Expression.BinaryExpression.BinaryOperator","description":"ktast.ast.Node.Expression.BinaryExpression.operator","location":"ast/ktast.ast/-node/-expression/-binary-expression/operator.html","searchKeys":["operator","val operator: Node.Expression.BinaryExpression.BinaryOperator","ktast.ast.Node.Expression.BinaryExpression.operator"]},{"name":"val operator: Node.Expression.BinaryTypeExpression.BinaryTypeOperator","description":"ktast.ast.Node.Expression.BinaryTypeExpression.operator","location":"ast/ktast.ast/-node/-expression/-binary-type-expression/operator.html","searchKeys":["operator","val operator: Node.Expression.BinaryTypeExpression.BinaryTypeOperator","ktast.ast.Node.Expression.BinaryTypeExpression.operator"]},{"name":"val packageKeyword: Node.Keyword.Package","description":"ktast.ast.Node.PackageDirective.packageKeyword","location":"ast/ktast.ast/-node/-package-directive/package-keyword.html","searchKeys":["packageKeyword","val packageKeyword: Node.Keyword.Package","ktast.ast.Node.PackageDirective.packageKeyword"]},{"name":"val params: Node.LambdaParams?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Setter.params","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-setter/params.html","searchKeys":["params","val params: Node.LambdaParams?","ktast.ast.Node.Declaration.PropertyDeclaration.Setter.params"]},{"name":"val params: Node.LambdaParams?","description":"ktast.ast.Node.Expression.LambdaExpression.params","location":"ast/ktast.ast/-node/-expression/-lambda-expression/params.html","searchKeys":["params","val params: Node.LambdaParams?","ktast.ast.Node.Expression.LambdaExpression.params"]},{"name":"val params: Node.Type.FunctionType.FunctionTypeParams?","description":"ktast.ast.Node.Type.FunctionType.params","location":"ast/ktast.ast/-node/-type/-function-type/params.html","searchKeys":["params","val params: Node.Type.FunctionType.FunctionTypeParams?","ktast.ast.Node.Type.FunctionType.params"]},{"name":"val primaryConstructor: Node.Declaration.ClassDeclaration.PrimaryConstructor?","description":"ktast.ast.Node.Declaration.ClassDeclaration.primaryConstructor","location":"ast/ktast.ast/-node/-declaration/-class-declaration/primary-constructor.html","searchKeys":["primaryConstructor","val primaryConstructor: Node.Declaration.ClassDeclaration.PrimaryConstructor?","ktast.ast.Node.Declaration.ClassDeclaration.primaryConstructor"]},{"name":"val property: Node.Declaration.PropertyDeclaration","description":"ktast.ast.Node.Expression.PropertyExpression.property","location":"ast/ktast.ast/-node/-expression/-property-expression/property.html","searchKeys":["property","val property: Node.Declaration.PropertyDeclaration","ktast.ast.Node.Expression.PropertyExpression.property"]},{"name":"val propertyDelegate: Node.Declaration.PropertyDeclaration.PropertyDelegate?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.propertyDelegate","location":"ast/ktast.ast/-node/-declaration/-property-declaration/property-delegate.html","searchKeys":["propertyDelegate","val propertyDelegate: Node.Declaration.PropertyDeclaration.PropertyDelegate?","ktast.ast.Node.Declaration.PropertyDeclaration.propertyDelegate"]},{"name":"val qualifiers: List<Node.Type.SimpleType.SimpleTypeQualifier>","description":"ktast.ast.Node.Type.SimpleType.qualifiers","location":"ast/ktast.ast/-node/-type/-simple-type/qualifiers.html","searchKeys":["qualifiers","val qualifiers: List<Node.Type.SimpleType.SimpleTypeQualifier>","ktast.ast.Node.Type.SimpleType.qualifiers"]},{"name":"val questionMark: Node.Keyword.Question","description":"ktast.ast.Node.Type.NullableType.questionMark","location":"ast/ktast.ast/-node/-type/-nullable-type/question-mark.html","searchKeys":["questionMark","val questionMark: Node.Keyword.Question","ktast.ast.Node.Type.NullableType.questionMark"]},{"name":"val rBrace: Node.Keyword.RBrace","description":"ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.rBrace","location":"ast/ktast.ast/-node/-declaration/-class-declaration/-class-body/r-brace.html","searchKeys":["rBrace","val rBrace: Node.Keyword.RBrace","ktast.ast.Node.Declaration.ClassDeclaration.ClassBody.rBrace"]},{"name":"val rBrace: Node.Keyword.RBrace","description":"ktast.ast.Node.Expression.BlockExpression.rBrace","location":"ast/ktast.ast/-node/-expression/-block-expression/r-brace.html","searchKeys":["rBrace","val rBrace: Node.Keyword.RBrace","ktast.ast.Node.Expression.BlockExpression.rBrace"]},{"name":"val rBrace: Node.Keyword.RBrace","description":"ktast.ast.Node.Expression.LambdaExpression.rBrace","location":"ast/ktast.ast/-node/-expression/-lambda-expression/r-brace.html","searchKeys":["rBrace","val rBrace: Node.Keyword.RBrace","ktast.ast.Node.Expression.LambdaExpression.rBrace"]},{"name":"val rBracket: Node.Keyword.RBracket","description":"ktast.ast.Node.PostModifier.Contract.rBracket","location":"ast/ktast.ast/-node/-post-modifier/-contract/r-bracket.html","searchKeys":["rBracket","val rBracket: Node.Keyword.RBracket","ktast.ast.Node.PostModifier.Contract.rBracket"]},{"name":"val rBracket: Node.Keyword.RBracket?","description":"ktast.ast.Node.Modifier.AnnotationSet.rBracket","location":"ast/ktast.ast/-node/-modifier/-annotation-set/r-bracket.html","searchKeys":["rBracket","val rBracket: Node.Keyword.RBracket?","ktast.ast.Node.Modifier.AnnotationSet.rBracket"]},{"name":"val rPar: Node.Keyword.RPar","description":"ktast.ast.Node.ContextReceiver.rPar","location":"ast/ktast.ast/-node/-context-receiver/r-par.html","searchKeys":["rPar","val rPar: Node.Keyword.RPar","ktast.ast.Node.ContextReceiver.rPar"]},{"name":"val rPar: Node.Keyword.RPar","description":"ktast.ast.Node.Expression.IfExpression.rPar","location":"ast/ktast.ast/-node/-expression/-if-expression/r-par.html","searchKeys":["rPar","val rPar: Node.Keyword.RPar","ktast.ast.Node.Expression.IfExpression.rPar"]},{"name":"val rPar: Node.Keyword.RPar","description":"ktast.ast.Node.Statement.ForStatement.rPar","location":"ast/ktast.ast/-node/-statement/-for-statement/r-par.html","searchKeys":["rPar","val rPar: Node.Keyword.RPar","ktast.ast.Node.Statement.ForStatement.rPar"]},{"name":"val rPar: Node.Keyword.RPar","description":"ktast.ast.Node.Type.ParenthesizedType.rPar","location":"ast/ktast.ast/-node/-type/-parenthesized-type/r-par.html","searchKeys":["rPar","val rPar: Node.Keyword.RPar","ktast.ast.Node.Type.ParenthesizedType.rPar"]},{"name":"val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.rPar","location":"ast/ktast.ast/-node/-declaration/-property-declaration/r-par.html","searchKeys":["rPar","val rPar: Node.Keyword.RPar?","ktast.ast.Node.Declaration.PropertyDeclaration.rPar"]},{"name":"val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.Expression.WhenExpression.rPar","location":"ast/ktast.ast/-node/-expression/-when-expression/r-par.html","searchKeys":["rPar","val rPar: Node.Keyword.RPar?","ktast.ast.Node.Expression.WhenExpression.rPar"]},{"name":"val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.LambdaParam.rPar","location":"ast/ktast.ast/-node/-lambda-param/r-par.html","searchKeys":["rPar","val rPar: Node.Keyword.RPar?","ktast.ast.Node.LambdaParam.rPar"]},{"name":"val rPar: Node.Keyword.RPar?","description":"ktast.ast.Node.Type.FunctionType.rPar","location":"ast/ktast.ast/-node/-type/-function-type/r-par.html","searchKeys":["rPar","val rPar: Node.Keyword.RPar?","ktast.ast.Node.Type.FunctionType.rPar"]},{"name":"val raw: Boolean","description":"ktast.ast.Node.Expression.StringLiteralExpression.raw","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/raw.html","searchKeys":["raw","val raw: Boolean","ktast.ast.Node.Expression.StringLiteralExpression.raw"]},{"name":"val receiverType: Node.Type?","description":"ktast.ast.Node.Declaration.FunctionDeclaration.receiverType","location":"ast/ktast.ast/-node/-declaration/-function-declaration/receiver-type.html","searchKeys":["receiverType","val receiverType: Node.Type?","ktast.ast.Node.Declaration.FunctionDeclaration.receiverType"]},{"name":"val receiverType: Node.Type?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.receiverType","location":"ast/ktast.ast/-node/-declaration/-property-declaration/receiver-type.html","searchKeys":["receiverType","val receiverType: Node.Type?","ktast.ast.Node.Declaration.PropertyDeclaration.receiverType"]},{"name":"val receiverType: Node.Type?","description":"ktast.ast.Node.Type.FunctionType.receiverType","location":"ast/ktast.ast/-node/-type/-function-type/receiver-type.html","searchKeys":["receiverType","val receiverType: Node.Type?","ktast.ast.Node.Type.FunctionType.receiverType"]},{"name":"val receiverTypes: Node.ContextReceiverTypes","description":"ktast.ast.Node.ContextReceiver.receiverTypes","location":"ast/ktast.ast/-node/-context-receiver/receiver-types.html","searchKeys":["receiverTypes","val receiverTypes: Node.ContextReceiverTypes","ktast.ast.Node.ContextReceiver.receiverTypes"]},{"name":"val returnType: Node.Type","description":"ktast.ast.Node.Type.FunctionType.returnType","location":"ast/ktast.ast/-node/-type/-function-type/return-type.html","searchKeys":["returnType","val returnType: Node.Type","ktast.ast.Node.Type.FunctionType.returnType"]},{"name":"val returnType: Node.Type?","description":"ktast.ast.Node.Declaration.FunctionDeclaration.returnType","location":"ast/ktast.ast/-node/-declaration/-function-declaration/return-type.html","searchKeys":["returnType","val returnType: Node.Type?","ktast.ast.Node.Declaration.FunctionDeclaration.returnType"]},{"name":"val rhs: Node.Expression","description":"ktast.ast.Node.Expression.BinaryExpression.rhs","location":"ast/ktast.ast/-node/-expression/-binary-expression/rhs.html","searchKeys":["rhs","val rhs: Node.Expression","ktast.ast.Node.Expression.BinaryExpression.rhs"]},{"name":"val rhs: Node.Expression.NameExpression","description":"ktast.ast.Node.Expression.CallableReferenceExpression.rhs","location":"ast/ktast.ast/-node/-expression/-callable-reference-expression/rhs.html","searchKeys":["rhs","val rhs: Node.Expression.NameExpression","ktast.ast.Node.Expression.CallableReferenceExpression.rhs"]},{"name":"val rhs: Node.Type","description":"ktast.ast.Node.Expression.BinaryTypeExpression.rhs","location":"ast/ktast.ast/-node/-expression/-binary-type-expression/rhs.html","searchKeys":["rhs","val rhs: Node.Type","ktast.ast.Node.Expression.BinaryTypeExpression.rhs"]},{"name":"val setKeyword: Node.Keyword.Set","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Setter.setKeyword","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-setter/set-keyword.html","searchKeys":["setKeyword","val setKeyword: Node.Keyword.Set","ktast.ast.Node.Declaration.PropertyDeclaration.Setter.setKeyword"]},{"name":"val short: Boolean","description":"ktast.ast.Node.Expression.StringLiteralExpression.TemplateStringEntry.short","location":"ast/ktast.ast/-node/-expression/-string-literal-expression/-template-string-entry/short.html","searchKeys":["short","val short: Boolean","ktast.ast.Node.Expression.StringLiteralExpression.TemplateStringEntry.short"]},{"name":"val statement: Node.Statement","description":"ktast.ast.Node.Expression.AnnotatedExpression.statement","location":"ast/ktast.ast/-node/-expression/-annotated-expression/statement.html","searchKeys":["statement","val statement: Node.Statement","ktast.ast.Node.Expression.AnnotatedExpression.statement"]},{"name":"val statement: Node.Statement","description":"ktast.ast.Node.Expression.LabeledExpression.statement","location":"ast/ktast.ast/-node/-expression/-labeled-expression/statement.html","searchKeys":["statement","val statement: Node.Statement","ktast.ast.Node.Expression.LabeledExpression.statement"]},{"name":"val target: Node.Modifier.AnnotationSet.AnnotationTarget?","description":"ktast.ast.Node.Modifier.AnnotationSet.target","location":"ast/ktast.ast/-node/-modifier/-annotation-set/target.html","searchKeys":["target","val target: Node.Modifier.AnnotationSet.AnnotationTarget?","ktast.ast.Node.Modifier.AnnotationSet.target"]},{"name":"val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.trailingComma","location":"ast/ktast.ast/-node/-declaration/-property-declaration/trailing-comma.html","searchKeys":["trailingComma","val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.Declaration.PropertyDeclaration.trailingComma"]},{"name":"val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.Expression.CollectionLiteralExpression.trailingComma","location":"ast/ktast.ast/-node/-expression/-collection-literal-expression/trailing-comma.html","searchKeys":["trailingComma","val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.Expression.CollectionLiteralExpression.trailingComma"]},{"name":"val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.Expression.IndexedAccessExpression.trailingComma","location":"ast/ktast.ast/-node/-expression/-indexed-access-expression/trailing-comma.html","searchKeys":["trailingComma","val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.Expression.IndexedAccessExpression.trailingComma"]},{"name":"val trailingComma: Node.Keyword.Comma?","description":"ktast.ast.Node.LambdaParam.trailingComma","location":"ast/ktast.ast/-node/-lambda-param/trailing-comma.html","searchKeys":["trailingComma","val trailingComma: Node.Keyword.Comma?","ktast.ast.Node.LambdaParam.trailingComma"]},{"name":"val type: Node.Type","description":"ktast.ast.Node.Declaration.TypeAliasDeclaration.type","location":"ast/ktast.ast/-node/-declaration/-type-alias-declaration/type.html","searchKeys":["type","val type: Node.Type","ktast.ast.Node.Declaration.TypeAliasDeclaration.type"]},{"name":"val type: Node.Type","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraint.type","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/-type-constraint/type.html","searchKeys":["type","val type: Node.Type","ktast.ast.Node.PostModifier.TypeConstraintSet.TypeConstraint.type"]},{"name":"val type: Node.Type","description":"ktast.ast.Node.Type.FunctionType.FunctionTypeParam.type","location":"ast/ktast.ast/-node/-type/-function-type/-function-type-param/type.html","searchKeys":["type","val type: Node.Type","ktast.ast.Node.Type.FunctionType.FunctionTypeParam.type"]},{"name":"val type: Node.Type","description":"ktast.ast.Node.Type.NullableType.type","location":"ast/ktast.ast/-node/-type/-nullable-type/type.html","searchKeys":["type","val type: Node.Type","ktast.ast.Node.Type.NullableType.type"]},{"name":"val type: Node.Type","description":"ktast.ast.Node.Type.ParenthesizedType.type","location":"ast/ktast.ast/-node/-type/-parenthesized-type/type.html","searchKeys":["type","val type: Node.Type","ktast.ast.Node.Type.ParenthesizedType.type"]},{"name":"val type: Node.Type.SimpleType","description":"ktast.ast.Node.Modifier.AnnotationSet.Annotation.type","location":"ast/ktast.ast/-node/-modifier/-annotation-set/-annotation/type.html","searchKeys":["type","val type: Node.Type.SimpleType","ktast.ast.Node.Modifier.AnnotationSet.Annotation.type"]},{"name":"val type: Node.Type?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.Getter.type","location":"ast/ktast.ast/-node/-declaration/-property-declaration/-getter/type.html","searchKeys":["type","val type: Node.Type?","ktast.ast.Node.Declaration.PropertyDeclaration.Getter.type"]},{"name":"val type: Node.Type?","description":"ktast.ast.Node.FunctionParam.type","location":"ast/ktast.ast/-node/-function-param/type.html","searchKeys":["type","val type: Node.Type?","ktast.ast.Node.FunctionParam.type"]},{"name":"val type: Node.Type?","description":"ktast.ast.Node.TypeParam.type","location":"ast/ktast.ast/-node/-type-param/type.html","searchKeys":["type","val type: Node.Type?","ktast.ast.Node.TypeParam.type"]},{"name":"val type: Node.Type?","description":"ktast.ast.Node.Variable.type","location":"ast/ktast.ast/-node/-variable/type.html","searchKeys":["type","val type: Node.Type?","ktast.ast.Node.Variable.type"]},{"name":"val typeArgType: Node.Type?","description":"ktast.ast.Node.Expression.SuperExpression.typeArgType","location":"ast/ktast.ast/-node/-expression/-super-expression/type-arg-type.html","searchKeys":["typeArgType","val typeArgType: Node.Type?","ktast.ast.Node.Expression.SuperExpression.typeArgType"]},{"name":"val typeConstraintSet: Node.PostModifier.TypeConstraintSet?","description":"ktast.ast.Node.Declaration.ClassDeclaration.typeConstraintSet","location":"ast/ktast.ast/-node/-declaration/-class-declaration/type-constraint-set.html","searchKeys":["typeConstraintSet","val typeConstraintSet: Node.PostModifier.TypeConstraintSet?","ktast.ast.Node.Declaration.ClassDeclaration.typeConstraintSet"]},{"name":"val typeConstraintSet: Node.PostModifier.TypeConstraintSet?","description":"ktast.ast.Node.Declaration.PropertyDeclaration.typeConstraintSet","location":"ast/ktast.ast/-node/-declaration/-property-declaration/type-constraint-set.html","searchKeys":["typeConstraintSet","val typeConstraintSet: Node.PostModifier.TypeConstraintSet?","ktast.ast.Node.Declaration.PropertyDeclaration.typeConstraintSet"]},{"name":"val valOrVarKeyword: Node.Keyword.ValOrVarKeyword","description":"ktast.ast.Node.Declaration.PropertyDeclaration.valOrVarKeyword","location":"ast/ktast.ast/-node/-declaration/-property-declaration/val-or-var-keyword.html","searchKeys":["valOrVarKeyword","val valOrVarKeyword: Node.Keyword.ValOrVarKeyword","ktast.ast.Node.Declaration.PropertyDeclaration.valOrVarKeyword"]},{"name":"val valOrVarKeyword: Node.Keyword.ValOrVarKeyword?","description":"ktast.ast.Node.FunctionParam.valOrVarKeyword","location":"ast/ktast.ast/-node/-function-param/val-or-var-keyword.html","searchKeys":["valOrVarKeyword","val valOrVarKeyword: Node.Keyword.ValOrVarKeyword?","ktast.ast.Node.FunctionParam.valOrVarKeyword"]},{"name":"val variables: List<Node.Variable>","description":"ktast.ast.Node.Declaration.PropertyDeclaration.variables","location":"ast/ktast.ast/-node/-declaration/-property-declaration/variables.html","searchKeys":["variables","val variables: List<Node.Variable>","ktast.ast.Node.Declaration.PropertyDeclaration.variables"]},{"name":"val variables: List<Node.Variable>","description":"ktast.ast.Node.LambdaParam.variables","location":"ast/ktast.ast/-node/-lambda-param/variables.html","searchKeys":["variables","val variables: List<Node.Variable>","ktast.ast.Node.LambdaParam.variables"]},{"name":"val whenBranches: List<Node.Expression.WhenExpression.WhenBranch>","description":"ktast.ast.Node.Expression.WhenExpression.whenBranches","location":"ast/ktast.ast/-node/-expression/-when-expression/when-branches.html","searchKeys":["whenBranches","val whenBranches: List<Node.Expression.WhenExpression.WhenBranch>","ktast.ast.Node.Expression.WhenExpression.whenBranches"]},{"name":"val whenKeyword: Node.Keyword.When","description":"ktast.ast.Node.Expression.WhenExpression.whenKeyword","location":"ast/ktast.ast/-node/-expression/-when-expression/when-keyword.html","searchKeys":["whenKeyword","val whenKeyword: Node.Keyword.When","ktast.ast.Node.Expression.WhenExpression.whenKeyword"]},{"name":"val whereKeyword: Node.Keyword.Where","description":"ktast.ast.Node.PostModifier.TypeConstraintSet.whereKeyword","location":"ast/ktast.ast/-node/-post-modifier/-type-constraint-set/where-keyword.html","searchKeys":["whereKeyword","val whereKeyword: Node.Keyword.Where","ktast.ast.Node.PostModifier.TypeConstraintSet.whereKeyword"]},{"name":"var changed: Boolean","description":"ktast.ast.MutableVisitor.ChangedRef.changed","location":"ast/ktast.ast/-mutable-visitor/-changed-ref/changed.html","searchKeys":["changed","var changed: Boolean","ktast.ast.MutableVisitor.ChangedRef.changed"]},{"name":"class ConverterWithMutableExtras : ConverterWithExtras, MutableExtrasMap","description":"ktast.ast.psi.ConverterWithMutableExtras","location":"ast-psi/ktast.ast.psi/-converter-with-mutable-extras/index.html","searchKeys":["ConverterWithMutableExtras","class ConverterWithMutableExtras : ConverterWithExtras, MutableExtrasMap","ktast.ast.psi.ConverterWithMutableExtras"]},{"name":"class Unsupported(message: String) : UnsupportedOperationException","description":"ktast.ast.psi.Converter.Unsupported","location":"ast-psi/ktast.ast.psi/-converter/-unsupported/index.html","searchKeys":["Unsupported","class Unsupported(message: String) : UnsupportedOperationException","ktast.ast.psi.Converter.Unsupported"]},{"name":"constructor()","description":"ktast.ast.psi.Converter.Converter","location":"ast-psi/ktast.ast.psi/-converter/-converter.html","searchKeys":["Converter","constructor()","ktast.ast.psi.Converter.Converter"]},{"name":"constructor()","description":"ktast.ast.psi.ConverterWithExtras.ConverterWithExtras","location":"ast-psi/ktast.ast.psi/-converter-with-extras/-converter-with-extras.html","searchKeys":["ConverterWithExtras","constructor()","ktast.ast.psi.ConverterWithExtras.ConverterWithExtras"]},{"name":"constructor()","description":"ktast.ast.psi.ConverterWithMutableExtras.ConverterWithMutableExtras","location":"ast-psi/ktast.ast.psi/-converter-with-mutable-extras/-converter-with-mutable-extras.html","searchKeys":["ConverterWithMutableExtras","constructor()","ktast.ast.psi.ConverterWithMutableExtras.ConverterWithMutableExtras"]},{"name":"constructor(converter: Converter = Converter)","description":"ktast.ast.psi.Parser.Parser","location":"ast-psi/ktast.ast.psi/-parser/-parser.html","searchKeys":["Parser","constructor(converter: Converter = Converter)","ktast.ast.psi.Parser.Parser"]},{"name":"constructor(file: KtFile, errors: List<PsiErrorElement>)","description":"ktast.ast.psi.Parser.ParseError.ParseError","location":"ast-psi/ktast.ast.psi/-parser/-parse-error/-parse-error.html","searchKeys":["ParseError","constructor(file: KtFile, errors: List<PsiErrorElement>)","ktast.ast.psi.Parser.ParseError.ParseError"]},{"name":"constructor(message: String)","description":"ktast.ast.psi.Converter.Unsupported.Unsupported","location":"ast-psi/ktast.ast.psi/-converter/-unsupported/-unsupported.html","searchKeys":["Unsupported","constructor(message: String)","ktast.ast.psi.Converter.Unsupported.Unsupported"]},{"name":"data class ParseError(val file: KtFile, val errors: List<PsiErrorElement>) : IllegalArgumentException","description":"ktast.ast.psi.Parser.ParseError","location":"ast-psi/ktast.ast.psi/-parser/-parse-error/index.html","searchKeys":["ParseError","data class ParseError(val file: KtFile, val errors: List<PsiErrorElement>) : IllegalArgumentException","ktast.ast.psi.Parser.ParseError"]},{"name":"fun parseFile(code: String, throwOnError: Boolean = true): Node.KotlinFile","description":"ktast.ast.psi.Parser.parseFile","location":"ast-psi/ktast.ast.psi/-parser/parse-file.html","searchKeys":["parseFile","fun parseFile(code: String, throwOnError: Boolean = true): Node.KotlinFile","ktast.ast.psi.Parser.parseFile"]},{"name":"fun parsePsiFile(code: String): KtFile","description":"ktast.ast.psi.Parser.parsePsiFile","location":"ast-psi/ktast.ast.psi/-parser/parse-psi-file.html","searchKeys":["parsePsiFile","fun parsePsiFile(code: String): KtFile","ktast.ast.psi.Parser.parsePsiFile"]},{"name":"object Companion : Converter","description":"ktast.ast.psi.Converter.Companion","location":"ast-psi/ktast.ast.psi/-converter/-companion/index.html","searchKeys":["Companion","object Companion : Converter","ktast.ast.psi.Converter.Companion"]},{"name":"object Companion : Parser","description":"ktast.ast.psi.Parser.Companion","location":"ast-psi/ktast.ast.psi/-parser/-companion/index.html","searchKeys":["Companion","object Companion : Parser","ktast.ast.psi.Parser.Companion"]},{"name":"open class Converter","description":"ktast.ast.psi.Converter","location":"ast-psi/ktast.ast.psi/-converter/index.html","searchKeys":["Converter","open class Converter","ktast.ast.psi.Converter"]},{"name":"open class ConverterWithExtras : Converter, ExtrasMap","description":"ktast.ast.psi.ConverterWithExtras","location":"ast-psi/ktast.ast.psi/-converter-with-extras/index.html","searchKeys":["ConverterWithExtras","open class ConverterWithExtras : Converter, ExtrasMap","ktast.ast.psi.ConverterWithExtras"]},{"name":"open class Parser(val converter: Converter = Converter)","description":"ktast.ast.psi.Parser","location":"ast-psi/ktast.ast.psi/-parser/index.html","searchKeys":["Parser","open class Parser(val converter: Converter = Converter)","ktast.ast.psi.Parser"]},{"name":"open fun convertAnnotated(v: KtAnnotatedExpression): Node.Expression.AnnotatedExpression","description":"ktast.ast.psi.Converter.convertAnnotated","location":"ast-psi/ktast.ast.psi/-converter/convert-annotated.html","searchKeys":["convertAnnotated","open fun convertAnnotated(v: KtAnnotatedExpression): Node.Expression.AnnotatedExpression","ktast.ast.psi.Converter.convertAnnotated"]},{"name":"open fun convertAnnotationSet(v: KtAnnotation): Node.Modifier.AnnotationSet","description":"ktast.ast.psi.Converter.convertAnnotationSet","location":"ast-psi/ktast.ast.psi/-converter/convert-annotation-set.html","searchKeys":["convertAnnotationSet","open fun convertAnnotationSet(v: KtAnnotation): Node.Modifier.AnnotationSet","ktast.ast.psi.Converter.convertAnnotationSet"]},{"name":"open fun convertAnnotationSet(v: KtAnnotationEntry): Node.Modifier.AnnotationSet","description":"ktast.ast.psi.Converter.convertAnnotationSet","location":"ast-psi/ktast.ast.psi/-converter/convert-annotation-set.html","searchKeys":["convertAnnotationSet","open fun convertAnnotationSet(v: KtAnnotationEntry): Node.Modifier.AnnotationSet","ktast.ast.psi.Converter.convertAnnotationSet"]},{"name":"open fun convertAnnotationSets(v: KtElement): List<Node.Modifier.AnnotationSet>","description":"ktast.ast.psi.Converter.convertAnnotationSets","location":"ast-psi/ktast.ast.psi/-converter/convert-annotation-sets.html","searchKeys":["convertAnnotationSets","open fun convertAnnotationSets(v: KtElement): List<Node.Modifier.AnnotationSet>","ktast.ast.psi.Converter.convertAnnotationSets"]},{"name":"open fun convertAnnotationWithoutMapping(v: KtAnnotationEntry): Node.Modifier.AnnotationSet.Annotation","description":"ktast.ast.psi.Converter.convertAnnotationWithoutMapping","location":"ast-psi/ktast.ast.psi/-converter/convert-annotation-without-mapping.html","searchKeys":["convertAnnotationWithoutMapping","open fun convertAnnotationWithoutMapping(v: KtAnnotationEntry): Node.Modifier.AnnotationSet.Annotation","ktast.ast.psi.Converter.convertAnnotationWithoutMapping"]},{"name":"open fun convertAnonymousFunction(v: KtNamedFunction): Node.Expression.AnonymousFunctionExpression","description":"ktast.ast.psi.Converter.convertAnonymousFunction","location":"ast-psi/ktast.ast.psi/-converter/convert-anonymous-function.html","searchKeys":["convertAnonymousFunction","open fun convertAnonymousFunction(v: KtNamedFunction): Node.Expression.AnonymousFunctionExpression","ktast.ast.psi.Converter.convertAnonymousFunction"]},{"name":"open fun convertArrayAccess(v: KtArrayAccessExpression): Node.Expression.IndexedAccessExpression","description":"ktast.ast.psi.Converter.convertArrayAccess","location":"ast-psi/ktast.ast.psi/-converter/convert-array-access.html","searchKeys":["convertArrayAccess","open fun convertArrayAccess(v: KtArrayAccessExpression): Node.Expression.IndexedAccessExpression","ktast.ast.psi.Converter.convertArrayAccess"]},{"name":"open fun convertBinary(v: KtBinaryExpression): Node.Expression.BinaryExpression","description":"ktast.ast.psi.Converter.convertBinary","location":"ast-psi/ktast.ast.psi/-converter/convert-binary.html","searchKeys":["convertBinary","open fun convertBinary(v: KtBinaryExpression): Node.Expression.BinaryExpression","ktast.ast.psi.Converter.convertBinary"]},{"name":"open fun convertBinary(v: KtQualifiedExpression): Node.Expression.BinaryExpression","description":"ktast.ast.psi.Converter.convertBinary","location":"ast-psi/ktast.ast.psi/-converter/convert-binary.html","searchKeys":["convertBinary","open fun convertBinary(v: KtQualifiedExpression): Node.Expression.BinaryExpression","ktast.ast.psi.Converter.convertBinary"]},{"name":"open fun convertBinaryType(v: KtBinaryExpressionWithTypeRHS): Node.Expression.BinaryTypeExpression","description":"ktast.ast.psi.Converter.convertBinaryType","location":"ast-psi/ktast.ast.psi/-converter/convert-binary-type.html","searchKeys":["convertBinaryType","open fun convertBinaryType(v: KtBinaryExpressionWithTypeRHS): Node.Expression.BinaryTypeExpression","ktast.ast.psi.Converter.convertBinaryType"]},{"name":"open fun convertBinaryType(v: KtIsExpression): Node.Expression.BinaryTypeExpression","description":"ktast.ast.psi.Converter.convertBinaryType","location":"ast-psi/ktast.ast.psi/-converter/convert-binary-type.html","searchKeys":["convertBinaryType","open fun convertBinaryType(v: KtIsExpression): Node.Expression.BinaryTypeExpression","ktast.ast.psi.Converter.convertBinaryType"]},{"name":"open fun convertBlock(v: KtBlockExpression): Node.Expression.BlockExpression","description":"ktast.ast.psi.Converter.convertBlock","location":"ast-psi/ktast.ast.psi/-converter/convert-block.html","searchKeys":["convertBlock","open fun convertBlock(v: KtBlockExpression): Node.Expression.BlockExpression","ktast.ast.psi.Converter.convertBlock"]},{"name":"open fun convertBreak(v: KtBreakExpression): Node.Expression.BreakExpression","description":"ktast.ast.psi.Converter.convertBreak","location":"ast-psi/ktast.ast.psi/-converter/convert-break.html","searchKeys":["convertBreak","open fun convertBreak(v: KtBreakExpression): Node.Expression.BreakExpression","ktast.ast.psi.Converter.convertBreak"]},{"name":"open fun convertCall(v: KtCallElement): Node.Expression.CallExpression","description":"ktast.ast.psi.Converter.convertCall","location":"ast-psi/ktast.ast.psi/-converter/convert-call.html","searchKeys":["convertCall","open fun convertCall(v: KtCallElement): Node.Expression.CallExpression","ktast.ast.psi.Converter.convertCall"]},{"name":"open fun convertCallLambdaArg(v: KtLambdaArgument): Node.Expression.CallExpression.LambdaArg","description":"ktast.ast.psi.Converter.convertCallLambdaArg","location":"ast-psi/ktast.ast.psi/-converter/convert-call-lambda-arg.html","searchKeys":["convertCallLambdaArg","open fun convertCallLambdaArg(v: KtLambdaArgument): Node.Expression.CallExpression.LambdaArg","ktast.ast.psi.Converter.convertCallLambdaArg"]},{"name":"open fun convertCallableReference(v: KtCallableReferenceExpression): Node.Expression.CallableReferenceExpression","description":"ktast.ast.psi.Converter.convertCallableReference","location":"ast-psi/ktast.ast.psi/-converter/convert-callable-reference.html","searchKeys":["convertCallableReference","open fun convertCallableReference(v: KtCallableReferenceExpression): Node.Expression.CallableReferenceExpression","ktast.ast.psi.Converter.convertCallableReference"]},{"name":"open fun convertClass(v: KtClassOrObject): Node.Declaration.ClassDeclaration","description":"ktast.ast.psi.Converter.convertClass","location":"ast-psi/ktast.ast.psi/-converter/convert-class.html","searchKeys":["convertClass","open fun convertClass(v: KtClassOrObject): Node.Declaration.ClassDeclaration","ktast.ast.psi.Converter.convertClass"]},{"name":"open fun convertClassBody(v: KtClassBody): Node.Declaration.ClassDeclaration.ClassBody","description":"ktast.ast.psi.Converter.convertClassBody","location":"ast-psi/ktast.ast.psi/-converter/convert-class-body.html","searchKeys":["convertClassBody","open fun convertClassBody(v: KtClassBody): Node.Declaration.ClassDeclaration.ClassBody","ktast.ast.psi.Converter.convertClassBody"]},{"name":"open fun convertClassLiteral(v: KtClassLiteralExpression): Node.Expression.ClassLiteralExpression","description":"ktast.ast.psi.Converter.convertClassLiteral","location":"ast-psi/ktast.ast.psi/-converter/convert-class-literal.html","searchKeys":["convertClassLiteral","open fun convertClassLiteral(v: KtClassLiteralExpression): Node.Expression.ClassLiteralExpression","ktast.ast.psi.Converter.convertClassLiteral"]},{"name":"open fun convertCollLit(v: KtCollectionLiteralExpression): Node.Expression.CollectionLiteralExpression","description":"ktast.ast.psi.Converter.convertCollLit","location":"ast-psi/ktast.ast.psi/-converter/convert-coll-lit.html","searchKeys":["convertCollLit","open fun convertCollLit(v: KtCollectionLiteralExpression): Node.Expression.CollectionLiteralExpression","ktast.ast.psi.Converter.convertCollLit"]},{"name":"open fun convertConst(v: KtConstantExpression): Node.Expression.ConstantLiteralExpression","description":"ktast.ast.psi.Converter.convertConst","location":"ast-psi/ktast.ast.psi/-converter/convert-const.html","searchKeys":["convertConst","open fun convertConst(v: KtConstantExpression): Node.Expression.ConstantLiteralExpression","ktast.ast.psi.Converter.convertConst"]},{"name":"open fun convertContextReceiver(v: KtContextReceiverList): Node.ContextReceiver","description":"ktast.ast.psi.Converter.convertContextReceiver","location":"ast-psi/ktast.ast.psi/-converter/convert-context-receiver.html","searchKeys":["convertContextReceiver","open fun convertContextReceiver(v: KtContextReceiverList): Node.ContextReceiver","ktast.ast.psi.Converter.convertContextReceiver"]},{"name":"open fun convertContinue(v: KtContinueExpression): Node.Expression.ContinueExpression","description":"ktast.ast.psi.Converter.convertContinue","location":"ast-psi/ktast.ast.psi/-converter/convert-continue.html","searchKeys":["convertContinue","open fun convertContinue(v: KtContinueExpression): Node.Expression.ContinueExpression","ktast.ast.psi.Converter.convertContinue"]},{"name":"open fun convertContractEffects(v: KtContractEffectList): Node.PostModifier.Contract.ContractEffects","description":"ktast.ast.psi.Converter.convertContractEffects","location":"ast-psi/ktast.ast.psi/-converter/convert-contract-effects.html","searchKeys":["convertContractEffects","open fun convertContractEffects(v: KtContractEffectList): Node.PostModifier.Contract.ContractEffects","ktast.ast.psi.Converter.convertContractEffects"]},{"name":"open fun convertDeclaration(v: KtDeclaration): Node.Declaration","description":"ktast.ast.psi.Converter.convertDeclaration","location":"ast-psi/ktast.ast.psi/-converter/convert-declaration.html","searchKeys":["convertDeclaration","open fun convertDeclaration(v: KtDeclaration): Node.Declaration","ktast.ast.psi.Converter.convertDeclaration"]},{"name":"open fun convertDoWhile(v: KtDoWhileExpression): Node.Statement.DoWhileStatement","description":"ktast.ast.psi.Converter.convertDoWhile","location":"ast-psi/ktast.ast.psi/-converter/convert-do-while.html","searchKeys":["convertDoWhile","open fun convertDoWhile(v: KtDoWhileExpression): Node.Statement.DoWhileStatement","ktast.ast.psi.Converter.convertDoWhile"]},{"name":"open fun convertEnumEntry(v: KtEnumEntry): Node.Declaration.ClassDeclaration.ClassBody.EnumEntry","description":"ktast.ast.psi.Converter.convertEnumEntry","location":"ast-psi/ktast.ast.psi/-converter/convert-enum-entry.html","searchKeys":["convertEnumEntry","open fun convertEnumEntry(v: KtEnumEntry): Node.Declaration.ClassDeclaration.ClassBody.EnumEntry","ktast.ast.psi.Converter.convertEnumEntry"]},{"name":"open fun convertExpression(v: KtContractEffect): Node.Expression","description":"ktast.ast.psi.Converter.convertExpression","location":"ast-psi/ktast.ast.psi/-converter/convert-expression.html","searchKeys":["convertExpression","open fun convertExpression(v: KtContractEffect): Node.Expression","ktast.ast.psi.Converter.convertExpression"]},{"name":"open fun convertExpression(v: KtExpression): Node.Expression","description":"ktast.ast.psi.Converter.convertExpression","location":"ast-psi/ktast.ast.psi/-converter/convert-expression.html","searchKeys":["convertExpression","open fun convertExpression(v: KtExpression): Node.Expression","ktast.ast.psi.Converter.convertExpression"]},{"name":"open fun convertFor(v: KtForExpression): Node.Statement.ForStatement","description":"ktast.ast.psi.Converter.convertFor","location":"ast-psi/ktast.ast.psi/-converter/convert-for.html","searchKeys":["convertFor","open fun convertFor(v: KtForExpression): Node.Statement.ForStatement","ktast.ast.psi.Converter.convertFor"]},{"name":"open fun convertFuncParam(v: KtParameter): Node.FunctionParam","description":"ktast.ast.psi.Converter.convertFuncParam","location":"ast-psi/ktast.ast.psi/-converter/convert-func-param.html","searchKeys":["convertFuncParam","open fun convertFuncParam(v: KtParameter): Node.FunctionParam","ktast.ast.psi.Converter.convertFuncParam"]},{"name":"open fun convertFuncParams(v: KtParameterList): Node.FunctionParams","description":"ktast.ast.psi.Converter.convertFuncParams","location":"ast-psi/ktast.ast.psi/-converter/convert-func-params.html","searchKeys":["convertFuncParams","open fun convertFuncParams(v: KtParameterList): Node.FunctionParams","ktast.ast.psi.Converter.convertFuncParams"]},{"name":"open fun convertFunction(v: KtNamedFunction): Node.Declaration.FunctionDeclaration","description":"ktast.ast.psi.Converter.convertFunction","location":"ast-psi/ktast.ast.psi/-converter/convert-function.html","searchKeys":["convertFunction","open fun convertFunction(v: KtNamedFunction): Node.Declaration.FunctionDeclaration","ktast.ast.psi.Converter.convertFunction"]},{"name":"open fun convertIf(v: KtIfExpression): Node.Expression.IfExpression","description":"ktast.ast.psi.Converter.convertIf","location":"ast-psi/ktast.ast.psi/-converter/convert-if.html","searchKeys":["convertIf","open fun convertIf(v: KtIfExpression): Node.Expression.IfExpression","ktast.ast.psi.Converter.convertIf"]},{"name":"open fun convertImportAlias(v: KtImportAlias): Node.ImportDirective.ImportAlias","description":"ktast.ast.psi.Converter.convertImportAlias","location":"ast-psi/ktast.ast.psi/-converter/convert-import-alias.html","searchKeys":["convertImportAlias","open fun convertImportAlias(v: KtImportAlias): Node.ImportDirective.ImportAlias","ktast.ast.psi.Converter.convertImportAlias"]},{"name":"open fun convertImportDirective(v: KtImportDirective): Node.ImportDirective","description":"ktast.ast.psi.Converter.convertImportDirective","location":"ast-psi/ktast.ast.psi/-converter/convert-import-directive.html","searchKeys":["convertImportDirective","open fun convertImportDirective(v: KtImportDirective): Node.ImportDirective","ktast.ast.psi.Converter.convertImportDirective"]},{"name":"open fun convertImportNames(v: KtExpression): List<Node.Expression.NameExpression>","description":"ktast.ast.psi.Converter.convertImportNames","location":"ast-psi/ktast.ast.psi/-converter/convert-import-names.html","searchKeys":["convertImportNames","open fun convertImportNames(v: KtExpression): List<Node.Expression.NameExpression>","ktast.ast.psi.Converter.convertImportNames"]},{"name":"open fun convertInit(v: KtAnonymousInitializer): Node.Declaration.ClassDeclaration.ClassBody.Initializer","description":"ktast.ast.psi.Converter.convertInit","location":"ast-psi/ktast.ast.psi/-converter/convert-init.html","searchKeys":["convertInit","open fun convertInit(v: KtAnonymousInitializer): Node.Declaration.ClassDeclaration.ClassBody.Initializer","ktast.ast.psi.Converter.convertInit"]},{"name":"open fun convertKotlinFile(v: KtFile): Node.KotlinFile","description":"ktast.ast.psi.Converter.convertKotlinFile","location":"ast-psi/ktast.ast.psi/-converter/convert-kotlin-file.html","searchKeys":["convertKotlinFile","open fun convertKotlinFile(v: KtFile): Node.KotlinFile","ktast.ast.psi.Converter.convertKotlinFile"]},{"name":"open fun convertLabeled(v: KtLabeledExpression): Node.Expression.LabeledExpression","description":"ktast.ast.psi.Converter.convertLabeled","location":"ast-psi/ktast.ast.psi/-converter/convert-labeled.html","searchKeys":["convertLabeled","open fun convertLabeled(v: KtLabeledExpression): Node.Expression.LabeledExpression","ktast.ast.psi.Converter.convertLabeled"]},{"name":"open fun convertLambda(v: KtLambdaExpression): Node.Expression.LambdaExpression","description":"ktast.ast.psi.Converter.convertLambda","location":"ast-psi/ktast.ast.psi/-converter/convert-lambda.html","searchKeys":["convertLambda","open fun convertLambda(v: KtLambdaExpression): Node.Expression.LambdaExpression","ktast.ast.psi.Converter.convertLambda"]},{"name":"open fun convertLambdaBody(v: KtBlockExpression): Node.Expression.LambdaExpression.LambdaBody","description":"ktast.ast.psi.Converter.convertLambdaBody","location":"ast-psi/ktast.ast.psi/-converter/convert-lambda-body.html","searchKeys":["convertLambdaBody","open fun convertLambdaBody(v: KtBlockExpression): Node.Expression.LambdaExpression.LambdaBody","ktast.ast.psi.Converter.convertLambdaBody"]},{"name":"open fun convertLambdaParam(v: KtParameter): Node.LambdaParam","description":"ktast.ast.psi.Converter.convertLambdaParam","location":"ast-psi/ktast.ast.psi/-converter/convert-lambda-param.html","searchKeys":["convertLambdaParam","open fun convertLambdaParam(v: KtParameter): Node.LambdaParam","ktast.ast.psi.Converter.convertLambdaParam"]},{"name":"open fun convertLambdaParams(v: KtParameterList): Node.LambdaParams","description":"ktast.ast.psi.Converter.convertLambdaParams","location":"ast-psi/ktast.ast.psi/-converter/convert-lambda-params.html","searchKeys":["convertLambdaParams","open fun convertLambdaParams(v: KtParameterList): Node.LambdaParams","ktast.ast.psi.Converter.convertLambdaParams"]},{"name":"open fun convertModifiers(v: KtModifierList): Node.Modifiers","description":"ktast.ast.psi.Converter.convertModifiers","location":"ast-psi/ktast.ast.psi/-converter/convert-modifiers.html","searchKeys":["convertModifiers","open fun convertModifiers(v: KtModifierList): Node.Modifiers","ktast.ast.psi.Converter.convertModifiers"]},{"name":"open fun convertName(v: KtSimpleNameExpression): Node.Expression.NameExpression","description":"ktast.ast.psi.Converter.convertName","location":"ast-psi/ktast.ast.psi/-converter/convert-name.html","searchKeys":["convertName","open fun convertName(v: KtSimpleNameExpression): Node.Expression.NameExpression","ktast.ast.psi.Converter.convertName"]},{"name":"open fun convertName(v: PsiElement): Node.Expression.NameExpression","description":"ktast.ast.psi.Converter.convertName","location":"ast-psi/ktast.ast.psi/-converter/convert-name.html","searchKeys":["convertName","open fun convertName(v: PsiElement): Node.Expression.NameExpression","ktast.ast.psi.Converter.convertName"]},{"name":"open fun convertObject(v: KtObjectLiteralExpression): Node.Expression.ObjectLiteralExpression","description":"ktast.ast.psi.Converter.convertObject","location":"ast-psi/ktast.ast.psi/-converter/convert-object.html","searchKeys":["convertObject","open fun convertObject(v: KtObjectLiteralExpression): Node.Expression.ObjectLiteralExpression","ktast.ast.psi.Converter.convertObject"]},{"name":"open fun convertPackageDirective(v: KtPackageDirective): Node.PackageDirective","description":"ktast.ast.psi.Converter.convertPackageDirective","location":"ast-psi/ktast.ast.psi/-converter/convert-package-directive.html","searchKeys":["convertPackageDirective","open fun convertPackageDirective(v: KtPackageDirective): Node.PackageDirective","ktast.ast.psi.Converter.convertPackageDirective"]},{"name":"open fun convertParent(v: KtSuperTypeListEntry): Node.Declaration.ClassDeclaration.ClassParent","description":"ktast.ast.psi.Converter.convertParent","location":"ast-psi/ktast.ast.psi/-converter/convert-parent.html","searchKeys":["convertParent","open fun convertParent(v: KtSuperTypeListEntry): Node.Declaration.ClassDeclaration.ClassParent","ktast.ast.psi.Converter.convertParent"]},{"name":"open fun convertParenthesized(v: KtParenthesizedExpression): Node.Expression.ParenthesizedExpression","description":"ktast.ast.psi.Converter.convertParenthesized","location":"ast-psi/ktast.ast.psi/-converter/convert-parenthesized.html","searchKeys":["convertParenthesized","open fun convertParenthesized(v: KtParenthesizedExpression): Node.Expression.ParenthesizedExpression","ktast.ast.psi.Converter.convertParenthesized"]},{"name":"open fun convertParents(v: KtSuperTypeList): Node.Declaration.ClassDeclaration.ClassParents","description":"ktast.ast.psi.Converter.convertParents","location":"ast-psi/ktast.ast.psi/-converter/convert-parents.html","searchKeys":["convertParents","open fun convertParents(v: KtSuperTypeList): Node.Declaration.ClassDeclaration.ClassParents","ktast.ast.psi.Converter.convertParents"]},{"name":"open fun convertPostModifiers(v: KtElement): List<Node.PostModifier>","description":"ktast.ast.psi.Converter.convertPostModifiers","location":"ast-psi/ktast.ast.psi/-converter/convert-post-modifiers.html","searchKeys":["convertPostModifiers","open fun convertPostModifiers(v: KtElement): List<Node.PostModifier>","ktast.ast.psi.Converter.convertPostModifiers"]},{"name":"open fun convertPostfix(v: KtPostfixExpression): Node.Expression.PostfixUnaryExpression","description":"ktast.ast.psi.Converter.convertPostfix","location":"ast-psi/ktast.ast.psi/-converter/convert-postfix.html","searchKeys":["convertPostfix","open fun convertPostfix(v: KtPostfixExpression): Node.Expression.PostfixUnaryExpression","ktast.ast.psi.Converter.convertPostfix"]},{"name":"open fun convertPrefix(v: KtPrefixExpression): Node.Expression.PrefixUnaryExpression","description":"ktast.ast.psi.Converter.convertPrefix","location":"ast-psi/ktast.ast.psi/-converter/convert-prefix.html","searchKeys":["convertPrefix","open fun convertPrefix(v: KtPrefixExpression): Node.Expression.PrefixUnaryExpression","ktast.ast.psi.Converter.convertPrefix"]},{"name":"open fun convertPrimaryConstructor(v: KtPrimaryConstructor): Node.Declaration.ClassDeclaration.PrimaryConstructor","description":"ktast.ast.psi.Converter.convertPrimaryConstructor","location":"ast-psi/ktast.ast.psi/-converter/convert-primary-constructor.html","searchKeys":["convertPrimaryConstructor","open fun convertPrimaryConstructor(v: KtPrimaryConstructor): Node.Declaration.ClassDeclaration.PrimaryConstructor","ktast.ast.psi.Converter.convertPrimaryConstructor"]},{"name":"open fun convertProperty(v: KtDestructuringDeclaration): Node.Declaration.PropertyDeclaration","description":"ktast.ast.psi.Converter.convertProperty","location":"ast-psi/ktast.ast.psi/-converter/convert-property.html","searchKeys":["convertProperty","open fun convertProperty(v: KtDestructuringDeclaration): Node.Declaration.PropertyDeclaration","ktast.ast.psi.Converter.convertProperty"]},{"name":"open fun convertProperty(v: KtProperty): Node.Declaration.PropertyDeclaration","description":"ktast.ast.psi.Converter.convertProperty","location":"ast-psi/ktast.ast.psi/-converter/convert-property.html","searchKeys":["convertProperty","open fun convertProperty(v: KtProperty): Node.Declaration.PropertyDeclaration","ktast.ast.psi.Converter.convertProperty"]},{"name":"open fun convertPropertyAccessor(v: KtPropertyAccessor): Node.Declaration.PropertyDeclaration.Accessor","description":"ktast.ast.psi.Converter.convertPropertyAccessor","location":"ast-psi/ktast.ast.psi/-converter/convert-property-accessor.html","searchKeys":["convertPropertyAccessor","open fun convertPropertyAccessor(v: KtPropertyAccessor): Node.Declaration.PropertyDeclaration.Accessor","ktast.ast.psi.Converter.convertPropertyAccessor"]},{"name":"open fun convertPropertyDelegate(v: KtPropertyDelegate): Node.Declaration.PropertyDeclaration.PropertyDelegate","description":"ktast.ast.psi.Converter.convertPropertyDelegate","location":"ast-psi/ktast.ast.psi/-converter/convert-property-delegate.html","searchKeys":["convertPropertyDelegate","open fun convertPropertyDelegate(v: KtPropertyDelegate): Node.Declaration.PropertyDeclaration.PropertyDelegate","ktast.ast.psi.Converter.convertPropertyDelegate"]},{"name":"open fun convertPropertyExpr(v: KtDestructuringDeclaration): Node.Expression.PropertyExpression","description":"ktast.ast.psi.Converter.convertPropertyExpr","location":"ast-psi/ktast.ast.psi/-converter/convert-property-expr.html","searchKeys":["convertPropertyExpr","open fun convertPropertyExpr(v: KtDestructuringDeclaration): Node.Expression.PropertyExpression","ktast.ast.psi.Converter.convertPropertyExpr"]},{"name":"open fun convertPropertyExpr(v: KtProperty): Node.Expression.PropertyExpression","description":"ktast.ast.psi.Converter.convertPropertyExpr","location":"ast-psi/ktast.ast.psi/-converter/convert-property-expr.html","searchKeys":["convertPropertyExpr","open fun convertPropertyExpr(v: KtProperty): Node.Expression.PropertyExpression","ktast.ast.psi.Converter.convertPropertyExpr"]},{"name":"open fun convertReturn(v: KtReturnExpression): Node.Expression.ReturnExpression","description":"ktast.ast.psi.Converter.convertReturn","location":"ast-psi/ktast.ast.psi/-converter/convert-return.html","searchKeys":["convertReturn","open fun convertReturn(v: KtReturnExpression): Node.Expression.ReturnExpression","ktast.ast.psi.Converter.convertReturn"]},{"name":"open fun convertSecondaryConstructor(v: KtSecondaryConstructor): Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor","description":"ktast.ast.psi.Converter.convertSecondaryConstructor","location":"ast-psi/ktast.ast.psi/-converter/convert-secondary-constructor.html","searchKeys":["convertSecondaryConstructor","open fun convertSecondaryConstructor(v: KtSecondaryConstructor): Node.Declaration.ClassDeclaration.ClassBody.SecondaryConstructor","ktast.ast.psi.Converter.convertSecondaryConstructor"]},{"name":"open fun convertStatement(v: KtExpression): Node.Statement","description":"ktast.ast.psi.Converter.convertStatement","location":"ast-psi/ktast.ast.psi/-converter/convert-statement.html","searchKeys":["convertStatement","open fun convertStatement(v: KtExpression): Node.Statement","ktast.ast.psi.Converter.convertStatement"]},{"name":"open fun convertStringTemplate(v: KtStringTemplateExpression): Node.Expression.StringLiteralExpression","description":"ktast.ast.psi.Converter.convertStringTemplate","location":"ast-psi/ktast.ast.psi/-converter/convert-string-template.html","searchKeys":["convertStringTemplate","open fun convertStringTemplate(v: KtStringTemplateExpression): Node.Expression.StringLiteralExpression","ktast.ast.psi.Converter.convertStringTemplate"]},{"name":"open fun convertStringTemplateEntry(v: KtStringTemplateEntry): Node.Expression.StringLiteralExpression.StringEntry","description":"ktast.ast.psi.Converter.convertStringTemplateEntry","location":"ast-psi/ktast.ast.psi/-converter/convert-string-template-entry.html","searchKeys":["convertStringTemplateEntry","open fun convertStringTemplateEntry(v: KtStringTemplateEntry): Node.Expression.StringLiteralExpression.StringEntry","ktast.ast.psi.Converter.convertStringTemplateEntry"]},{"name":"open fun convertSuper(v: KtSuperExpression): Node.Expression.SuperExpression","description":"ktast.ast.psi.Converter.convertSuper","location":"ast-psi/ktast.ast.psi/-converter/convert-super.html","searchKeys":["convertSuper","open fun convertSuper(v: KtSuperExpression): Node.Expression.SuperExpression","ktast.ast.psi.Converter.convertSuper"]},{"name":"open fun convertThis(v: KtThisExpression): Node.Expression.ThisExpression","description":"ktast.ast.psi.Converter.convertThis","location":"ast-psi/ktast.ast.psi/-converter/convert-this.html","searchKeys":["convertThis","open fun convertThis(v: KtThisExpression): Node.Expression.ThisExpression","ktast.ast.psi.Converter.convertThis"]},{"name":"open fun convertThisOrSuperExpression(v: KtConstructorDelegationReferenceExpression): Node.Expression","description":"ktast.ast.psi.Converter.convertThisOrSuperExpression","location":"ast-psi/ktast.ast.psi/-converter/convert-this-or-super-expression.html","searchKeys":["convertThisOrSuperExpression","open fun convertThisOrSuperExpression(v: KtConstructorDelegationReferenceExpression): Node.Expression","ktast.ast.psi.Converter.convertThisOrSuperExpression"]},{"name":"open fun convertThrow(v: KtThrowExpression): Node.Expression.ThrowExpression","description":"ktast.ast.psi.Converter.convertThrow","location":"ast-psi/ktast.ast.psi/-converter/convert-throw.html","searchKeys":["convertThrow","open fun convertThrow(v: KtThrowExpression): Node.Expression.ThrowExpression","ktast.ast.psi.Converter.convertThrow"]},{"name":"open fun convertTry(v: KtTryExpression): Node.Expression.TryExpression","description":"ktast.ast.psi.Converter.convertTry","location":"ast-psi/ktast.ast.psi/-converter/convert-try.html","searchKeys":["convertTry","open fun convertTry(v: KtTryExpression): Node.Expression.TryExpression","ktast.ast.psi.Converter.convertTry"]},{"name":"open fun convertTryCatch(v: KtCatchClause): Node.Expression.TryExpression.CatchClause","description":"ktast.ast.psi.Converter.convertTryCatch","location":"ast-psi/ktast.ast.psi/-converter/convert-try-catch.html","searchKeys":["convertTryCatch","open fun convertTryCatch(v: KtCatchClause): Node.Expression.TryExpression.CatchClause","ktast.ast.psi.Converter.convertTryCatch"]},{"name":"open fun convertType(v: KtContextReceiver): Node.Type","description":"ktast.ast.psi.Converter.convertType","location":"ast-psi/ktast.ast.psi/-converter/convert-type.html","searchKeys":["convertType","open fun convertType(v: KtContextReceiver): Node.Type","ktast.ast.psi.Converter.convertType"]},{"name":"open fun convertType(v: KtElement, targetChildren: List<PsiElement>, mapTarget: KtElement?): Node.Type","description":"ktast.ast.psi.Converter.convertType","location":"ast-psi/ktast.ast.psi/-converter/convert-type.html","searchKeys":["convertType","open fun convertType(v: KtElement, targetChildren: List<PsiElement>, mapTarget: KtElement?): Node.Type","ktast.ast.psi.Converter.convertType"]},{"name":"open fun convertType(v: KtTypeReference): Node.Type","description":"ktast.ast.psi.Converter.convertType","location":"ast-psi/ktast.ast.psi/-converter/convert-type.html","searchKeys":["convertType","open fun convertType(v: KtTypeReference): Node.Type","ktast.ast.psi.Converter.convertType"]},{"name":"open fun convertTypeAlias(v: KtTypeAlias): Node.Declaration.TypeAliasDeclaration","description":"ktast.ast.psi.Converter.convertTypeAlias","location":"ast-psi/ktast.ast.psi/-converter/convert-type-alias.html","searchKeys":["convertTypeAlias","open fun convertTypeAlias(v: KtTypeAlias): Node.Declaration.TypeAliasDeclaration","ktast.ast.psi.Converter.convertTypeAlias"]},{"name":"open fun convertTypeArg(v: KtTypeProjection): Node.TypeArg","description":"ktast.ast.psi.Converter.convertTypeArg","location":"ast-psi/ktast.ast.psi/-converter/convert-type-arg.html","searchKeys":["convertTypeArg","open fun convertTypeArg(v: KtTypeProjection): Node.TypeArg","ktast.ast.psi.Converter.convertTypeArg"]},{"name":"open fun convertTypeArgs(v: KtTypeArgumentList): Node.TypeArgs","description":"ktast.ast.psi.Converter.convertTypeArgs","location":"ast-psi/ktast.ast.psi/-converter/convert-type-args.html","searchKeys":["convertTypeArgs","open fun convertTypeArgs(v: KtTypeArgumentList): Node.TypeArgs","ktast.ast.psi.Converter.convertTypeArgs"]},{"name":"open fun convertTypeConstraint(v: KtTypeConstraint): Node.PostModifier.TypeConstraintSet.TypeConstraint","description":"ktast.ast.psi.Converter.convertTypeConstraint","location":"ast-psi/ktast.ast.psi/-converter/convert-type-constraint.html","searchKeys":["convertTypeConstraint","open fun convertTypeConstraint(v: KtTypeConstraint): Node.PostModifier.TypeConstraintSet.TypeConstraint","ktast.ast.psi.Converter.convertTypeConstraint"]},{"name":"open fun convertTypeConstraints(v: KtTypeConstraintList): Node.PostModifier.TypeConstraintSet.TypeConstraints","description":"ktast.ast.psi.Converter.convertTypeConstraints","location":"ast-psi/ktast.ast.psi/-converter/convert-type-constraints.html","searchKeys":["convertTypeConstraints","open fun convertTypeConstraints(v: KtTypeConstraintList): Node.PostModifier.TypeConstraintSet.TypeConstraints","ktast.ast.psi.Converter.convertTypeConstraints"]},{"name":"open fun convertTypeFunctionParam(v: KtParameter): Node.Type.FunctionType.FunctionTypeParam","description":"ktast.ast.psi.Converter.convertTypeFunctionParam","location":"ast-psi/ktast.ast.psi/-converter/convert-type-function-param.html","searchKeys":["convertTypeFunctionParam","open fun convertTypeFunctionParam(v: KtParameter): Node.Type.FunctionType.FunctionTypeParam","ktast.ast.psi.Converter.convertTypeFunctionParam"]},{"name":"open fun convertTypeFunctionParams(v: KtParameterList): Node.Type.FunctionType.FunctionTypeParams","description":"ktast.ast.psi.Converter.convertTypeFunctionParams","location":"ast-psi/ktast.ast.psi/-converter/convert-type-function-params.html","searchKeys":["convertTypeFunctionParams","open fun convertTypeFunctionParams(v: KtParameterList): Node.Type.FunctionType.FunctionTypeParams","ktast.ast.psi.Converter.convertTypeFunctionParams"]},{"name":"open fun convertTypeParam(v: KtTypeParameter): Node.TypeParam","description":"ktast.ast.psi.Converter.convertTypeParam","location":"ast-psi/ktast.ast.psi/-converter/convert-type-param.html","searchKeys":["convertTypeParam","open fun convertTypeParam(v: KtTypeParameter): Node.TypeParam","ktast.ast.psi.Converter.convertTypeParam"]},{"name":"open fun convertTypeParams(v: KtTypeParameterList): Node.TypeParams","description":"ktast.ast.psi.Converter.convertTypeParams","location":"ast-psi/ktast.ast.psi/-converter/convert-type-params.html","searchKeys":["convertTypeParams","open fun convertTypeParams(v: KtTypeParameterList): Node.TypeParams","ktast.ast.psi.Converter.convertTypeParams"]},{"name":"open fun convertTypeSimpleQualifier(v: KtUserType): Node.Type.SimpleType.SimpleTypeQualifier","description":"ktast.ast.psi.Converter.convertTypeSimpleQualifier","location":"ast-psi/ktast.ast.psi/-converter/convert-type-simple-qualifier.html","searchKeys":["convertTypeSimpleQualifier","open fun convertTypeSimpleQualifier(v: KtUserType): Node.Type.SimpleType.SimpleTypeQualifier","ktast.ast.psi.Converter.convertTypeSimpleQualifier"]},{"name":"open fun convertValueArg(v: KtValueArgument): Node.ValueArg","description":"ktast.ast.psi.Converter.convertValueArg","location":"ast-psi/ktast.ast.psi/-converter/convert-value-arg.html","searchKeys":["convertValueArg","open fun convertValueArg(v: KtValueArgument): Node.ValueArg","ktast.ast.psi.Converter.convertValueArg"]},{"name":"open fun convertValueArgName(v: KtValueArgumentName): Node.Expression.NameExpression","description":"ktast.ast.psi.Converter.convertValueArgName","location":"ast-psi/ktast.ast.psi/-converter/convert-value-arg-name.html","searchKeys":["convertValueArgName","open fun convertValueArgName(v: KtValueArgumentName): Node.Expression.NameExpression","ktast.ast.psi.Converter.convertValueArgName"]},{"name":"open fun convertValueArgs(v: KtInitializerList): Node.ValueArgs","description":"ktast.ast.psi.Converter.convertValueArgs","location":"ast-psi/ktast.ast.psi/-converter/convert-value-args.html","searchKeys":["convertValueArgs","open fun convertValueArgs(v: KtInitializerList): Node.ValueArgs","ktast.ast.psi.Converter.convertValueArgs"]},{"name":"open fun convertValueArgs(v: KtValueArgumentList): Node.ValueArgs","description":"ktast.ast.psi.Converter.convertValueArgs","location":"ast-psi/ktast.ast.psi/-converter/convert-value-args.html","searchKeys":["convertValueArgs","open fun convertValueArgs(v: KtValueArgumentList): Node.ValueArgs","ktast.ast.psi.Converter.convertValueArgs"]},{"name":"open fun convertVariable(v: KtDestructuringDeclarationEntry): Node.Variable","description":"ktast.ast.psi.Converter.convertVariable","location":"ast-psi/ktast.ast.psi/-converter/convert-variable.html","searchKeys":["convertVariable","open fun convertVariable(v: KtDestructuringDeclarationEntry): Node.Variable","ktast.ast.psi.Converter.convertVariable"]},{"name":"open fun convertWhen(v: KtWhenExpression): Node.Expression.WhenExpression","description":"ktast.ast.psi.Converter.convertWhen","location":"ast-psi/ktast.ast.psi/-converter/convert-when.html","searchKeys":["convertWhen","open fun convertWhen(v: KtWhenExpression): Node.Expression.WhenExpression","ktast.ast.psi.Converter.convertWhen"]},{"name":"open fun convertWhenCondition(v: KtWhenCondition): Node.Expression.WhenExpression.WhenCondition","description":"ktast.ast.psi.Converter.convertWhenCondition","location":"ast-psi/ktast.ast.psi/-converter/convert-when-condition.html","searchKeys":["convertWhenCondition","open fun convertWhenCondition(v: KtWhenCondition): Node.Expression.WhenExpression.WhenCondition","ktast.ast.psi.Converter.convertWhenCondition"]},{"name":"open fun convertWhenEntry(v: KtWhenEntry): Node.Expression.WhenExpression.WhenBranch","description":"ktast.ast.psi.Converter.convertWhenEntry","location":"ast-psi/ktast.ast.psi/-converter/convert-when-entry.html","searchKeys":["convertWhenEntry","open fun convertWhenEntry(v: KtWhenEntry): Node.Expression.WhenExpression.WhenBranch","ktast.ast.psi.Converter.convertWhenEntry"]},{"name":"open fun convertWhile(v: KtWhileExpression): Node.Statement.WhileStatement","description":"ktast.ast.psi.Converter.convertWhile","location":"ast-psi/ktast.ast.psi/-converter/convert-while.html","searchKeys":["convertWhile","open fun convertWhile(v: KtWhileExpression): Node.Statement.WhileStatement","ktast.ast.psi.Converter.convertWhile"]},{"name":"open override fun extrasAfter(v: Node): List<Node.Extra>","description":"ktast.ast.psi.ConverterWithExtras.extrasAfter","location":"ast-psi/ktast.ast.psi/-converter-with-extras/extras-after.html","searchKeys":["extrasAfter","open override fun extrasAfter(v: Node): List<Node.Extra>","ktast.ast.psi.ConverterWithExtras.extrasAfter"]},{"name":"open override fun extrasBefore(v: Node): List<Node.Extra>","description":"ktast.ast.psi.ConverterWithExtras.extrasBefore","location":"ast-psi/ktast.ast.psi/-converter-with-extras/extras-before.html","searchKeys":["extrasBefore","open override fun extrasBefore(v: Node): List<Node.Extra>","ktast.ast.psi.ConverterWithExtras.extrasBefore"]},{"name":"open override fun extrasWithin(v: Node): List<Node.Extra>","description":"ktast.ast.psi.ConverterWithExtras.extrasWithin","location":"ast-psi/ktast.ast.psi/-converter-with-extras/extras-within.html","searchKeys":["extrasWithin","open override fun extrasWithin(v: Node): List<Node.Extra>","ktast.ast.psi.ConverterWithExtras.extrasWithin"]},{"name":"open override fun moveExtras(fromNode: Node, toNode: Node)","description":"ktast.ast.psi.ConverterWithMutableExtras.moveExtras","location":"ast-psi/ktast.ast.psi/-converter-with-mutable-extras/move-extras.html","searchKeys":["moveExtras","open override fun moveExtras(fromNode: Node, toNode: Node)","ktast.ast.psi.ConverterWithMutableExtras.moveExtras"]},{"name":"val converter: Converter","description":"ktast.ast.psi.Parser.converter","location":"ast-psi/ktast.ast.psi/-parser/converter.html","searchKeys":["converter","val converter: Converter","ktast.ast.psi.Parser.converter"]},{"name":"val errors: List<PsiErrorElement>","description":"ktast.ast.psi.Parser.ParseError.errors","location":"ast-psi/ktast.ast.psi/-parser/-parse-error/errors.html","searchKeys":["errors","val errors: List<PsiErrorElement>","ktast.ast.psi.Parser.ParseError.errors"]},{"name":"val file: KtFile","description":"ktast.ast.psi.Parser.ParseError.file","location":"ast-psi/ktast.ast.psi/-parser/-parse-error/file.html","searchKeys":["file","val file: KtFile","ktast.ast.psi.Parser.ParseError.file"]}]